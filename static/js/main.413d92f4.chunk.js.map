{"version":3,"sources":["serviceWorker.js","constants.js","reducers.js","actions.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/StatsButton.js","containers/NavBar.js","components/ListItem.js","components/Scroll.js","components/List.js","InboxItems.js","TaskList.js","ProjectList.js","ReferenceList.js","components/NewItemButton.js","components/NewTask.js","components/NewMission.js","components/NewItem.js","components/QuestionAndOptions.js","components/QuestionAndInput.js","containers/Processor.js","components/PrevItemButton.js","components/NextItemButton.js","components/ItemDetails.js","components/DatePicker.js","components/TaskDetails.js","components/ProjectDetails.js","components/BackButton.js","components/ReferenceDetails.js","containers/Details.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","db.js","components/NewItemTile.js","components/TodaysMission.js","containers/Home.js","containers/Stats.js","containers/Main.js","App2.js","index.js"],"names":["Boolean","window","location","hostname","match","PROJECT","TASK","INBOX_ITEM","UNPROCESSED","LOW","initialState","itemID","previousItemID","exp","view","previousView","previousState","selectView","item","type","payload","selectItem","UpdateExp","RestorePreviousState","HomeButton","touchFunction","className","title","onClick","ProjectsButton","TasksButton","InboxButton","StatsButton","connect","state","selectViewReducer","dispatch","changeView","changeItemID","id","props","passTitle","e","checkForTitle","t","parentNode","target","ListItem","name","Date","dueDate","toISOString","substr","taskList","length","requiredContext","entryDate","Scroll","style","overflowY","overflowX","children","List","content","filter","missionTasks","map","entry","i","key","dueToday","status","todaysTasks","dailyEx","frequency","dailyTasks","filteredContent","ListItems","InboxItems","description","TaskList","timeSpent","priority","outcomeRecordID","outcome","note","timeRequired","associatedProjectID","requirements","ProjectList","output","outputRecordID","timeRemaining","nextAction","task","ReferenceList","NewItemButton","selectItemReducer","onTouch","updateExp","today","useState","setName","setOutcome","setRequiredContext","setNote","setDueDate","setPriority","setFrequency","setRequirements","associatedProject","setAssociatedProject","Task","d","this","getTime","onSubmit","event","console","log","unshift","preventDefault","placeholder","value","onChange","htmlFor","min","disabled","defaultValue","purpose","setPurpose","Mission","principles","m","submitFunction","setType","Item","submitNewItem","displayTypeForm","QuestionAndOptions","question","yes","no","QuestionandInput","answer","setAnswer","nextItemID","itemIndex","isDelegatable","Project","goal","setInterval","timeNow","isActionable","setIsActionable","action","setAction","isMultistep","setIsMultistep","isDoneInFive","setIsDoneInFive","setIsDelegatable","step","setStep","nextID","setNextID","processNextItem","makeNewTask","splice","updateStatus","proceed","proj","makeNewProject","PrevItemButton","selectAnother","prevID","currentID","NextItemButton","ItemDetails","indx","readyToProcess","setReadyToProcess","DatePicker","date","setdate","changeDate","setchangeDate","useEffect","onBlur","UpdateExpReducer","position","db","setrequiredContext","setoutcome","setdueDate","setnote","rows","cols","RestorePreviousStateReducer","restorePreviousState","project","projectTasks","tasks","j","push","getTasks","checkForID","reference","Details","itemType","prev","next","parseInt","BackButton","ProjectDetails","TaskDetails","ReferenceDetails","StatsOverview","TaskOverview","ProjectsOverview","InboxOverview","concat","NewItemTile","TodaysMission","gotoItem","Stats","indexOf","NewItem","rootReducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kSAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gBCHOC,EAAU,UACVC,EAAO,OACPC,EAAa,aAQbC,EAAc,cAUdC,EAAM,MCjCbC,EAAe,CACjBC,OAAQ,EACRC,eAAgB,EAChBC,IAAK,EACLC,KDGoB,WCFpBC,aDEoB,WCDpBC,cAAe,ICNNC,EAAa,SAACC,GACvB,MAAO,CACPC,KFHuB,cEIvBC,QAASF,IAeAG,EAAa,SAACV,GACvB,MAAO,CACPQ,KFjBuB,cEkBvBC,QAAST,IAGAW,EAAY,SAACT,GACtB,MAAO,CACPM,KF1BsB,aE2BtBC,QAASP,IAGAU,EAAuB,SAACP,GACjC,MAAO,CACPG,KF5BkC,yBE6BlCC,QAASJ,ICjCE,SAASQ,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,cACjC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,WAAWC,QAASH,GAC5G,wBAAIC,UAAU,MAAd,MCHG,SAASG,EAAT,GAA0C,IAAjBJ,EAAgB,EAAhBA,cACpC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,WAAWC,QAASH,GAC5G,wBAAIC,UAAU,MAAd,MCHG,SAASI,EAAT,GAAyC,IAAlBL,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCHG,SAASK,EAAT,GAAyC,IAAlBN,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCHG,SAASM,EAAT,GAAyC,IAAlBP,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCmDGO,mBA/CS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,SAIX,SAACsB,GACxB,MAAO,CACHC,WAAY,SAACV,GACT,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAmCxBN,EA9Bf,SAAgBO,GAAQ,IACZH,EAA8BG,EAA9BH,WAAYC,EAAkBE,EAAlBF,aACpB,SAASG,EAAUC,IAMf,SAASC,EAAcC,GACfA,EAAEjB,OACFU,EAAWO,EAAEjB,OACbW,EAAa,KAEbM,EAAIA,EAAEC,WACNF,EAAcC,IAPtBD,CADWD,EAAEI,QAajB,OACI,yBAAKpB,UAAU,sBACX,kBAACF,EAAD,CAAYC,cAAegB,IAC3B,kBAACV,EAAD,CAAaN,cAAegB,IAC5B,kBAACX,EAAD,CAAaL,cAAegB,IAC5B,kBAACZ,EAAD,CAAgBJ,cAAegB,IAC/B,kBAACT,EAAD,CAAaP,cAAegB,Q,MC/CzB,SAASM,EAAT,GAA4C,IAAvBtB,EAAsB,EAAtBA,cAAeP,EAAO,EAAPA,KAE/C,OAAOA,EAAKC,MACR,KAAKd,EACD,OACI,yBAAKqB,UAAU,uEAAuEa,GAAIrB,EAAKqB,GAAIX,QAASH,GACxG,yBAAKC,UAAU,SACX,uBAAGA,UAAU,mBAAmBR,EAAK8B,MACrC,uBAAGtB,UAAU,aAAb,QAAgC,IAAIuB,KAAK/B,EAAKgC,SAAUC,cAAcC,OAAO,EAAG,IAAhF,YAA8FlC,EAAKmC,SAASC,SAEhH,6BACI,uBAAG5B,UAAU,cAAb,SAIhB,KAAKpB,EACD,OACI,yBAAKoB,UAAU,uEAAuEa,GAAIrB,EAAKqB,GAAIX,QAASH,GACxG,yBAAKC,UAAU,QACf,uBAAGA,UAAU,mBAAmBR,EAAK8B,MACrC,uBAAGtB,UAAU,aAAaR,EAAKqC,kBAE/B,6BACI,uBAAG7B,UAAU,cAAb,SAIhB,KAAKnB,EACD,OACI,yBAAKmB,UAAU,uEAAuEa,GAAIrB,EAAKqB,GAAIX,QAASH,GACxG,yBAAKC,UAAU,QACf,uBAAGA,UAAU,mBAAmBR,EAAK8B,MACrC,uBAAGtB,UAAU,aAAc,IAAIuB,KAAK/B,EAAKsC,WAAYL,cAAcC,OAAO,EAAG,MAE7E,yBAAK1B,UAAU,OACX,uBAAGA,UAAU,sBAAb,aAIhB,QACI,OACI,yBAAKA,UAAU,KAAKC,MAAM,WAAWC,QAASH,GAC1C,gDC5CL,SAASgC,EAAOjB,GAC3B,OACI,yBAAKd,UAAU,QAAQgC,MAAO,CAACC,UAAW,SAAUC,UAAW,WAC1DpB,EAAMqB,UCAJ,SAASC,EAAT,GAAmD,IAAnCrC,EAAkC,EAAlCA,cAAesC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAI7CC,EAAeF,EAAQG,KAAI,SAACC,EAAMC,GACpC,OAAO,kBAACrB,EAAD,CAAU7B,KAAM6C,EAAQK,GAAI3C,cAAeA,EAAe4C,IAAKN,EAAQK,GAAG7B,QAI/E+B,EAAWP,EAAQC,QAAO,SAACG,GAAD,OAC1BA,EAAMjB,WAAY,IAAID,MAAOE,cAAcC,OAAO,EAAG,KXe3C,SWfoDe,EAAMI,UACpEC,EAAcF,EAASJ,KAAI,SAACC,EAAMC,GACpC,OAAO,kBAACrB,EAAD,CAAU7B,KAAMoD,EAASF,GAAI3C,cAAeA,EAAe4C,IAAKN,EAAQK,GAAG7B,QAKhFkC,EAAUV,EAAQC,QAAO,SAACG,GAAD,MXsBd,UWtB0BA,EAAMO,aAC3CC,EAAaF,EAAQP,KAAI,SAACC,EAAOC,GACnC,OAAO,kBAACrB,EAAD,CAAU7B,KAAMuD,EAAQL,GAAI3C,cAAeA,EAAe4C,IAAKN,EAAQK,GAAG7B,QAKjFpB,EAAO,GACX,OAAO6C,GACH,IXlBa,QWmBT7C,EAAOb,EACX,MACA,IXxBgB,WWyBZa,EAAOd,EACP,MACJ,IXlBkB,aWmBdc,EXlBa,YWmBb,MACJ,QACIA,EAAOZ,EAGf,IAAMqE,EAAkBb,EAAQC,QAAO,SAACG,GAAD,OAAYA,EAAMhD,OAASA,KAE5D0D,EAAYD,EAAgBV,KAAI,SAACC,EAAMC,GACzC,OAAO,kBAACrB,EAAD,CAAU7B,KAAM0D,EAAgBR,GAAI3C,cAAeA,EAAe4C,IAAKN,EAAQK,GAAG7B,QAO7F,OAAOyB,GACH,IXhBa,QWiBT,OACI,kBAACP,EAAD,KACKe,GAGb,IXjBa,QWkBT,OACI,kBAACf,EAAD,KACKkB,GAGb,IX7Be,UW8BX,OACI,kBAAClB,EAAD,KACKQ,GAGb,QACI,OACI,kBAACR,EAAD,KACKoB,IC1Ed,IAAMC,EAAa,CACtB,CACI3D,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEZ,CACIW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEZ,CACIW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEX,CACGW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEX,CACGW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEX,CACGW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEX,CACGW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEX,CACGW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEZ,CACIW,KAAMZ,EACNgC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN+B,YAAa,4BACbR,OAAQ/D,GAEZ,CACIW,KAAMZ,EACNgC,GAAI,GACJiB,UAAW,WACXR,KAAM,kBACN+B,YAAa,4BACbR,OAAQ/D,IC/EHwE,EAAW,CACpB,CACI7D,KAAMb,EACNiC,GAAI,cACJiB,UAAW,GACXe,OAAQ,UACRG,UAAW,EACXO,UAAW,EACXC,SAAWzE,EACX0E,gBAAiB,EACjBnC,KAAM,eACNoC,QAAS,sBACT7B,gBAAiB,qBACjB8B,KAAM,yBACNnC,SAAS,IAAID,MAAOE,cAAcC,OAAO,EAAG,IAC5CkC,aAAc,IACdC,oBAAqB,cACrBC,aAAc,gBACd3E,IAAK,IAET,CACIM,KAAMb,EACNiC,GAAI,cACJiB,UAAW,GACXe,OAAQ,UACRG,UAAW,EACXO,UAAW,EACXC,SAAWzE,EACX0E,gBAAiB,EACjBnC,KAAM,eACNoC,QAAS,sBACT7B,gBAAiB,qBACjB8B,KAAM,yBACNnC,QAAS,cACToC,aAAc,IACdC,oBAAqB,cACrBC,aAAc,gBACd3E,IAAK,IAET,CACIM,KAAMb,EACNiC,GAAI,cACJiB,UAAW,GACXe,OAAQ,UACRG,UbFa,QaGbO,UAAW,EACXC,SAAWzE,EACX0E,gBAAiB,EACjBnC,KAAM,eACNoC,QAAS,sBACT7B,gBAAiB,qBACjB8B,KAAM,yBACNnC,QAAS,cACToC,aAAc,IACdC,oBAAqB,cACrBC,aAAc,gBACd3E,IAAK,IAET,CACIM,KAAMb,EACNiC,GAAI,cACJiB,UAAW,GACXe,OAAQ,UACRG,UbrBa,QasBbO,UAAW,EACXC,SAAWzE,EACX0E,gBAAiB,EACjBnC,KAAM,cACNoC,QAAS,wCACT7B,gBAAiB,qBACjB8B,KAAM,yBACNnC,QAAS,cACToC,aAAc,IACdC,oBAAqB,cACrBC,aAAc,gBACd3E,IAAK,IAET,CACIM,KAAMb,EACNiC,GAAI,cACJiB,UAAW,GACXe,OAAQ,UACRG,UAAW,EACXO,UAAW,EACXC,SAAWzE,EACX0E,gBAAiB,EACjBnC,KAAM,YACNoC,QAAS,wCACT7B,gBAAiB,qBACjB8B,KAAM,yBACNnC,QAAS,cACToC,aAAc,IACdC,oBAAqB,cACrBC,aAAc,gBACd3E,IAAK,KC9FA4E,EAAc,CACvB,CACItE,KAAMd,EACNkC,GAAI,cACJ1B,IAAK,GACLmC,KAAM,wBACNqC,KAAM,kBACND,QAAS,4EACTM,OAAQ,wCACRC,eAAgB,KAChBzC,QAAS,WACToC,aAAc,QACdM,cAAe,QACfrB,OdSiB,YcRjBsB,WAAY,CACRtD,GAAI,GACJuD,KAAM,wBACNJ,OAAQ,yCAEZrC,SAAU,CAAE,cAAe,gBAE/B,CACIlC,KAAMd,EACNkC,GAAI,cACJ1B,IAAK,GACLmC,KAAM,YACNqC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBzC,QAAS,WACToC,aAAc,QACdM,cAAe,QACfrB,OdXiB,YcYjBsB,WAAY,CACRtD,GAAI,GACJuD,KAAM,yBAEVzC,SAAU,CAAE,gBAEhB,CACIlC,KAAMd,EACNkC,GAAI,cACJ1B,IAAK,GACLmC,KAAM,YACNqC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBzC,QAAS,WACToC,aAAc,QACdM,cAAe,QACfrB,OAAQ,cACRsB,WAAY,CACRtD,GAAI,GACJuD,KAAM,yBAEVzC,SAAU,CAAE,gBAEhB,CACIlC,KAAMd,EACNkC,GAAI,cACJ1B,IAAK,GACLmC,KAAM,YACNqC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBzC,QAAS,WACToC,aAAc,QACdM,cAAe,QACfrB,OAAQ,cACRsB,WAAY,CACRtD,GAAI,GACJuD,KAAM,yBAEVzC,SAAU,CAAE,gBAEhB,CACIlC,KAAMd,EACNkC,GAAI,cACJ1B,IAAK,GACLmC,KAAM,YACNqC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBzC,QAAS,WACToC,aAAc,QACdM,cAAe,QACfrB,OAAQ,cACRsB,WAAY,CACRtD,GAAI,GACJuD,KAAM,yBAEVzC,SAAU,KCjGL0C,EAAgB,G,MCGd,SAASC,EAAT,GAA2C,IAAlBvE,EAAiB,EAAjBA,cACpC,OACI,yBAAKC,UAAU,gDAAgDC,MhBa/C,WgBbgEC,QAASH,GACrF,wBAAIC,UAAU,uBAAd,M,kBC+FGO,mBA/FS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BH,OAAQuB,EAAM+D,kBAAkBtF,WAIb,SAACyB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAkFxBN,EA7Ef,YAA+C,IAA5BK,EAA2B,EAA3BA,aAAc6D,EAAa,EAAbA,UAEzBC,GAAQ,IAAInD,MAAOE,cAAcC,OAAO,EAAG,IAFL,EAIhBiD,mBAAS,IAJO,mBAIlCrD,EAJkC,KAI5BsD,EAJ4B,OAKVD,mBAAS,IALC,mBAKlCjB,EALkC,KAKzBmB,EALyB,OAMMF,mBAAS,IANf,mBAMlC9C,EANkC,KAMjBiD,EANiB,OAOhBH,mBAAS,IAPO,mBAOlChB,EAPkC,KAO5BoB,EAP4B,OAQVJ,mBAASD,GARC,mBAQlClD,EARkC,KAQzBwD,EARyB,OASRL,mBAAS,IATD,mBASlCnB,EATkC,KASxByB,EATwB,OAUNN,mBAAS,GAVH,mBAUlC3B,EAVkC,KAUvBkC,EAVuB,OAWAP,mBAAS,IAXT,mBAWlCb,EAXkC,KAWpBqB,EAXoB,OAYUR,mBAAS,IAZnB,mBAYlCS,EAZkC,KAYfC,EAZe,KAcpCC,EACF,aAAe,oBACX,IAAMC,EAAG,IAAIhE,KAEb2D,EAAa,GACbG,EAAqB,IAErBG,KAAK/F,KAAOb,EACZ4G,KAAK3E,GAAK0E,EAAEE,UACZD,KAAK1D,UAAYyD,EAAEE,UACnBD,KAAK3C,OjBrBM,UiBsBX2C,KAAKhC,SAAWA,EAChBgC,KAAKxC,UAAYA,EACjBwC,KAAKjC,UAAY,EACjBiC,KAAK/B,gBAAkB,EACvB+B,KAAKlE,KAAOA,EACZkE,KAAK9B,QAAUA,EACf8B,KAAK3D,gBAAkBA,EACvB2D,KAAK7B,KAAOA,EACZ6B,KAAKhE,QAAUA,EACfgE,KAAK5B,aAAe,EACpB4B,KAAK1B,aAAeA,EACpB0B,KAAKJ,kBAAoBA,EACzBI,KAAKrG,IAAM,IAenB,OACI,yBAAKa,UAAU,8CACX,wBAAIA,UAAU,MAAd,YACA,0BAAM0F,SAdd,SAAuBC,GACnB,IAAIzE,EAAI,IAAIoE,EACZM,QAAQC,IAAI3E,GACZoC,EAASwC,QAAQ5E,GACjBuD,EAAU,GACV7D,EAAaM,EAAEL,IACf8E,EAAMI,kBAQ6B/F,UAAU,mBAAmBC,MAAOrB,GAC/D,2BAAOa,KAAK,OAAOuG,YAAY,OAAOC,MAAO3E,EAAM4E,SAAU,SAAClF,GAAD,OAAM4D,EAAQ5D,EAAEI,OAAO6E,UACpF,2BAAOxG,KAAK,OAAOuG,YAAY,UAAUC,MAAOvC,EAASwC,SAAU,SAAClF,GAAD,OAAO6D,EAAW7D,EAAEI,OAAO6E,UAC9F,8BAAUD,YAAY,mBAAmBC,MAAOpE,EAAiBqE,SAAU,SAAClF,GAAD,OAAO8D,EAAmB9D,EAAEI,OAAO6E,UAC9G,8BAAUD,YAAY,OAAOC,MAAOtC,EAAMuC,SAAU,SAAClF,GAAD,OAAO+D,EAAQ/D,EAAEI,OAAO6E,UAC5E,2BAAOE,QAAQ,WAAWnG,UAAU,IAApC,aACA,2BAAOa,GAAG,WAAWpB,KAAK,OAAO2G,IAAK1B,EAAOuB,MAAOzE,EAAS0E,SAAU,SAAClF,GAAD,OAAOgE,EAAWhE,EAAEI,OAAO6E,UAClG,4BAAQpF,GAAG,WAAWoF,MAAOzC,EAAU0C,SAAU,SAAClF,GAAD,OAAMiE,EAAYjE,EAAEI,OAAO6E,SACxE,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,cAAY,GAAtC,YACA,4BAAQL,MAAOlH,GAAf,OACA,4BAAQkH,MjBrDN,UiBqDF,UACA,4BAAQA,MjBrDR,QiBqDA,SAEJ,8BAAUD,YAAY,eAAeC,MAAOnC,EAAcoC,SAAU,SAAClF,GAAD,OAAOmE,EAAgBnE,EAAEI,OAAO6E,UAGpG,2BAAOxG,KAAK,SAASwG,MAAM,gBCS5B1F,mBAlGS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BH,OAAQuB,EAAM+D,kBAAkBtF,WAIb,SAACyB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAqFxBN,EAhFf,YAAkD,IAA5BK,EAA2B,EAA3BA,aAAc6D,EAAa,EAAbA,UAE5BC,GAAQ,IAAInD,MAAOE,cAAcC,OAAO,EAAG,IAFF,EAInBiD,mBAAS,IAJU,mBAIrCrD,EAJqC,KAI/BsD,EAJ+B,OAKbD,mBAAS,IALI,mBAKrC4B,EALqC,KAK5BC,EAL4B,OAMb7B,mBAAS,IANI,mBAMrCjB,EANqC,KAM5BmB,EAN4B,OAOnBF,mBAAS,IAPU,mBAOrChB,EAPqC,KAO/BoB,EAP+B,OAQbJ,mBAASD,GARI,mBAQrClD,EARqC,KAQ5BwD,EAR4B,OASXL,mBAAS,IATE,mBASrCnB,EATqC,KAS3ByB,EAT2B,OAUTN,mBAAS,GAVA,mBAUrC3B,EAVqC,KAU1BkC,EAV0B,OAWHP,mBAAS,IAXN,mBAWrCb,EAXqC,KAWvBqB,EAXuB,KAevCsB,EACF,aAAe,oBACX,IAAMlB,EAAG,IAAIhE,KAEbiE,KAAK/F,KAAOd,EACZ6G,KAAK3E,GAAK0E,EAAEE,UACZD,KAAK1D,UAAYyD,EAAEE,UACnBD,KAAK3C,OlBnBM,UkBoBX2C,KAAKhC,SAAWA,EAChBgC,KAAKxC,UAAYA,EACjBwC,KAAKjC,UAAY,EACjBiC,KAAK/B,gBAAkB,EACvB+B,KAAKlE,KAAOA,EACZkE,KAAKe,QAAUA,EACff,KAAK9B,QAAUA,EACf8B,KAAKkB,WAAa,GAClBlB,KAAK7B,KAAOA,EACZ6B,KAAKhE,QAAUA,EACfgE,KAAK5B,aAAe,EACpB4B,KAAK1B,aAAeA,EACpB0B,KAAK7D,SAAW,GAChB6D,KAAKrG,IAAM,IAmBnB,OACI,yBAAKa,UAAU,8CACX,wBAAIA,UAAU,MAAd,eACA,0BAAM0F,SAlBd,SAAuBC,GAEnB,IAAIgB,EAAI,IAAIF,EACZb,QAAQC,IAAIc,GAEZ5C,EAAY+B,QAAQa,GACpBlC,EAAU,GACV7D,EAAa+F,EAAE9F,IACf8E,EAAMI,iBACNb,EAAa,IASsBlF,UAAU,mBAAmBC,MlB5CjD,WkB6CP,2BAAOR,KAAK,OAAOuG,YAAY,OAAOC,MAAO3E,EAAM4E,SAAU,SAAClF,GAAD,OAAM4D,EAAQ5D,EAAEI,OAAO6E,UACpF,2BAAOxG,KAAK,OAAOuG,YAAY,UAAUC,MAAOvC,EAASwC,SAAU,SAAClF,GAAD,OAAO6D,EAAW7D,EAAEI,OAAO6E,UAC9F,8BAAUD,YAAY,sCAAsCC,MAAOM,EAASL,SAAU,SAAClF,GAAD,OAAOwF,EAAWxF,EAAEI,OAAO6E,UACjH,8BAAUD,YAAY,OAAOC,MAAOtC,EAAMuC,SAAU,SAAClF,GAAD,OAAO+D,EAAQ/D,EAAEI,OAAO6E,UAC5E,2BAAOE,QAAQ,WAAWnG,UAAU,IAApC,aACA,2BAAOa,GAAG,WAAWpB,KAAK,OAAO2G,IAAK1B,EAAOuB,MAAOzE,EAAS0E,SAAU,SAAClF,GAAD,OAAOgE,EAAWhE,EAAEI,OAAO6E,UAClG,4BAAQpF,GAAG,WAAWoF,MAAOzC,EAAU0C,SAAU,SAAClF,GAAD,OAAMiE,EAAYjE,EAAEI,OAAO6E,SACxE,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,cAAY,GAAtC,YACA,4BAAQL,MAAOlH,GAAf,OACA,4BAAQkH,MlBxDN,UkBwDF,UACA,4BAAQA,MlBxDR,QkBwDA,SAEJ,8BAAUD,YAAY,eAAeC,MAAOnC,EAAcoC,SAAU,SAAClF,GAAD,OAAOmE,EAAgBnE,EAAEI,OAAO6E,UAGpG,2BAAOxG,KAAK,SAASwG,MAAM,gBCxE5B1F,eAlBS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BH,OAAQuB,EAAM+D,kBAAkBtF,WAIb,SAACyB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAKxBN,EAGf,YAAoE,EAAjDqG,eAAkD,IAAlCxH,EAAiC,EAAjCA,KAAMqF,EAA2B,EAA3BA,UAAW7D,EAAgB,EAAhBA,aAAgB,EAEtC+D,mBAASvF,GAF6B,mBAExDK,EAFwD,KAElDoH,EAFkD,OAGtClC,mBAAS,mBAH6B,mBAGxDrD,EAHwD,KAGlDsD,EAHkD,SAY1DkC,EACF,WAAYxF,GAAyB,4EACjC,IAAMiE,EAAG,IAAIhE,KAEbiE,KAAK/F,KAAOZ,EACZ2G,KAAK3E,GAAK0E,EAAEE,UACZD,KAAK1D,UAAYyD,EAAEE,UACnBD,KAAKlE,KAAOA,EACZkE,KAAKnC,YAAc,GACnBmC,KAAK3C,OAAS/D,GAKtB,SAASiI,EAAcpB,GACnB,GAAY,oBAATrE,GAAuC,KAATA,EAAa,CAC1CsE,QAAQC,IAAI,eACZ,IAAInD,EAAI,IAAIoE,EAAKxF,GACjB8B,EAAW0C,QAAQpD,GACnBkD,QAAQC,IAAInD,GACZ+B,EAAU,GACV7D,EAAa8B,EAAE7B,IA1BnBgG,EAAQhI,GACR+F,EAAQ,mBA4BJe,EAAMI,iBAEVJ,EAAMI,iBAuBV,OACI,yBAAK/F,UAAU,aACX,4BAAQA,UAAU,cAAcE,QAAS,SAACc,GAAD,OAAM6F,EnB9EtC,WmB8ET,SACA,4BAAQ7G,UAAU,cAAcE,QAAS,SAACc,GAAD,OAAM6F,EAAQjI,KAAvD,QACA,4BAAQoB,UAAU,cAAcE,QAAS,SAACc,GAAD,OAAM6F,EnBxDpC,amBwDX,WACA,4BAAQ7G,UAAU,cAAcE,QAAS,SAACc,GAAD,OAAM6F,EAAQ7F,EAAEI,OAAO6E,SAAhE,OACA,4BAAQjG,UAAU,cAAcE,QAAS,SAACc,GAAD,OAAM6F,EAAQ7F,EAAEI,OAAO6E,SAAhE,WA1BR,WACI,QAAO,GACH,KAAKxG,IAASb,EACV,OAAO,kBAAC,EAAD,CAAS6F,UAAWA,IAC/B,InBpCW,YmBoCNhF,EACD,OAAO,kBAAC,EAAD,CAAYgF,UAAWA,IAClC,QACI,OACI,yBAAKzE,UAAU,sCACX,wBAAIA,UAAU,aAAd,YACA,0BAAM0F,SAAUqB,EAAe/G,UAAU,mBAAmBC,MnBlE/D,SmBmEO,2BAAOR,KAAK,OAAOyG,SAAU,SAAClF,GAAD,OAAM4D,EAAQ5D,EAAEI,OAAO6E,QAAQD,YAAY,qBAAqBhG,UAAU,YAEvG,2BAAOP,KAAK,SAASwG,MAAM,cAc1Ce,OC/FE,SAASC,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,IAAKC,EAAM,EAANA,GACxD,OACI,yBAAKpH,UAAU,qDACX,wBAAIA,UAAU,gBAAgBkH,GAC9B,6BACI,4BAAQlH,UAAU,SAASE,QAASiH,GAApC,OACA,4BAAQnH,UAAU,SAASE,QAASkH,GAApC,QCND,SAASC,EAAT,GAAyD,IAA7BH,EAA4B,EAA5BA,SAAUN,EAAkB,EAAlBA,eAAkB,EAErCjC,mBAAS,IAF4B,mBAE3D2C,EAF2D,KAEnDC,EAFmD,KAcnE,OACI,yBAAKvH,UAAU,2EACX,wBAAIA,UAAU,gBAAgBkH,GAC9B,0BAAMxB,SAbd,SAAgBC,GAEC,KAAV2B,IACCV,EAAeU,GACfC,EAAU,KAEd5B,EAAMI,mBAQE,2BAAOtG,KAAK,OAAOwG,MAAOqB,EAAQpB,SAAU,SAAClF,GAAD,OAAMuG,EAAUvG,EAAEI,OAAO6E,UACrE,2BAAOxG,KAAK,SAASwG,MAAM,aC8N5B1F,mBAtOS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BH,OAAQuB,EAAM+D,kBAAkBtF,WAIb,SAACyB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAyNxBN,EApNf,YAAkF,IAA7DiH,EAA4D,EAA5DA,WAAYhI,EAAgD,EAAhDA,KAAqBoB,GAA2B,EAA1Cb,cAA0C,EAA3Ba,cAAc6G,EAAa,EAAbA,UAE1DnC,EACF,WAAYhE,EAAKoC,EAASgE,EAAe7F,GAAkB,oBACvD,IAAM0D,EAAI,IAAIhE,KACdiE,KAAK/F,KAAOb,EACZ4G,KAAK3E,GAAK0E,EAAEE,UACZD,KAAKlE,KAAOA,EACZkE,KAAK3D,gBAAkBA,EACvB2D,KAAKnC,YAAc,GACnBmC,KAAK9B,QAAUA,EACf8B,KAAKvB,eAAiB,EACtBuB,KAAK5B,aAAe,KACpB4B,KAAK3C,OtBjBM,UsBkBX2C,KAAKkC,cAAgBA,EACrBlC,KAAKJ,kBAAoB,GACzBI,KAAKhE,SAAW,IAAID,MAAQE,cAAcC,OAAO,EAAG,KAItDiG,EACF,WAAYrG,EAAMsG,GAAO,IAAD,2BACpB,IAAMrC,EAAI,IAAIhE,KACdiE,KAAK/F,KAAOd,EACZ6G,KAAK3E,GAAK0E,EAAEE,UACZD,KAAKlE,KAAOA,EACZkE,KAAKnC,YAAc,GACnBmC,KAAKoC,KAAOA,EACZpC,KAAK9B,QAAUA,EACf8B,KAAKvB,eAAiB,KACtBuB,KAAKhE,QAAW,IAAID,KAAMgE,EAAEE,UAAY,QAAchE,cAAcC,OAAO,EAAG,IAC9E8D,KAAK5B,aAAe,OACpB4B,KAAKtB,cAAgB2D,aAAY,WAC7B,IAAIC,GAAW,IAAIvG,MAAQkE,UAC3B,OAAQ,EAAKjE,QAAUsG,IACxB,GACHtC,KAAK3C,OtB3CQ,YsB4Cb2C,KAAKrB,WAAa,GAClBqB,KAAK7D,SAAW,IAtCqD,EAqE7CgD,mBAAS,IArEoC,mBAqErEjB,EArEqE,KAqE5DmB,EArE4D,OAsE7BF,mBAAS,IAtEoB,mBAsErE9C,EAtEqE,KAsEpDiD,EAtEoD,OAuEnCH,mBAAS,MAvE0B,mBAuErEoD,EAvEqE,KAuEvDC,EAvEuD,OAwE/CrD,mBAAS,IAxEsC,mBAwErEsD,EAxEqE,KAwE7DC,EAxE6D,OAyErCvD,mBAAS,MAzE4B,mBAyErEwD,EAzEqE,KAyExDC,EAzEwD,OA0EnCzD,mBAAS,MA1E0B,mBA0ErE0D,EA1EqE,KA0EvDC,EA1EuD,OA2EjC3D,mBAAS,MA3EwB,mBA2ErE+C,EA3EqE,KA2EtDa,EA3EsD,OA4EnD5D,mBAAS,GA5E0C,mBA4ErE6D,EA5EqE,KA4E/DC,EA5E+D,OA6E/C9D,mBAAS,GA7EsC,mBA6ErE+D,GA7EqE,KA6E7DC,GA7E6D,KA+E7E,SAASC,GAAgB5H,GACrByH,EAAQ,GAYZ,SAASI,KACL,IAAIzE,EAAO,IAAIkB,EAAM2C,EAAQvE,EAASgE,EAAe7F,GACrDyB,EAASwC,QAAQ1B,GAEjBhB,EAAW0F,OAAOrB,EAAU,GAC5BkB,GAAUvE,EAAKvD,IAInB,SAASkI,KACLvJ,EAAKqD,OtB3GY,YsB8GrB,SAASmG,KACLP,EAASD,EAAK,GAkBlB,OAXIhJ,EAAKqD,SAAW/D,GAAwB,IAAT0J,GAC/BQ,MAUG,GACH,KAAgB,IAATR,EACH,OACI,yBAAKxI,UAAU,mDACX,kBAACiH,EAAD,CAAoBC,SAAS,sBAAsBC,IAAK,WAAQa,GAAgB,GAAOgB,MAAa5B,GAAI,WAAQY,GAAgB,GAV5IxI,EAAKC,KtBjIY,YsBkIjBsJ,KACA3F,EAAW0F,OAAOrB,EAAU,GAC5BpD,EAAcyB,QAAQtG,GAOiJwJ,SAGvK,KAAwB,IAAjBjB,GAAmC,IAATS,EAEjC,OACI,yBAAKxI,UAAU,iFACX,wBAAIA,UAAU,gBAAd,gCACA,4BAAQA,UAAU,SAASa,GAAI2G,EAAYtH,QAAS0I,IAApD,qBACA,4BAAQ5I,UAAU,SAASa,GAAI2G,EAAYtH,QAAS,kBAAMU,EAAapB,EAAKqB,MAA5E,cAGR,KAAwB,IAAjBkH,GAAkC,IAATS,EAC5B,OACI,yBAAKxI,UAAU,mDACX,kBAACqH,EAAD,CAAkBH,SAAS,8BAA8BN,eAAgB,SAACU,GAAazC,EAAWyC,GAAS0B,SAGvH,KAAgB,IAATR,EACH,OACI,yBAAKxI,UAAU,mDACX,kBAACqH,EAAD,CAAkBH,SAAS,0BAA0BN,eAAgB,SAACU,GAAaY,EAAUZ,GAAS0B,SAGlH,KAAgB,IAATR,EACH,OACI,yBAAKxI,UAAU,mDACX,kBAACiH,EAAD,CAAoBC,SAAS,8CAA8CC,IAAK,WAAQiB,GAAe,GAAOY,KAvE9H,WACI,IAAIC,EAAO,IAAItB,EAASM,EAAQvE,GAChCK,EAAY+B,QAAQmD,GACpBF,KACA3F,EAAW0F,OAAOrB,EAAU,GAC5BkB,GAAUM,EAAKpI,IAkEuHqI,IAAqB9B,GAAI,WAAQgB,GAAe,GAAQY,SAG9L,KAAuB,IAAhBb,GAAiC,IAATK,EAE3B,OACI,yBAAKxI,UAAU,iFACX,wBAAIA,UAAU,gBAAd,gCACA,4BAAQA,UAAU,SAASa,GAAI2G,EAAYtH,QAAS0I,IAApD,qBACA,4BAAQ5I,UAAU,SAASa,GAAI2G,EAAYtH,QAAS,kBAAMU,EAAa8H,MAAvE,iBAGZ,KAAuB,IAAhBP,GAAkC,IAATK,EAC5B,OACI,yBAAKxI,UAAU,mDACX,kBAACiH,EAAD,CAAoBC,SAAS,2CAA2CC,IAAK,WAAQmB,GAAgB,GAAOU,MAAa5B,GAAI,WAAQkB,GAAgB,GAAQU,SAGzK,KAAuB,IAAjBX,GAAkC,IAATG,EAC3B,OACI,yBAAKxI,UAAU,mDACX,4CACA,qCACA,wIACA,4BAAQA,UAAU,SAASE,QAAS,WAAQ6I,KAAgBN,EAAQ,GArEhF7H,EAAapB,EAAKqB,MAqEN,SAGZ,KAAwB,IAAjBwH,GAAmC,IAATG,EAC7B,OACI,yBAAKxI,UAAU,mDACX,kBAACqH,EAAD,CAAkBH,SAAS,kCAAkCN,eAAgB,SAACU,GAAaxC,EAAmBwC,GAAS0B,SAInI,KAAgB,IAATR,EACH,OACI,yBAAKxI,UAAU,mDACX,kBAACiH,EAAD,CAAoBC,SAAS,8BAA8BC,IAAK,WAAQoB,GAAiB,GAAOM,KAAeG,MAAc5B,GAAI,WAAQmB,GAAiB,GAAQM,KAAeG,SAG7L,KAAgB,IAATR,EACH,OACI,yBAAKxI,UAAU,gFACX,wBAAIA,UAAU,gBAAd,6BACA,4BAAQA,UAAU,SAASa,GAAI2G,EAAYtH,QAAU0I,IAArD,qBACA,4BAAQ5I,UAAU,SAASa,GAAI2G,EAAYtH,QAAS,kBAAMU,EAAa8H,MAAvE,cAGZ,QACI,OACI,yBAAK1I,UAAU,mDACX,4BAAQA,UAAU,SAASa,GAAI2G,EAAYtH,QAAS0I,IAApD,0BC3OL,SAASO,EAAT,GAA8D,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,OAEpD,OAFwE,EAAZC,YAE3CD,EAET,yBAAKrJ,UAAU,gDAAgDE,QAAS,kBAAMkJ,EAAcC,KACxF,wBAAIrJ,UAAU,uBAAd,SAKJ,yBAAKA,UAAU,2DACX,wBAAIA,UAAU,sBAAd,SCXD,SAASuJ,EAAT,GAA8D,IAApCH,EAAmC,EAAnCA,cAAeV,EAAoB,EAApBA,OACpD,OADwE,EAAZY,YAC3CZ,EAET,yBAAK1I,UAAU,gDAAgDE,QAAS,kBAAMkJ,EAAcV,KACxF,wBAAI1I,UAAU,uBAAd,SAKJ,yBAAKA,UAAU,2DACX,wBAAIA,UAAU,sBAAd,SCLD,SAASwJ,EAAT,GAOX,IAPuF,IAMnFC,EAN8B5I,EAAoD,EAApDA,GAAId,EAAgD,EAAhDA,cAAeqJ,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,OAAQX,EAAU,EAAVA,OAAU,EAExC/D,oBAAS,GAF+B,mBAE9E+E,EAF8E,KAE9DC,EAF8D,KAIlFnK,EAAO,GACPgI,EAAa,KAER9E,EAAE,EAAGA,EAAEU,EAAWxB,OAAQc,IAE/B,GAAIU,EAAWV,GAAG7B,KAAOA,EAAG,CACzBrB,EAAO4D,EAAWV,GAClB+G,EAAO/G,EAEH8E,EADApE,EAAWV,EAAE,GACAU,EAAWV,EAAE,GAAG7B,GAEnB,EAEd,MAMP,OAAO6I,GACH,KAAK,EACD,OACI,6BACI,wBAAI1J,UAAU,eAAd,SAAmCR,EAAK8B,MACxC,wBAAItB,UAAU,aAAd,eAAwC,IAAIuB,KAAK/B,EAAKsC,WAAYL,cAAcC,OAAO,EAAG,IAA1F,KAEA,yBAAK1B,UAAU,iFACX,4BAAQE,QAAS,kBAAKyJ,GAAkB,KAAxC,iBAEJ,kBAACrF,EAAD,CAAevE,cAAeA,IAC9B,yBAAKC,UAAU,iCACX,kBAACmJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQA,EAAQC,UAAWzI,IACzE,kBAAC0I,EAAD,CAAgBH,cAAeA,EAAeV,OAAQA,EAAQY,UAAWzI,MAIzF,QACI,OACI,6BACI,wBAAIb,UAAU,eAAd,SAAmCR,EAAK8B,MACxC,wBAAItB,UAAU,aAAd,eAAwC,IAAIuB,KAAK/B,EAAKsC,WAAYL,cAAcC,OAAO,EAAG,IAA1F,KACA,6BACA,kBAAC,EAAD,CAAWlC,KAAMA,EAAMgI,WAAYA,EAAYzH,cAAeA,EAAe0H,UAAWgC,MCnD7F,SAASG,EAAT,GAAuC,IAAjBpK,EAAgB,EAAhBA,KAAMgC,EAAU,EAAVA,QAAU,EACvBmD,mBAAS,IAAIpD,KAAKC,GAASC,cAAcC,OAAO,EAAG,KAD5B,mBACzCmI,EADyC,KACnCC,EADmC,OAEXnF,oBAAS,GAFE,mBAEzCoF,EAFyC,KAE7BC,EAF6B,KAWjD,OALAC,qBAAU,WACNH,EAAQ,IAAIvI,KAAKC,GAASC,cAAcC,OAAO,EAAG,KAClDsI,GAAc,KACf,CAACxI,GANY,IAQTuI,GACH,KAAK,EACD,OACI,6BACI,2BAAOtK,KAAK,OAAO6G,aAAcuD,EAAM3D,SAAU,SAAClF,GAAM8I,EAAQ9I,EAAEI,OAAO6E,QAAWiE,OAAQ,WAAM1K,EAAKgC,QAAQqI,EAAMG,GAAc,IAAShK,UAAU,iCAGlK,QACI,OACA,wBAAIA,UAAU,YAAYE,QAAS,kBAAM8J,GAAc,KAAvD,QAAoE,IAAIzI,KAAK/B,EAAKgC,SAASC,cAAcC,OAAO,EAAG,IAAnH,MCfZ,IAuBenB,eAvBS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BC,aAAcmB,EAAMC,kBAAkBpB,aACtCJ,OAAQuB,EAAM+D,kBAAkBtF,OAChCE,IAAKqB,EAAM2J,iBAAiBhL,QAIT,SAACuB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,KAE/B4D,UAAW,SAACtF,GACR,OAAOuB,EAASd,EAAUT,QAKvBoB,EAGf,YAMI,IANoD,IAIhD6J,EAJevJ,EAAgC,EAAhCA,GAAKD,EAA2B,EAA3BA,aAAc6D,EAAa,EAAbA,UAEhC4F,EAAK/G,EACPc,EAAO,GAGF1B,EAAE,EAAGA,EAAE2H,EAAGzI,OAAQc,IAEvB,GAAI2H,EAAG3H,GAAG7B,KAAOA,EAAG,CACjBuD,EAAOiG,EAAG3H,GACV0H,EAAW1H,EACX,MAX4C,MA0BzBiC,mBAASP,EAAK9C,MA1BW,mBA0B3CA,EA1B2C,KA0BrCsD,EA1BqC,OA2BHD,mBAASP,EAAKvC,iBA3BX,mBA2B3CA,EA3B2C,KA2B1ByI,EA3B0B,OA4BnB3F,mBAASP,EAAKV,SA5BK,mBA4B3CA,EA5B2C,KA4BlC6G,EA5BkC,OA6BnB5F,mBAASP,EAAK5C,SA7BK,mBA6B3CA,EA7B2C,KA6BlCgJ,EA7BkC,OA8BT7F,mBAASP,EAAKR,cA9BL,gCA+BzBe,mBAASP,EAAKT,OA/BW,mBA+B3CA,EA/B2C,KA+BrC8G,EA/BqC,KA2CnD,OAVAR,qBAAU,WACNrF,EAAQR,EAAK9C,MACbgJ,EAAmBlG,EAAKvC,iBACxB0I,EAAWnG,EAAKV,SAChB+G,EAAQrG,EAAKT,MACb6G,EAAWpG,EAAK5C,WACjB,CAAC4C,EAAK9C,KAAM8C,EAAKvC,gBAAiBuC,EAAKV,QAASU,EAAKT,KAAMS,EAAK5C,UAK/D,yBAAKxB,UAAU,IACX,6BACI,yBAAKA,UAAU,iBAGX,2BAAOP,KAAK,OAAOyG,SAAU,SAAClF,GAAM4D,EAAQ5D,EAAEI,OAAO6E,QAAWiE,OAAQ,kBAAK9F,EAAK9C,KAAKA,GAAM2E,MAAO3E,EAAMtB,UAAU,kCACpH,2BAAOP,KAAK,OAAOyG,SAAU,SAAClF,GAAMsJ,EAAmBtJ,EAAEI,OAAO6E,QAAWiE,OAAQ,kBAAK9F,EAAKvC,gBAAgBA,GAAiBoE,MAAOpE,EAAiB7B,UAAU,iCAEpK,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,aAAd,aAEA,8BAAU0K,KAAK,IAAIC,KAAK,KAAKzE,SAAU,SAAClF,GAAMuJ,EAAWvJ,EAAEI,OAAO6E,QAAWiE,OAAQ,kBAAK9F,EAAKV,QAAQA,GAASuC,MAAOvC,EAAS1D,UAAU,sCAE9I,yBAAKA,UAAU,sCAEX,wBAAIA,UAAU,aAAd,kBAA0CoE,EAAKR,cAC/C,kBAACgG,EAAD,CAAYpK,KAAM4E,EAAM5C,QAASA,KAIrC,yBAAKxB,UAAU,sCACX,wBAAIA,UAAU,aAAd,WAAmCoE,EAAKvB,QACxC,wBAAI7C,UAAU,aAAd,8BAEJ,wBAAIA,UAAU,+BAAd,QACA,yBAAKA,UAAU,OAEX,8BAAU0K,KAAK,IAAIC,KAAK,KAAKzE,SAAU,SAAClF,GAAMyJ,EAAQzJ,EAAEI,OAAO6E,QAAWiE,OAAS,kBAAK9F,EAAKT,KAAKA,GAAOsC,MAAOtC,EAAM3D,UAAU,iCAEpI,4BAAQA,UAAU,SAASE,QA1DvC,cA0DY,SACA,4BAAQF,UAAU,SAASE,QAvDvC,WACIkE,EAAKvB,O3BvBO,O2BwBZS,EAASwF,OAAOsB,EAAS,GACzB3F,EAAUL,EAAKjF,KACfyB,EAAa,KAmDL,aCpGhB,IA2BeL,eA3BS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BC,aAAcmB,EAAMC,kBAAkBpB,aACtCJ,OAAQuB,EAAM+D,kBAAkBtF,OAChCE,IAAKqB,EAAM2J,iBAAiBhL,IAC5BG,cAAekB,EAAMoK,4BAA4BtL,kBAI9B,SAACoB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,KAE/B4D,UAAW,SAACtF,GACR,OAAOuB,EAASd,EAAUT,KAE9B0L,qBAAsB,SAACvL,GACnB,OAAOoB,EAASb,EAAqBP,QAKlCiB,EAEf,YAA0D,IAAhCuK,EAA+B,EAA/BA,QAAelK,GAAgB,EAAtBxB,KAAsB,EAAhBwB,cAmCrC,IAAMmK,EAhBN,WACI,IAAIC,EAAQ,GACZ,GAAGF,EAAQnJ,WAAa,GACpB,IAAI,IAAIe,EAAE,EAAGA,EAAEoI,EAAQnJ,SAASC,OAAQc,IACpC,IAAI,IAAIuI,EAAE,EAAGA,EAAE3H,EAAS1B,OAAQqJ,IAC5B,GAAGH,EAAQnJ,SAASe,KAAOY,EAAS2H,GAAGpK,GAAI,CACvCmK,EAAME,KAAK5H,EAAS2H,IACpB,MAMhB,OADArF,QAAQC,IAAImF,GACLA,EAGUG,GAErB,OACI,6BACI,yBAAKnL,UAAU,iBACX,wBAAIA,UAAU,mBAAmB8K,EAAQxJ,MACzC,wBAAItB,UAAU,aAAa8K,EAAQrL,OAEvC,yBAAKO,UAAU,iBACX,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAa8K,EAAQpH,QAAnC,MAEJ,yBAAK1D,UAAU,iBACX,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAa8K,EAAQvE,QAAnC,MAEJ,yBAAKvG,UAAU,sCACX,wBAAIA,UAAU,aAAd,QAAgC8K,EAAQtJ,QAAxC,KACA,wBAAIxB,UAAU,aAAd,kBAA0C8K,EAAQlH,eAEtD,yBAAK5D,UAAU,sCACX,wBAAIA,UAAU,aAAd,WAAmC8K,EAAQjI,QAC3C,wBAAI7C,UAAU,aAAd,8BAEJ,wBAAIA,UAAU,+BAAd,SACA,yBAAKA,UAAU,OACX,kBAACoC,EAAD,CAAMC,QAAS0I,EAAczI,O5B3DtB,U4B2DuCvC,cA1D1D,SAAiBiB,IAMb,SAASoK,EAAYlK,GACbA,EAAEL,GACFD,EAAaM,EAAEL,KAEfK,EAAIA,EAAEC,WACNiK,EAAYlK,IANpBkK,CADWpK,EAAEI,gBCvCrB,IAyBeb,eAzBS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BC,aAAcmB,EAAMC,kBAAkBpB,aACtCJ,OAAQuB,EAAM+D,kBAAkBtF,OAChCC,eAAgBsB,EAAM+D,kBAAkBrF,eACxCC,IAAKqB,EAAM2J,iBAAiBhL,IAC5BG,cAAekB,EAAMoK,4BAA4BtL,kBAI9B,SAACoB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,KAE/BgK,qBAAsB,SAACvL,GACnB,OAAOoB,EAASb,EAAqBP,QAKlCiB,EAIf,YAAsH,EAAhGsK,qBAAgG,EAA1EvL,cAA2E,IAA5DsB,EAA2D,EAA3DA,aAAqDC,GAAM,EAA7C2D,QAA6C,EAApCnF,aAAoC,EAAtBH,eAAsB,EAAN2B,IAO5G,OACI,yBAAKb,UAAU,gDAAgDE,QANnE,WAEIU,EAAaC,KAKT,wBAAIb,UAAU,uBAAd,SCrCZ,IAuBeO,eAvBS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BC,aAAcmB,EAAMC,kBAAkBpB,aACtCJ,OAAQuB,EAAM+D,kBAAkBtF,OAChCE,IAAKqB,EAAM2J,iBAAiBhL,QAIT,SAACuB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,KAE/B4D,UAAW,SAACtF,GACR,OAAOuB,EAASd,EAAUT,QAKvBoB,EAGf,YAMI,IANyD,IAAjCM,EAAgC,EAAhCA,GAElBwJ,GAFkD,EAA3BzJ,aAA2B,EAAb6D,UAEhCJ,GACPgH,EAAY,GAGP3I,EAAE,EAAGA,EAAE2H,EAAGzI,OAAQc,IAEvB,GAAI2H,EAAG3H,GAAG7B,KAAOA,EAAG,CACjBwK,EAAYhB,EAAG3H,GAEf,MAKP,OACI,6BACI,6BACI,yBAAK1C,UAAU,iBACX,wBAAIA,UAAU,mBAAmBqL,EAAU/J,MAC3C,wBAAItB,UAAU,aAAd,WAAmCqL,EAAUxI,SAEjD,wBAAI7C,UAAU,+BAAd,eACA,yBAAKA,UAAU,OACX,uBAAGA,UAAU,aAAaqL,EAAUhI,mBC7CzC,SAASiI,EAAT,GAOX,IAP2F,IACvFC,EAAU/L,EADiB6C,EAA2D,EAA3DA,QAASpD,EAAkD,EAAlDA,OAAQc,EAA0C,EAA1CA,cAAe0E,EAA2B,EAA3BA,UAAW2E,EAAgB,EAAhBA,cAEtEoC,EAAOvM,EACPwM,EAAOxM,EACPoL,EAAKhI,EACHxB,EAAK6K,SAASzM,GAEXyD,EAAE,EAAGA,EAAE2H,EAAGzI,OAAQc,IAEvB,GAAI2H,EAAG3H,GAAG7B,KAAOA,EAAG,CACpB0K,EAAWlB,EAAG3H,GAAGjD,KACjBD,EAAO6K,EAAG3H,GAEN2H,EAAG3H,EAAE,IAAO2H,EAAG3H,EAAE,GAAGjD,OAAS8L,IAC7BC,EAAOnB,EAAG3H,EAAE,GAAG7B,IAEfwJ,EAAG3H,EAAE,IAAO2H,EAAG3H,EAAE,GAAGjD,OAAS8L,IAC7BE,EAAOpB,EAAG3H,EAAE,GAAG7B,IAEnB,MAKJ,OAAO0K,GACH,KAAK5M,EACD,OACI,yBAAKqB,UAAU,uCACX,kBAAC2L,EAAD,CAAY9K,GAAI,IAChB,kBAAC+K,EAAD,CAAgBd,QAAStL,EAAMO,cAAeA,EAAe0E,UAAWA,IACxE,yBAAKzE,UAAU,iCACX,kBAACmJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQmC,EAAMlC,UAAWrK,IACvE,kBAACsK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQ+C,EAAMnC,UAAWrK,MAKvF,KAAKL,EACD,OACI,yBAAKoB,UAAU,6CACX,kBAAC2L,EAAD,CAAY9K,GAAI,IAChB,wBAAIb,UAAU,aAAd,QACA,kBAAC6L,EAAD,CAAahL,GAAI6K,SAASzM,KAC1B,yBAAKe,UAAU,iCACX,kBAACmJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQmC,EAAMlC,UAAWrK,IACvE,kBAACsK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQ+C,EAAMnC,UAAWrK,MAIvF,KAAKJ,EACD,OACI,yBAAKmB,UAAU,6CACX,kBAAC2L,EAAD,CAAY9K,GAAI,IAChB,wBAAIb,UAAU,aAAd,cACA,kBAACwJ,EAAD,CAAa3I,GAAI6K,SAASzM,GAASc,cAAeA,EAAeqJ,cAAeA,EAAeC,OAAQmC,EAAM9C,OAAQ+C,KAGjI,I/BhDiB,Y+BiDb,OACI,yBAAKzL,UAAU,6CACX,kBAAC2L,EAAD,CAAY9K,GAAI,IAChB,wBAAIb,UAAU,aAAd,aACA,kBAAC8L,EAAD,CAAkBjL,GAAI6K,SAASzM,KAC/B,yBAAKe,UAAU,iCACX,kBAACmJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQmC,EAAMlC,UAAWrK,IACvE,kBAACsK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQ+C,EAAMnC,UAAWrK,MAIvF,QACI,OACI,yBAAKe,UAAU,iDACX,kBAAC2L,EAAD,MACA,wBAAI3L,UAAU,cAAd,SACA,6CACA,kBAACsE,EAAD,CAAevE,cAAeA,MCjEnCgM,MAnBf,YAAgD,IAAvBhM,EAAsB,EAAtBA,cAAeZ,EAAO,EAAPA,IAEpC,OACI,6BAASa,UAAU,oCAAoCC,MAAM,QAAQC,QAASH,GAC1E,yBAAKC,UAAU,kBACX,8BACA,wBAAIA,UAAU,UAAd,eACA,wBAAIA,UAAU,gBAAd,YACA,wBAAIA,UAAU,YAAd,QAA+Bb,GAC/B,yBAAKa,UAAU,SACX,wBAAIA,UAAU,QAAd,mBACA,wBAAIA,UAAU,eAAd,gBACA,wBAAIA,UAAU,OAAd,gBCCLgM,MAZf,YAA0C,IAAlBjM,EAAiB,EAAjBA,cAEpB,OACI,6BAASC,UAAU,uCAAuCC,MAAM,QAAQC,QAASH,GAC7E,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,mBAAoBsD,EAAS1B,WCO5CqK,MAZf,YAA6C,IAAjBlM,EAAgB,EAAhBA,cAExB,OACI,6BAASC,UAAU,uCAAuCC,MAAM,WAAWC,QAASH,GAChF,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAd,YACA,wBAAIA,UAAU,mBAAoB+D,EAAYnC,WCK/CsK,OAZf,YAA2C,IAAlBnM,EAAiB,EAAjBA,cAErB,OACI,6BAASC,UAAU,2CAA2CC,MAAM,QAAQC,QAASH,GACjF,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAWoD,EAAWxB,QACpC,wBAAI5B,UAAU,mBAAd,YCLHqK,GAAKjH,EAAW+I,OAAOpI,EAAaT,GCDlC,SAAS8I,GAAT,GAAyC,IAAlBrM,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,+DAA+DC,MrCa9D,WqCb+EC,QAASH,GACpG,yBAAKC,UAAU,OACX,wBAAIA,UAAU,IAAd,kBCMDqM,OATf,YAA2C,IAAlBtM,EAAiB,EAAjBA,cAErB,OACI,yBAAKC,UAAU,mEAAmEC,MtCgCrE,QsChCmFC,QAASH,GACrG,wBAAIC,UAAU,MAAd,UAA0B,6BAA1B,aC0GGO,oBAnGS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BH,OAAQuB,EAAM+D,kBAAkBtF,OAChCE,IAAKqB,EAAM2J,iBAAiBhL,QAIT,SAACuB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,QAqFxBN,EAhFf,SAAcO,GAAQ,IAEV0D,EAA+B1D,EAA/B0D,QAAS5D,EAAsBE,EAAtBF,aAAczB,EAAQ2B,EAAR3B,IAiB/B,SAAS4B,EAAUC,IAGf,SAASC,EAAeC,GAChBA,EAAEjB,MACDuE,EAAQtD,EAAEjB,QAEXiB,EAAIA,EAAEC,WACNF,EAAeC,IANvBD,CADWD,EAAEI,QAWjB,OACI,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAeD,cAAegB,EAAW5B,IAAKA,KAElD,yBAAKa,UAAU,6BACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAkBD,cAAegB,KAErC,yBAAKf,UAAU,YACX,kBAAC,EAAD,CAAcD,cAAegB,MAGrC,yBAAKf,UAAU,uBACX,kBAACoM,GAAD,CAAarM,cAAegB,KAEhC,yBAAKf,UAAU,4BACX,yBAAKA,UAAU,mBACZ,kBAAC,GAAD,CAAeD,cAAegB,EAAWuL,SAAU1L,KAEtD,yBAAKZ,UAAU,eACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gEAAgEC,MvC5CtF,QuC4CoGC,QAASa,GAClG,wBAAIf,UAAU,MAAd,qBAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gEAA+DC,MAAM,aAAaC,QAASa,GACtG,wBAAIf,UAAU,MAAd,iBAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBAAiBE,QA7DpD,WAEI,IAAK,IAAIwC,EAAE,EAAGA,EAAE2H,GAAGzI,OAAQc,IAAI,CAC3B,GAAI2H,GAAG3H,GAAGjD,OAASZ,GAAcwL,GAAG3H,GAAGG,SAAW/D,EAAa,CAC3D8B,EAAayJ,GAAG3H,GAAG7B,IACnB2D,EvC7BK,SuC8BL,MAEA5D,EAAa,GACb4D,EvCjCK,YuCsFO,yBAAKxE,UAAU,oEACX,wBAAIA,UAAU,MAAd,UAA0B,6BAA1B,WAGR,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAeD,cAAegB,YCvG3C,SAASwL,KACpB,OACI,yBAAKvM,UAAU,2DACX,wBAAIA,UAAU,MAAd,UCgJGO,oBApIS,SAAAC,GACpB,MAAO,CACHpB,KAAMoB,EAAMC,kBAAkBrB,KAC9BC,aAAcmB,EAAMC,kBAAkBpB,aACtCJ,OAAQuB,EAAM+D,kBAAkBtF,OAChCE,IAAKqB,EAAM2J,iBAAiBhL,QAIT,SAACuB,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,KAE/BW,aAAc,SAACC,GACX,OAAOH,EAASf,EAAWkB,KAE/B4D,UAAW,SAACtF,GACR,OAAOuB,EAASd,EAAUT,QAkHvBoB,EA3Gf,SAAcO,GAAQ,IAIdrB,EAFIL,EAAsE0B,EAAtE1B,KAAMH,EAAgE6B,EAAhE7B,OAAQuF,EAAwD1D,EAAxD0D,QAAS5D,EAA+CE,EAA/CF,aAAcvB,EAAiCyB,EAAjCzB,aAAcoF,EAAmB3D,EAAnB2D,UAAWtF,EAAQ2B,EAAR3B,IAItE,OAAOE,GACH,IzCpCa,QyCqCTI,EAAOb,EACX,MACA,IzC1CgB,WyC2CZa,EzCfW,UyCoBnB,IAAM4K,EAAKjH,EAAW+I,OAAOpI,EAAaT,EAAUe,GAkBpD,SAAStD,EAAUC,IAGf,SAASC,EAAeC,GAChBA,EAAEjB,MACDuE,EAAQtD,EAAEjB,QAEXiB,EAAIA,EAAEC,WACNF,EAAeC,IANvBD,CADWD,EAAEI,QAcjB,QAAQ,GACJ,IzCjFa,UyCiFPhC,EACF,OACI,kBAACmN,GAAD,MAER,KAA8B,IAPpB,CzCvEM,WARA,WAGH,QACA,QAyBA,QAKA,QAzBK,cyC6EPC,QAAQpN,GACf,MAAe,MAAXH,GAA6B,IAAXA,EzC/EV,ayCgFJG,EAEI,yBAAKY,UAAU,aACX,yBAAKA,UAAU,SACX,oCAAUb,IAEd,yBAAKa,UAAU,QACX,kBAACyM,EAAD,CAAS7F,eAAgB7F,EAAW3B,KAAMK,EAAMgF,UAAWA,MAMnE,yBAAKzE,UAAU,SACX,yBAAKA,UAAU,QACX,oCAAUb,IAEd,yBAAKa,UAAU,YACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,qBAAqBZ,GACnC,yBAAKY,UAAU,UACX,kBAACoC,EAAD,CAAMC,QAASgI,EAAI/H,OAAQlD,EAAMW,cA3DrE,SAAiBiB,IAMb,SAASoK,EAAYlK,GACbA,EAAEL,GACFD,EAAaM,EAAEL,KAEfK,EAAIA,EAAEC,WACNiK,EAAYlK,IANpBkK,CADWpK,EAAEI,YAyDe,yBAAKpB,UAAU,mCACX,kBAACsE,EAAD,CAAevE,cAAegB,QAUlD,yBAAKf,UAAU,cACP,yBAAKA,UAAU,QACX,oCAAUb,IAEd,yBAAKa,UAAU,YACX,kBAACsL,EAAD,CAASjJ,QAASgI,EAAIpL,OAAQA,EAAQmK,cAAexI,MAK7E,QACI,OACI,kBAAC,GAAD,UC9GDL,oBA3BY,SAACG,GACxB,MAAO,CACH8D,QAAS,SAACvE,GACN,OAAOS,EAASnB,EAAWU,QAwBxBM,EAnBf,SAAcO,GAEVmJ,qBAAU,eAFO,IAMTzF,EAAY1D,EAAZ0D,QAGR,OACI,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,OAEJ,kBAAC,EAAD,CAAQD,cAAeyE,QChB7BkI,GAAcC,YAAgB,CAAClM,kB1CWJ,WAAoC,IAAnCD,EAAkC,uDAA5BxB,EAAciJ,EAAc,uDAAP,GACzD,OAAOA,EAAOxI,MACV,IDzBmB,cC2Bf,OAAOmN,OAAOC,OAAO,GAAIrM,EAAO,CAACpB,KAAM6I,EAAOvI,QAASL,aAAcmB,EAAMpB,KAAME,cAAekB,IACpG,QACI,OAAOA,I0CjBqC+D,kB1C2BvB,WAAoC,IAAnC/D,EAAkC,uDAA5BxB,EAAciJ,EAAc,uDAAP,GACzD,OAAOA,EAAOxI,MACV,IDrCmB,cCsCf,OAAOmN,OAAOC,OAAO,GAAIrM,EAAO,CAACvB,OAAQgJ,EAAOvI,QAASR,eAAgBsB,EAAMvB,OAAQK,cAAekB,IAC1G,QACI,OAAOA,I0ChCwD2J,iB1CwC3C,WAAoC,IAAnC3J,EAAkC,uDAA5BxB,EAAciJ,EAAc,uDAAP,GACxD,OAAOA,EAAOxI,MACV,IDrDkB,aCsDd,OAAOmN,OAAOC,OAAO,GAAIrM,EAAO,CAACrB,IAAMqB,EAAMrB,IAAM8I,EAAOvI,UAC9D,QACI,OAAOc,I0C7C0EoK,4B1CFlD,WAAoC,IAAnCpK,EAAkC,uDAA5BxB,EAAciJ,EAAc,uDAAP,GACnE,OAAOA,EAAOxI,MACV,IDP8B,yBCQ1B,GAAGe,EAAMlB,gBAAkB,GACvB,MAEA,OAAOsN,OAAOC,OAAO,GAAIrM,EAAMlB,eAEvC,QACI,OAAOkB,M0CNbsM,GAASC,yBACTC,GAAQC,YAAYP,GAAaQ,YAAgBJ,KAEvDK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAASA,IACnB,kBAAC,GAAD,QAGFM,SAASC,eAAe,S5C4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnI,QAAQmI,MAAMA,EAAMC,c","file":"static/js/main.413d92f4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Actions\r\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const UPDATE_EXP = 'UPDATE_EXP';\r\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const RESTORE_PREVIOUS_STATE = 'RESTORE_PREVIOUS_STATE';\r\n//\r\n\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\nexport const PROJECT = 'PROJECT';\r\nexport const TASK = 'TASK';\r\nexport const INBOX_ITEM = 'INBOX_ITEM';\r\nexport const NEW_ITEM = 'NEW_ITEM';\r\nexport const REFERENCES = 'REFERENCES';\r\nexport const REFERENCE = 'REFERENCE';\r\n\r\n// Status constants\r\n//STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\nexport const UNPLANNED = 'UNPLANNED';\r\nexport const UNPROCESSED = 'UNPROCESSED';\r\nexport const PROCESSED = 'PROCESSED';\r\nexport const PENDING = 'PENDING';\r\nexport const DELEGATION_PENDING = 'DELEGATION_PENDING';\r\nexport const STARTED = 'STARTED';\r\nexport const DONE = 'DONE';\r\nexport const ONGOING = 'ONGOING';\r\nexport const COMPLETE = 'COMPLETE';\r\n//\r\n\r\nexport const LOW = 'LOW';\r\nexport const MEDIUM = 'MEDIUM';\r\nexport const HIGH = 'HIGH';\r\nexport const MISSION = 'MISSION';\r\nexport const TODAY = 'TODAY';\r\n\r\n\r\n//For frequency/recurring\r\nexport const NONE = 'NONE';\r\nexport const DAILY = 'DAILY';\r\nexport const WEEKLY = 'WEEKLY';\r\nexport const MONTHLY = 'MONTHLY';\r\nexport const FORTHNIGHTLY = 'FORTHNIGHTLY';\r\nexport const THREE_MONTHS = 'THREE_MONTHS';\r\nexport const SIX_MONTHS = 'SIX_MONTHS';\r\nexport const YEARLY = 'YEARLY';\r\n//","import { CHANGE_VIEW, OVERVIEW, SELECT_ITEM, UPDATE_EXP, RESTORE_PREVIOUS_STATE } from \"./constants\"\r\n\r\nconst initialState = {\r\n    itemID: 0,\r\n    previousItemID: 0,\r\n    exp: 0,\r\n    view: OVERVIEW,\r\n    previousView: OVERVIEW,\r\n    previousState: {}\r\n}\r\n\r\nexport const RestorePreviousStateReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case RESTORE_PREVIOUS_STATE:\r\n            if(state.previousState === {}) {\r\n                break;\r\n            } else {\r\n                return Object.assign({}, state.previousState );\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const selectViewReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            // state.previousView.unshift(state.view);\r\n            return Object.assign({}, state, {view: action.payload, previousView: state.view, previousState: state});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const initialItemViewState = {\r\n//     project: 0,\r\n//     task: 0,\r\n//     itemID: 0 \r\n// }\r\n\r\nexport const selectItemReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case SELECT_ITEM:\r\n            return Object.assign({}, state, {itemID: action.payload, previousItemID: state.itemID, previousState: state});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const initialExpState = {\r\n//     exp: 0\r\n// }\r\n\r\nexport const UpdateExpReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case UPDATE_EXP:\r\n            return Object.assign({}, state, {exp: (state.exp + action.payload)});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {CHANGE_VIEW, SELECT_PROJECT, SELECT_TASK, SELECT_ITEM, UPDATE_EXP, RESTORE_PREVIOUS_STATE} from './constants';\r\n\r\nexport const selectView = (item) => {\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\nexport const selectProject = (projectID) => {\r\n    return {\r\n    type: SELECT_PROJECT,\r\n    payload: projectID\r\n}};\r\n\r\nexport const selectTask = (taskID) => {\r\n    return {\r\n    type: SELECT_TASK,\r\n    payload: taskID\r\n}};\r\n\r\nexport const selectItem = (itemID) => {\r\n    return {\r\n    type: SELECT_ITEM,\r\n    payload: itemID\r\n}};\r\n\r\nexport const UpdateExp = (exp) => {\r\n    return {\r\n    type: UPDATE_EXP,\r\n    payload: exp\r\n}};\r\n\r\nexport const RestorePreviousState = (previousState) => {\r\n    return {\r\n    type: RESTORE_PREVIOUS_STATE,\r\n    payload: previousState\r\n}};","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white ba b--black-10 flex items-center justify-center' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>M</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"TASKS\" onClick={touchFunction}>\r\n            <h3 className='tc'>T</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"INBOX\" onClick={touchFunction}>\r\n            <h3 className='tc'>I</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function StatsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"STATS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport StatsButton from '../components/StatsButton';\r\nimport { selectView, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeView: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { changeView, changeItemID  } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle(t) {\r\n            if (t.title) {\r\n                changeView(t.title);\r\n                changeItemID(0);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex'>\r\n            <HomeButton touchFunction={passTitle} />\r\n            <InboxButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <StatsButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\n\r\n\r\nexport default function ListItem( { touchFunction, item }){\r\n\r\n    switch(item.type){\r\n        case PROJECT:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80 '>\r\n                        <p className='fw7 b white pb2'>{item.name}</p>\r\n                        <p className='fw3 white'>Due: {(new Date(item.dueDate)).toISOString().substr(0, 10)}. Tasks: {item.taskList.length}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='gold fw7 b'>EXP</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80'>\r\n                    <p className='fw7 b white pb2'>{item.name}</p>\r\n                    <p className='fw3 white'>{item.requiredContext}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='gold fw7 b'>EXP</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80'>\r\n                    <p className='fw7 b white pb2'>{item.name}</p>\r\n                    <p className='fw3 white'>{(new Date(item.entryDate)).toISOString().substr(0, 10)}</p>\r\n                    </div>\r\n                    <div className='pa2' >\r\n                        <p className='fw7 b bg-white pa2'>PROCESS</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='bb' title='new item' onClick={touchFunction}>\r\n                    <h3>Enter New Item</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div className='h-100' style={{overflowY: 'scroll', overflowX: 'hidden'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Scroll from './Scroll';\r\nimport { TASK, TASKS, PROJECTS, PROJECT, INBOX_ITEM, TODAY, DAILY, DONE, MISSION, REFERENCE, REFERENCES } from '../constants';\r\n\r\nexport default function List({ touchFunction, content, filter }) {\r\n    //console.log(content);\r\n\r\n    // A Mission's Tasklist\r\n    const missionTasks = content.map((entry,i ) => {\r\n        return <ListItem item={content[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n\r\n    // Today's Mission\r\n    const dueToday = content.filter((entry) => ( \r\n        ( entry.dueDate === new Date().toISOString().substr(0, 10) ) && entry.status !== DONE ) );\r\n    const todaysTasks = dueToday.map((entry,i ) => {\r\n        return <ListItem item={dueToday[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    /////\r\n\r\n    // Daily exercises\r\n    const dailyEx = content.filter((entry) => (entry.frequency === DAILY ));\r\n    const dailyTasks = dailyEx.map((entry, i) => {\r\n        return <ListItem item={dailyEx[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    ///////\r\n\r\n    // Project, Task, Inbox and Reference Lists \r\n    let type = '';\r\n    switch(filter){\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = PROJECT;\r\n            break;\r\n        case REFERENCES:\r\n            type = REFERENCE;\r\n            break;\r\n        default:\r\n            type = INBOX_ITEM;\r\n    }\r\n\r\n    const filteredContent = content.filter((entry) => (entry.type === type))\r\n\r\n    const ListItems = filteredContent.map((entry,i) => {\r\n        return <ListItem item={filteredContent[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n\r\n    ////////////////////////////////\r\n\r\n\r\n\r\n    switch(filter){\r\n        case TODAY:\r\n            return (\r\n                <Scroll>\r\n                    {todaysTasks}\r\n                </Scroll>\r\n            )\r\n        case DAILY:\r\n            return (\r\n                <Scroll>\r\n                    {dailyTasks}\r\n                </Scroll>\r\n            )\r\n        case MISSION:\r\n            return (\r\n                <Scroll>\r\n                    {missionTasks}\r\n                </Scroll>\r\n            )\r\n        default:\r\n            return (\r\n                <Scroll>\r\n                    {ListItems}\r\n                </Scroll>\r\n            );\r\n    }\r\n}","import { INBOX_ITEM, UNPROCESSED } from \"./constants\";\r\n\r\nexport const InboxItems = [\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 1,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 1',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 2,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 2',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED       \r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 3,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 3',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 4,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 4',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 5,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 5',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 6,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 6',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 7,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 7',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 8,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 8',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 9,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 9',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 10,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 10',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n]","import { TASK, LOW, DAILY } from \"./constants\";\r\n\r\nexport const TaskList = [\r\n    {\r\n        type: TASK,\r\n        id: 1589657001522,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 5 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: new Date().toISOString().substr(0, 10), //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001530,\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001523,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 4 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001523, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001530,\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001524,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: DAILY,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 3 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001531,\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001525,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: DAILY,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 2',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001532,\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001526,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001533,\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    }\r\n]\r\n\r\n/*\r\nthis.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.status = PENDING;\r\n        this.frequency = ONCE;\r\n        this.timeSpent = 0;\r\n        this.name = name;\r\n        this.outcome = '';\r\n        this.requiredContext = '';\r\n        this.description = description;\r\n        this.requirements = '';\r\n*/","import { PROJECT, UNPLANNED } from \"./constants\";\r\n\r\nexport const ProjectList = [\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001530,\r\n        exp: 50,\r\n        name: \"Upload Church service\",\r\n        note: 'About Project 1',\r\n        outcome: \"Last week's church service available to watch on Barking Church's website\",\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds (Average Time it has historically taken for the whole project to be completed by you or someone else)\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED, //STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action',\r\n            output: 'recordable product of task completion' //information, document etc\r\n        },\r\n        taskList: [ 1589657001522, 1589657001523 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001531,\r\n        exp: 50,\r\n        name: 'Project 2',\r\n        note: 'About Project 2',\r\n        outcome: 'What done looks like for Project 2',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED,\r\n        nextAction: {\r\n            id: 17,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001524 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001532,\r\n        exp: 50,\r\n        name: 'Project 3',\r\n        note: 'About Project 3',\r\n        outcome: 'What done looks like for Project 3',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001525 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001533,\r\n        exp: 50,\r\n        name: 'Project 4',\r\n        note: 'About Project 4',\r\n        outcome: 'What done looks like for Project 4',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001526 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001534,\r\n        exp: 50,\r\n        name: 'Project 5',\r\n        note: 'About Project 5',\r\n        outcome: 'What done looks like for Project 5',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: []\r\n    }\r\n]","export const ReferenceList = []","import React from 'react'\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemButton({ touchFunction }) {\r\n    return (\r\n        <div className='whiteB w3 h3 flex items-center justify-center' title={NEW_ITEM} onClick={touchFunction}>\r\n            <h1 className=' white b f8 fw9 ma0'>+</h1>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { PENDING, LOW, TASK, MEDIUM, HIGH } from '../constants';\r\nimport { TaskList } from '../TaskList';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NewTask({ changeItemID, updateExp }) {\r\n\r\n    let today = new Date().toISOString().substr(0, 10);\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ requiredContext, setRequiredContext ] = useState('');\r\n    const [ note, setNote ] = useState('');\r\n    const [ dueDate, setDueDate ] = useState(today);\r\n    const [ priority, setPriority ] = useState('');\r\n    const [ frequency, setFrequency ] = useState(0);\r\n    const [ requirements, setRequirements ] = useState('');\r\n    const [ associatedProject, setAssociatedProject ] = useState({});\r\n\r\n    class Task{\r\n        constructor() {\r\n            const d= new Date();\r\n\r\n            setFrequency(0);\r\n            setAssociatedProject({});\r\n\r\n            this.type = TASK;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = priority;\r\n            this.frequency = frequency;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.outcome = outcome;\r\n            this.requiredContext = requiredContext;\r\n            this.note = note;\r\n            this.dueDate = dueDate;\r\n            this.timeRequired = 0;\r\n            this.requirements = requirements;\r\n            this.associatedProject = associatedProject;\r\n            this.exp = 10;\r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        let t = new Task();\r\n        console.log(t);\r\n        TaskList.unshift(t);\r\n        updateExp(5);\r\n        changeItemID(t.id);\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 '>\r\n            <h1 className='tc'>NEW TASK</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={TASK}>\r\n                <input type='text' placeholder='Name' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <input type='text' placeholder='Outcome' value={outcome} onChange={(e) => setOutcome(e.target.value)} />\r\n                <textarea placeholder='Required Context' value={requiredContext} onChange={(e) => setRequiredContext(e.target.value)} />\r\n                <textarea placeholder='Note' value={note} onChange={(e) => setNote(e.target.value)} />\r\n                <label htmlFor=\"due date\" className=''>Due Date:</label>\r\n                <input id='due date' type='date' min={today} value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n                <select id=\"priority\" value={priority} onChange={(e)=> setPriority(e.target.value)}>\r\n                    <option value=\"\" disabled defaultValue>Priority</option>\r\n                    <option value={LOW}>Low</option>\r\n                    <option value={MEDIUM}>Medium</option>\r\n                    <option value={HIGH}>High</option>\r\n                </select>\r\n                <textarea placeholder='Requirements' value={requirements} onChange={(e) => setRequirements(e.target.value)} />\r\n                {/* <input type='text' placeholder='Frequency' value={frequency} onChange={(e) => setFrequency(e.target.value)} />\r\n                <input type='text' placeholder='Associated project name' value={associatedProject} onChange={(e) => setAssociatedProject(e.target.value)} /> */}\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTask);","import React, { useState } from 'react';\r\nimport { PENDING, LOW, MEDIUM, HIGH, MISSION, PROJECT } from '../constants';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NewMission({ changeItemID, updateExp }) {\r\n\r\n    let today = new Date().toISOString().substr(0, 10);\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ purpose, setPurpose ] = useState('');\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ note, setNote ] = useState('');\r\n    const [ dueDate, setDueDate ] = useState(today);\r\n    const [ priority, setPriority ] = useState('');\r\n    const [ frequency, setFrequency ] = useState(0);\r\n    const [ requirements, setRequirements ] = useState('');\r\n    //const [ taskList, setTaskList ] = useState([]);\r\n\r\n\r\n    class Mission{\r\n        constructor() {\r\n            const d= new Date();\r\n\r\n            this.type = PROJECT;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = priority;\r\n            this.frequency = frequency;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.purpose = purpose;\r\n            this.outcome = outcome;\r\n            this.principles = '';\r\n            this.note = note;\r\n            this.dueDate = dueDate;\r\n            this.timeRequired = 0;\r\n            this.requirements = requirements;\r\n            this.taskList = [];\r\n            this.exp = 50;\r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        \r\n        let m = new Mission();\r\n        console.log(m);\r\n        // console.log(m.id);\r\n        ProjectList.unshift(m);\r\n        updateExp(5);\r\n        changeItemID(m.id);\r\n        event.preventDefault();\r\n        setFrequency(0);\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 '>\r\n            <h1 className='tc'>New Mission</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={MISSION}>\r\n                <input type='text' placeholder='Name' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <input type='text' placeholder='Outcome' value={outcome} onChange={(e) => setOutcome(e.target.value)} />\r\n                <textarea placeholder='What is the purpose of the mission?' value={purpose} onChange={(e) => setPurpose(e.target.value)} />\r\n                <textarea placeholder='Note' value={note} onChange={(e) => setNote(e.target.value)} />\r\n                <label htmlFor=\"due date\" className=''>Due Date:</label>\r\n                <input id='due date' type='date' min={today} value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n                <select id=\"priority\" value={priority} onChange={(e)=> setPriority(e.target.value)}>\r\n                    <option value=\"\" disabled defaultValue>Priority</option>\r\n                    <option value={LOW}>Low</option>\r\n                    <option value={MEDIUM}>Medium</option>\r\n                    <option value={HIGH}>High</option>\r\n                </select>\r\n                <textarea placeholder='Requirements' value={requirements} onChange={(e) => setRequirements(e.target.value)} />\r\n                {/* <input type='text' placeholder='Frequency' value={frequency} onChange={(e) => setFrequency(e.target.value)} />\r\n                <input type='text' placeholder='Associated project name' value={associatedProject} onChange={(e) => setAssociatedProject(e.target.value)} /> */}\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMission);","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, TASK, INBOX, UNPROCESSED, MISSION } from '../constants';\r\nimport { InboxItems } from '../InboxItems'\r\nimport NewTask from './NewTask';\r\nimport NewMission from './NewMission';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewItem);\r\n\r\n\r\nfunction NewItem({ submitFunction, view, updateExp, changeItemID }) {\r\n\r\n    const [ type, setType ] = useState(view);\r\n    const [ name, setName ] = useState('Enter item name');\r\n    // \r\n\r\n    function reset(){\r\n        setType(INBOX_ITEM);\r\n        setName('Enter item name');\r\n        // setDescription('');\r\n    }\r\n\r\n    class Item{\r\n        constructor(name,description='None') {\r\n            const d= new Date();\r\n    \r\n            this.type = INBOX_ITEM;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.name = name;\r\n            this.description = '';\r\n            this.status = UNPROCESSED;\r\n    \r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        if(name !== 'Enter item name' && name !== '' ){\r\n            console.log('name is set')\r\n            let i = new Item(name);\r\n            InboxItems.unshift(i);\r\n            console.log(i)\r\n            updateExp(5);\r\n            changeItemID(i.id);\r\n            // submitFunction(event);\r\n            reset();\r\n            event.preventDefault();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    \r\n    function displayTypeForm(){\r\n        switch(true) {\r\n            case type === TASK:\r\n                return <NewTask updateExp={updateExp} />\r\n            case type === MISSION:\r\n                return <NewMission updateExp={updateExp} />\r\n            default:\r\n                return (\r\n                    <div className='h-100 w-100 center ba b--black-10 '>\r\n                        <h1 className='tc gold b'>NEW ITEM</h1>\r\n                        <form onSubmit={submitNewItem} className='flex flex-column' title={INBOX}>\r\n                            <input type='text' onChange={(e)=> setName(e.target.value)} placeholder='Enter item name...' className='pa2 mb2' />\r\n                            {/* <textarea value={description} onChange={(e) => setDescription(e.target.value)} /> */}\r\n                            <input type='submit' value='submit' />\r\n                        </form>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pa1 w-100'>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(INBOX)}>INBOX</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(TASK)}>TASK</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(MISSION)}>MISSION</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(e.target.value)}>REF</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(e.target.value)}>FINANCE</button>\r\n            {displayTypeForm()}\r\n            {/* <label htmlFor=\"type\" className=''>Type:</label>\r\n            <select id=\"type\" value={type} onChange={(e)=> setType(e.target.value)}>\r\n                <option value=\"INBOX_ITEM\">INBOX</option>\r\n                <option value=\"TASK\">TASK</option>\r\n                <option value=\"MISSION\">MISSION</option>\r\n                <option value=\"REFERENCE\">REFERENCE</option>\r\n                <option value=\"EXPENSE\">EXPENSE</option>\r\n                <option value=\"INCOME\">INCOME</option>\r\n            </select> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function QuestionAndOptions({ question, yes, no }) {\r\n    return (\r\n        <div className='h-100 w-100 br1 pa3 flex items-center flex-column'>\r\n            <h2 className='white tc pb2'>{question}</h2>\r\n            <div>\r\n                <button className=\"button\" onClick={yes}>YES</button>\r\n                <button className=\"button\" onClick={no} >NO</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function QuestionandInput({ question, submitFunction }) {\r\n\r\n    const [ answer, setAnswer ] = useState('');\r\n\r\n    function submit(event) {\r\n\r\n        if(answer !==''){\r\n            submitFunction(answer);\r\n            setAnswer('');\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column'>\r\n            <h2 className='white tc pb2'>{question}</h2>\r\n            <form onSubmit={submit}>\r\n                <input type='text' value={answer} onChange={(e)=> setAnswer(e.target.value)} />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport QuestionAndOptions from '../components/QuestionAndOptions';\r\nimport QuestionandInput from '../components/QuestionAndInput';\r\nimport { InboxItems } from '../InboxItems';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { TaskList } from '../TaskList';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport { PROJECT, UNPLANNED, PROCESSED, TASK, PENDING, UNPROCESSED, REFERENCE } from '../constants';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Processor({ nextItemID, item, touchFunction, changeItemID, itemIndex }) {\r\n\r\n    class Task{\r\n        constructor(name,outcome, isDelegatable, requiredContext) {\r\n            const d = new Date();\r\n            this.type = TASK;        \r\n            this.id = d.getTime();\r\n            this.name = name;\r\n            this.requiredContext = requiredContext;\r\n            this.description = '';\r\n            this.outcome = outcome;\r\n            this.outputRecordID = 0;\r\n            this.timeRequired = null; \r\n            this.status = PENDING;\r\n            this.isDelegatable = isDelegatable;\r\n            this.associatedProject = {};\r\n            this.dueDate = (new Date()).toISOString().substr(0, 10);\r\n        }\r\n    }\r\n\r\n    class Project{\r\n        constructor(name, goal) {\r\n            const d = new Date();\r\n            this.type = PROJECT;        \r\n            this.id = d.getTime();\r\n            this.name = name;\r\n            this.description = '';\r\n            this.goal = goal;\r\n            this.outcome = outcome;\r\n            this.outputRecordID = null;\r\n            this.dueDate = (new Date((d.getTime() + 7776000000))).toISOString().substr(0, 10); // 3 months from the date the project is planned \r\n            this.timeRequired = 7776000000;\r\n            this.timeRemaining = setInterval(()=> {\r\n                let timeNow = (new Date()).getTime();\r\n                return (this.dueDate - timeNow)\r\n            }, 1);\r\n            this.status = UNPLANNED;\r\n            this.nextAction = {};\r\n            this.taskList = [];\r\n        }\r\n    }\r\n\r\n    /**type: TASK,\r\n        id: 1589657001522,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 5 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: new Date().toISOString().substr(0, 10), //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001530,\r\n        requirements: '£1 minimum',\r\n        exp: 10 \r\n        */\r\n\r\n\r\n    //actionable?\r\n    //action\r\n    //multistep?\r\n    //done in 5?\r\n    //delegatable?\r\n    //project outcome\r\n\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ requiredContext, setRequiredContext ] = useState('');\r\n    const [ isActionable, setIsActionable ] = useState(null);\r\n    const [ action, setAction ] = useState('');\r\n    const [ isMultistep, setIsMultistep ] = useState(null);\r\n    const [ isDoneInFive, setIsDoneInFive ] = useState(null);\r\n    const [ isDelegatable, setIsDelegatable ] = useState(null);\r\n    const [ step, setStep ] = useState(0);\r\n    const [ nextID, setNextID ] = useState(0);\r\n\r\n    function processNextItem(e){\r\n        setStep(0);\r\n        //touchFunction(e);\r\n    }\r\n\r\n    function makeNewProject(){\r\n        let proj = new Project( action, outcome );\r\n        ProjectList.unshift(proj);\r\n        updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        setNextID(proj.id);\r\n    }\r\n\r\n    function makeNewTask(){\r\n        let task = new Task( action, outcome, isDelegatable, requiredContext);\r\n        TaskList.unshift(task);\r\n        //updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        setNextID(task.id);\r\n        \r\n    }\r\n\r\n    function updateStatus() {\r\n        item.status = PROCESSED;\r\n    }\r\n\r\n    function proceed() {\r\n        setStep((step+1));\r\n    }\r\n\r\n    function refresh(){\r\n        changeItemID(item.id);\r\n    }\r\n    \r\n    if (item.status === UNPROCESSED && step === 0){\r\n        proceed();\r\n    }\r\n\r\n    function addToReferences(){\r\n        item.type = REFERENCE;\r\n        updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        ReferenceList.unshift(item);\r\n    }\r\n\r\n    switch(true) {\r\n        case ( step === 1 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Is this Actionable?' yes={() => { setIsActionable(true); proceed() }} no={() => { setIsActionable(false); addToReferences(); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( isActionable === false && step === 2 ):\r\n        // Added to references\r\n        return (\r\n            <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                <h3 className='white tc pb2'>Item was added to References</h3>\r\n                <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                <button className=\"button\" id={nextItemID} onClick={() => changeItemID(item.id)} >VIEW ITEM</button>\r\n            </div>\r\n        )\r\n        case ( isActionable === true && step === 2 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the desired outcome?\" submitFunction={(answer) => { setOutcome(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 3 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the next action?\" submitFunction={(answer) => { setAction(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 4 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Does the action require more than one step?' yes={() => { setIsMultistep(true); proceed();  makeNewProject() } } no={() => { setIsMultistep(false); proceed();} } />\r\n                </div>\r\n            )\r\n        case ( isMultistep === true && step === 5 ):\r\n            // New project was added and page refreshed\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                    <h3 className='white tc pb2'>A new Project has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                    <button className=\"button\" id={nextItemID} onClick={() => changeItemID(nextID)} >VIEW PROJECT</button>\r\n                </div>\r\n            )\r\n        case ( isMultistep === false && step === 5 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can it be done now in 5 minutes or less?' yes={() => { setIsDoneInFive(true); proceed() }} no={() => { setIsDoneInFive(false); proceed() }} />\r\n                </div>\r\n            )\r\n        case (isDoneInFive === true && step === 6):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>LET'S DO IT!</h3>\r\n                    <h2>TIMER</h2>\r\n                    <p>Once timer is done, you get the option to mark as completed. You also get the option ot defer the action.</p>\r\n                    <button className=\"button\" onClick={() => { updateStatus(); setStep(0); refresh() }} >DONE</button>\r\n                </div>\r\n            )\r\n        case ( isDoneInFive === false && step === 6 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"Where should this task be done?\" submitFunction={(answer) => { setRequiredContext(answer); proceed(); }} />\r\n                </div>\r\n            )\r\n            \r\n        case ( step === 7 ): \r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can this task be delegated?' yes={() => { setIsDelegatable(true); makeNewTask(); proceed(); }} no={() => { setIsDelegatable(false); makeNewTask(); proceed(); }} />\r\n                </div>\r\n            )\r\n        case ( step === 8 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show flex items-center flex-column' >\r\n                    <h3 className='white tc pb2'>A new Task has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={ processNextItem } >PROCESS NEXT ITEM</button>\r\n                    <button className=\"button\" id={nextItemID} onClick={() => changeItemID(nextID)} >VIEW TASK</button>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Processor);","import React from 'react';\r\n\r\nexport default function PrevItemButton({ selectAnother, prevID, currentID }){\r\n\r\n    if(currentID !== prevID){\r\n        return (\r\n            <div className='whiteB w3 h3 flex items-center justify-center' onClick={() => selectAnother(prevID)}>\r\n                <h2 className=' white b f8 fw9 ma0'>Prev</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='ba bw1 b--silver w3 h3 flex items-center justify-center' >\r\n                <h2 className=' gray b f8 fw9 ma0'>Prev</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NextItemButton({ selectAnother, nextID, currentID }){\r\n    if(currentID !== nextID){\r\n        return (\r\n            <div className='whiteB w3 h3 flex items-center justify-center' onClick={() => selectAnother(nextID)}>\r\n                <h2 className=' white b f8 fw9 ma0'>Next</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='ba bw1 b--silver w3 h3 flex items-center justify-center' >\r\n                <h2 className=' gray b f8 fw9 ma0'>Next</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\nimport Processor from '../containers/Processor'\r\nimport PrevItemButton from '../components/PrevItemButton';\r\nimport NextItemButton from '../components/NextItemButton';\r\nimport NewItemButton from '../components/NewItemButton';\r\n\r\nexport default function ItemDetails({ id, touchFunction, selectAnother, prevID, nextID }) {\r\n\r\n    const [ readyToProcess, setReadyToProcess ] = useState(false);\r\n\r\n    let item = {};\r\n    let nextItemID = null;\r\n    let indx;\r\n    for (let i=0; i<InboxItems.length; i++){\r\n\r\n        if (InboxItems[i].id === id){\r\n           item = InboxItems[i];\r\n           indx = i;\r\n           if (InboxItems[i+1]) {\r\n               nextItemID = InboxItems[i+1].id;\r\n           } else {\r\n            nextItemID = 0;\r\n           }\r\n           break;\r\n        }    \r\n    }\r\n\r\n\r\n\r\n    switch(readyToProcess){\r\n        case false:\r\n            return (\r\n                <div >\r\n                    <h5 className='white b pb2'>Name: {item.name}</h5>\r\n                    <h5 className='white pb2'>Entry Date: {(new Date(item.entryDate)).toISOString().substr(0, 10)} </h5>\r\n                    {/* <h5 className='white pb2'>Status: {item.status} </h5> */}\r\n                    <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                        <button onClick={()=> setReadyToProcess(true)} >PROCESS THIS</button>\r\n                    </div>\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prevID} currentID={id} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={nextID} currentID={id} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div >\r\n                    <h5 className='white b pb2'>Name: {item.name}</h5>\r\n                    <h5 className='white pb2'>Entry Date: {(new Date(item.entryDate)).toISOString().substr(0, 10)} </h5>\r\n                    <br />\r\n                    <Processor item={item} nextItemID={nextItemID} touchFunction={touchFunction} itemIndex={indx} />\r\n                </div>\r\n            );\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function DatePicker({ item, dueDate }){\r\n    const [ date, setdate ] = useState(new Date(dueDate).toISOString().substr(0, 10));\r\n    const [ changeDate, setchangeDate ] = useState(false);\r\n    const changeD = false;\r\n\r\n\r\n    useEffect(() => {\r\n        setdate(new Date(dueDate).toISOString().substr(0, 10));\r\n        setchangeDate(false);\r\n    }, [dueDate, changeD])\r\n\r\n    switch(changeDate){\r\n        case true:\r\n            return (\r\n                <div>\r\n                    <input type='date' defaultValue={date} onChange={(e)=> {setdate(e.target.value);} } onBlur={() =>{item.dueDate=date; setchangeDate(false)}} className='fw3 white bn bg-transparent' />\r\n                </div>\r\n                )\r\n        default:\r\n            return (\r\n            <h5 className='fw3 white' onClick={() => setchangeDate(true)}>Due: {new Date(item.dueDate).toISOString().substr(0, 10)} </h5>\r\n            )\r\n    }\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { TaskList } from '../TaskList';\r\nimport { DONE } from '../constants';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp } from '../actions';\r\nimport DatePicker from './DatePicker';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDetails);\r\n\r\n\r\nfunction TaskDetails({ id , changeItemID, updateExp }) {\r\n\r\n    const db = TaskList;\r\n    let task = {};\r\n    let position;\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           task = db[i];\r\n           position = i;\r\n           break;\r\n        }\r\n    }\r\n\r\n    function startTimer(){\r\n        //\r\n    }\r\n\r\n    function markAsDone(){\r\n        task.status = DONE;\r\n        TaskList.splice(position,1);\r\n        updateExp(task.exp);\r\n        changeItemID(0);\r\n    }\r\n\r\n    const [ name, setName ] = useState(task.name);\r\n    const [ requiredContext, setrequiredContext ] = useState(task.requiredContext);\r\n    const [ outcome, setoutcome ] = useState(task.outcome);\r\n    const [ dueDate, setdueDate ] = useState(task.dueDate);\r\n    const [ timeRequired, settimeRequired ] = useState(task.timeRequired);\r\n    const [ note, setnote ] = useState(task.note);\r\n\r\n    useEffect(() => {\r\n        setName(task.name);\r\n        setrequiredContext(task.requiredContext);\r\n        setoutcome(task.outcome);\r\n        setnote(task.note);\r\n        setdueDate(task.dueDate);\r\n    }, [task.name, task.requiredContext, task.outcome, task.note, task.dueDate])\r\n\r\n    \r\n\r\n    return (\r\n        <div className='' >\r\n            <div>\r\n                <div className='w-100 pa2 pb3' >\r\n                    {/* <h3 className='fw7 b white pb2'>{task.name}</h3>\r\n                    <h4 className='fw1 white'>{task.requiredContext}</h4> */}\r\n                    <input type='text' onChange={(e)=> {setName(e.target.value);} } onBlur={() =>task.name=name} value={name} className='bn fw7 b white bg-transparent' />\r\n                    <input type='text' onChange={(e)=> {setrequiredContext(e.target.value);} } onBlur={() =>task.requiredContext=requiredContext} value={requiredContext} className='fw1 white bn bg-transparent' />\r\n                </div>\r\n                <div className='w-100 pl2 pb3'>\r\n                    <h5 className='fw3 white'>Outcome: </h5>\r\n                    {/* <h5 className='fw3 white'>{task.outcome} </h5> */}\r\n                    <textarea rows=\"2\" cols=\"45\" onChange={(e)=> {setoutcome(e.target.value);} } onBlur={() =>task.outcome=outcome} value={outcome} className='w-80 fw3 white bn bg-transparent' />\r\n                </div>\r\n                <div className='w-100 pl2 pb3 flex justify-between'>\r\n                    {/* <h5 className='fw3 white'>Due: {task.dueDate} </h5> */}\r\n                    <h5 className='fw3 white'>Time Required: {task.timeRequired}</h5>\r\n                    <DatePicker item={task} dueDate={dueDate} />\r\n                    {/* <input type='date' defaultValue={dueDate} onChange={(e)=> {setdueDate(e.target.value);} } onBlur={() =>task.dueDate=dueDate} className='fw3 white bn bg-transparent' /> */}\r\n                    {/* <input type='text' onChange={(e)=> {setrequiredContext(e.target.value);} } onBlur={() =>task.outcome=outcome} value={outcome} className='fw3 white bn bg-transparent' /> */}\r\n                </div>\r\n                <div className='w-100 pl2 pb3 flex justify-between'>\r\n                    <h5 className='fw3 white'>Status: {task.status}</h5>\r\n                    <h5 className='fw3 white'>Time Remaining: 12:34:50 </h5>\r\n                </div>\r\n                <h5 className='bb b--white pa2 fw3 white b' >NOTE</h5>\r\n                <div className='pa2'>\r\n                    {/* <p className='fw3 white'>{task.note}</p> */}\r\n                    <textarea rows=\"4\" cols=\"45\" onChange={(e)=> {setnote(e.target.value);} } onBlur={ () =>task.note=note } value={note} className='fw3 white bn bg-transparent' />\r\n                </div>\r\n                <button className=\"button\" onClick={startTimer}>START</button>\r\n                <button className=\"button\" onClick={markAsDone}>DONE</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport List from './List';\r\nimport { MISSION } from '../constants';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp, RestorePreviousState } from '../actions';\r\nimport { TaskList } from '../TaskList';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        previousState: state.RestorePreviousStateReducer.previousState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        },\r\n        restorePreviousState: (previousState) => {\r\n            return dispatch(RestorePreviousState(previousState))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails);\r\n\r\nfunction ProjectDetails({ project, view, changeItemID }) {\r\n    \r\n\r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n    \r\n    function getTasks(){\r\n        let tasks = [];\r\n        if(project.taskList !== []){\r\n            for(let i=0; i<project.taskList.length; i++){\r\n                for(let j=0; j<TaskList.length; j++){\r\n                    if(project.taskList[i] === TaskList[j].id ){\r\n                        tasks.push(TaskList[j]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(tasks);\r\n        return tasks;\r\n    }\r\n\r\n    const projectTasks = getTasks();\r\n\r\n    return (\r\n        <div>\r\n            <div className='w-100 pa2 pb3' >\r\n                <h3 className='fw7 b white pb2'>{project.name}</h3>\r\n                <h4 className='fw1 white'>{project.type}</h4>\r\n            </div>\r\n            <div className='w-100 pl2 pb3'>\r\n                <h5 className='fw3 white'>Outcome: </h5>\r\n                <h5 className='fw3 white'>{project.outcome} </h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3'>\r\n                <h5 className='fw3 white'>Purpose: </h5>\r\n                <h5 className='fw3 white'>{project.purpose} </h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3 flex justify-between'>\r\n                <h5 className='fw3 white'>Due: {project.dueDate} </h5>\r\n                <h5 className='fw3 white'>Time Required: {project.timeRequired}</h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3 flex justify-between'>\r\n                <h5 className='fw3 white'>Status: {project.status}</h5>\r\n                <h5 className='fw3 white'>Time Remaining: 12:34:50 </h5>\r\n            </div>\r\n            <h5 className='bb b--white pa2 fw3 white b' >TASKS</h5>\r\n            <div className='pa2'>\r\n                <List content={projectTasks} filter={MISSION} touchFunction={passKey} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, RestorePreviousState } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        previousItemID: state.selectItemReducer.previousItemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        previousState: state.RestorePreviousStateReducer.previousState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        restorePreviousState: (previousState) => {\r\n            return dispatch(RestorePreviousState(previousState))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BackButton);\r\n\r\n\r\n\r\nfunction BackButton({ restorePreviousState, previousState, changeItemID, onTouch, previousView, previousItemID, id }) {\r\n\r\n    function goBack(){\r\n        //onTouch(previousView)\r\n        changeItemID(id);\r\n        \r\n    }\r\n    return (\r\n        <div className='whiteB w3 h3 flex items-center justify-center' onClick={goBack}>\r\n            <h1 className=' white b f8 fw9 ma0'>&lt;</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReferenceDetails);\r\n\r\n\r\nfunction ReferenceDetails({ id , changeItemID, updateExp }) {\r\n\r\n    const db = ReferenceList;\r\n    let reference = {};\r\n    //let position;\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           reference = db[i];\r\n           //position = i;\r\n           break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                <div className='w-100 pa2 pb3' >\r\n                    <h3 className='fw7 b white pb2'>{reference.name}</h3>\r\n                    <h5 className='fw3 white'>Status: {reference.status}</h5>\r\n                </div>\r\n                <h5 className='bb b--white pa2 fw3 white b' >Description</h5>\r\n                <div className='pa2'>\r\n                    <p className='fw3 white'>{reference.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM, REFERENCE } from '../constants';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport ItemDetails from '../components/ItemDetails';\r\nimport TaskDetails from '../components/TaskDetails';\r\nimport ProjectDetails from '../components/ProjectDetails';\r\nimport BackButton from '../components/BackButton';\r\nimport PrevItemButton from '../components/PrevItemButton';\r\nimport NextItemButton from '../components/NextItemButton';\r\nimport ReferenceDetails from '../components/ReferenceDetails';\r\n\r\nexport default function Details( { content, itemID, touchFunction, updateExp, selectAnother }){\r\n    let itemType, item;\r\n    let prev = itemID;\r\n    let next = itemID;\r\n    let db = content;\r\n    const id = parseInt(itemID);\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n        itemType = db[i].type;\r\n        item = db[i];\r\n\r\n        if((db[i-1]) && db[i-1].type === itemType){\r\n            prev = db[i-1].id;\r\n        }\r\n        if((db[i+1]) && db[i+1].type === itemType){\r\n            next = db[i+1].id;\r\n        }\r\n        break;\r\n        }\r\n    }\r\n\r\n\r\n    switch(itemType) {\r\n        case PROJECT:\r\n            return (\r\n                <div className='w-100 center br1 pa3 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <ProjectDetails project={item} touchFunction={touchFunction} updateExp={updateExp}/>\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>Task</h1>\r\n                    <TaskDetails id={parseInt(itemID)} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>Inbox Item</h1>\r\n                    <ItemDetails id={parseInt(itemID)} touchFunction={touchFunction} selectAnother={selectAnother} prevID={prev} nextID={next} />\r\n                </div>        \r\n            )\r\n        case REFERENCE:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>REFERENCE</h1>\r\n                    <ReferenceDetails id={parseInt(itemID)} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 pb2'>\r\n                    <BackButton />\r\n                    <h1 className='tc b white'>Error</h1>\r\n                    <p>Item Not Found</p>\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                </div>        \r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction StatsOverview({ touchFunction, exp }) {\r\n\r\n    return (\r\n        <article className=\"h-100 w-100 center bg-white pa2  \" title=\"STATS\" onClick={touchFunction}>\r\n            <div className=\"tc w-100 h-100\">\r\n                <div></div>\r\n                <h1 className=\"f2 mb0\">Amen Christ</h1>\r\n                <h3 className=\"f6 pa1 gray \">Engineer</h3>\r\n                <h4 className=\"f6 gray \">Exp: {exp}</h4>\r\n                <div className=\" pt3 \">\r\n                    <h2 className=\"pa1 \">Current Mission</h2>\r\n                    <h2 className=\"pa1 yellow \">Current Task</h2>\r\n                    <h2 className=\"pa1\">12:45:34</h2>\r\n                </div>\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\nexport default StatsOverview;\r\n\r\n","import React from 'react';\r\nimport { TaskList } from '../TaskList';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"TASKS\" onClick={touchFunction}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Tasks</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ TaskList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\nimport { ProjectList } from '../ProjectList';\r\n\r\n\r\nfunction ProjectsOverview({ touchFunction}) {\r\n    \r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"PROJECTS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Missions</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ ProjectList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">{ InboxItems.length }</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import { InboxItems } from './InboxItems';\r\nimport { ProjectList } from './ProjectList';\r\nimport { TaskList } from './TaskList';\r\n\r\nexport const db = InboxItems.concat(ProjectList, TaskList);","import React from 'react';\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemTile({ touchFunction }) {\r\n    return (\r\n        <div className='bg-white h-100 center w-100 flex items-center justify-center' title={NEW_ITEM} onClick={touchFunction}>\r\n            <div className='tc '>\r\n                <h3 className='' >Add New Item</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { TODAY } from '../constants';\r\n//import { TaskList } from '../TaskList';\r\n\r\nfunction TodaysMission({ touchFunction }) {\r\n\r\n    return (\r\n        <div className='flex items-center justify-center h-100 w-100 center bg-white pa1' title={TODAY} onClick={touchFunction}>\r\n            <h2 className='tc'>Today's<br />Mission</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodaysMission;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\n//import SkillsOverview from '../components/SkillsOverview';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { INBOX, INBOX_ITEM, UNPROCESSED, DAILY } from '../constants';\r\nimport { db } from '../db';\r\nimport './Home.css';\r\nimport NewItemTile from '../components/NewItemTile';\r\nimport TodaysMission from '../components/TodaysMission';\r\n// import DailyEx from '../components/DailyEx';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    \r\n    const { onTouch, changeItemID, exp } = props;\r\n\r\n    function selectItem(){\r\n    \r\n        for (let i=0; i<db.length; i++){\r\n            if (db[i].type === INBOX_ITEM && db[i].status === UNPROCESSED) {\r\n                changeItemID(db[i].id);\r\n                onTouch(INBOX)\r\n                break;\r\n            } else {\r\n                changeItemID(0);\r\n                onTouch(INBOX)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='h-100 pa1' >\r\n            <div className='pa1 ph1 h-40'>\r\n                <StatsOverview touchFunction={passTitle} exp={exp} />\r\n            </div>\r\n            <div className=\"flex justify-center h-20 \">\r\n                <div className='w-50 pa1'>\r\n                    <ProjectsOverview touchFunction={passTitle} />\r\n                </div>\r\n                <div className='w-50 pa1'>\r\n                    <TaskOverview touchFunction={passTitle} />\r\n                </div>\r\n            </div>\r\n            <div className='flex w-100 h-10 pa1'>\r\n                <NewItemTile touchFunction={passTitle} />\r\n            </div>\r\n            <div className=\"flex justify-center h-30\">\r\n                <div className=' w-50 h-100 pa1'>\r\n                   <TodaysMission touchFunction={passTitle} gotoItem={changeItemID} />\r\n                </div>\r\n                <div className=' w-50 h-100'>\r\n                    <div className=' w-100 h-50'>\r\n                        <div className=' h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white ' title={DAILY} onClick={passTitle} >\r\n                                <h4 className='tc'>Daily Exercises</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white 'title='REFERENCES' onClick={passTitle}>\r\n                                <h4 className='tc'>References</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='w-100 h-50 flex'>\r\n                        <div className='w-50 h-100 pa1' onClick={selectItem}>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white pa1'>\r\n                                <h4 className='tc'>Process<br />Inbox</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='w-50 h-100 pa1'>\r\n                            <InboxOverview touchFunction={passTitle}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function Stats() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns ba b--black-10'>\r\n            <h1 className='tc'>STATS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp } from '../actions';\r\nimport { PROJECTS, STATS, TASKS, INBOX, NEW_ITEM, TASK, MISSION, TODAY, DAILY, REFERENCES } from '../constants';\r\nimport List from '../components/List';\r\nimport { InboxItems } from '../InboxItems';\r\nimport { TaskList } from '../TaskList';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport './Home.css';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport NewItem from '../components/NewItem';\r\nimport Details from './Details';\r\nimport Home from './Home';\r\nimport Stats from './Stats';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    \r\n    const { view, itemID, onTouch, changeItemID, previousView, updateExp, exp } = props;\r\n    \r\n    let type;\r\n\r\n    switch(previousView) {\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = MISSION;\r\n        break;\r\n        default:\r\n    }\r\n    \r\n    const db = InboxItems.concat(ProjectList, TaskList, ReferenceList);\r\n    \r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    const views = [ NEW_ITEM, PROJECTS, TASKS, INBOX, TODAY, DAILY, REFERENCES ];\r\n\r\n    switch( true) {\r\n        case (view === STATS):\r\n            return (\r\n                <Stats />\r\n            )\r\n        case views.indexOf(view) !== -1 :\r\n            if (itemID === \"0\" || itemID === 0) { // Imagine the id for list component = 0\r\n                if (view === NEW_ITEM) {\r\n                    return (\r\n                        <div className='h-100 pa2'>\r\n                            <div className=' h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90'>\r\n                                <NewItem submitFunction={passTitle} view={type} updateExp={updateExp} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className='h-100'>\r\n                            <div className='h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <div className='h-100 w-100 center pa1'>\r\n                                    <h1 className='tc b gold ma0 pb2'>{view}</h1>\r\n                                    <div className=' h-80 '>\r\n                                        <List content={db} filter={view} touchFunction={passKey}/>\r\n                                    </div>\r\n                                    <div className='h-10 flex w-100 content-end pa2'>\r\n                                        <NewItemButton touchFunction={passTitle} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <div className='h-100 pa2 '>\r\n                            <div className='h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <Details content={db} itemID={itemID} selectAnother={changeItemID} />\r\n                            </div>\r\n                        </div>\r\n                )\r\n            }\r\n        default:\r\n            return (\r\n                <Home />\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView } from './actions';\r\nimport NavBar from './containers/NavBar';\r\nimport './App2.css';\r\nimport Main from './containers/Main';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\n\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <div className='home-container'>\r\n                <Main />\r\n            </div>\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './tachyonBoost.css';\nimport { selectViewReducer, selectItemReducer, UpdateExpReducer, RestorePreviousStateReducer } from './reducers';\nimport App2 from './App2';\n\nconst rootReducer = combineReducers({selectViewReducer, selectItemReducer, UpdateExpReducer, RestorePreviousStateReducer});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App2  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}