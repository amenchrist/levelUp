{"version":3,"sources":["serviceWorker.js","reducers.js","constants.js","actions.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","components/SkillsOverview.js","ProjectList.js","components/ListItem.js","components/Scroll.js","components/List.js","components/ProjectDetails.js","containers/Projects.js","TaskList.js","components/TaskDetails.js","containers/Tasks.js","containers/Skills.js","containers/Stats.js","InboxItems.js","components/ItemDetails.js","containers/Inbox.js","containers/Home.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/SkillsButton.js","containers/NavBar.js","App2.js","index.js"],"names":["Boolean","window","location","hostname","match","initialHomeState","projects","tasks","inbox","project","task","itemID","view","initialItemViewState","selectView","item","type","payload","selectItem","StatsOverview","touchFunction","className","title","onClick","e","checkForTitle","t","parentNode","target","TaskOverview","ProjectsOverview","onTouch","InboxOverview","SkillsOverview","ProjectList","id","name","description","goal","output","outputRecordID","dueDate","timeRequired","timeRemaining","status","nextAction","taskList","ListItem","associatedProject","input","entryDate","Scroll","props","style","overflowY","children","List","content","ListItems","map","entry","i","key","ProjectDetails","length","connect","state","selectItemReducer","dispatch","parseInt","TaskList","TaskDetails","changeItemID","checkForID","Skills","Stats","InboxItems","selectViewReducer","HomeButton","ProjectsButton","TasksButton","InboxButton","SkillsButton","changeView","passTitle","useEffect","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e3c9824.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_VIEW, OVERVIEW, SELECT_ITEM } from \"./constants\"\r\n\r\nconst initialHomeState = {\r\n    projects: 0,\r\n    tasks: 0,\r\n    inbox: 0,\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0,\r\n    view: OVERVIEW \r\n}\r\n\r\nexport const selectViewReducer = (state=initialHomeState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            return Object.assign({}, state, {view: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialItemViewState = {\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0 \r\n}\r\n\r\nexport const selectItemReducer = (state=initialItemViewState, action={}) => {\r\n    switch(action.type){\r\n        case SELECT_ITEM:\r\n            return Object.assign({}, state, {itemID: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","export const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\nexport const PROJECT = 'PROJECT';\r\nexport const TASK = 'TASK';\r\nexport const INBOX_ITEM = 'INBOX_ITEM';\r\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';","import {CHANGE_VIEW, SELECT_PROJECT, SELECT_TASK, SELECT_ITEM} from './constants';\r\n\r\nexport const selectView = (item) => {\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\nexport const selectProject = (projectID) => {\r\n    return {\r\n    type: SELECT_PROJECT,\r\n    payload: projectID\r\n}};\r\n\r\nexport const selectTask = (taskID) => {\r\n    return {\r\n    type: SELECT_TASK,\r\n    payload: taskID\r\n}};\r\n\r\nexport const selectItem = (itemID) => {\r\n    return {\r\n    type: SELECT_ITEM,\r\n    payload: itemID\r\n}};\r\n","import React from 'react';\r\n\r\nfunction StatsOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-90 h-50 center bg-white br1 pa3 pa4-ns ba b--black-10\" title=\"STATS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Amen Christ</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Engineer</h2>\r\n                <h2 className=\"f5 fw4 gray mt0\">Exp: 50</h2>\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\nexport default StatsOverview;\r\n\r\n","import React from 'react';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"TASKS\" onClick={passTitle}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">3/5</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Tasks</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\n\r\n\r\nfunction ProjectsOverview({ onTouch }) {\r\n    // return target.parentNode\r\n    // if parentnode.title doesnt exist, return \r\n\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"PROJECTS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Projects</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">1/6</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">23</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import React from 'react';\r\n\r\nfunction SkillsOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"SKILLS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Lvl 1</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Skills</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SkillsOverview;","import { PROJECT } from \"./constants\";\r\n\r\nexport const ProjectList = [\r\n    {\r\n        type: PROJECT,\r\n        id: 1,\r\n        name: 'Project 1',\r\n        description: 'About Project 1',\r\n        goal: 'What done looks like for Project 1',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds (Average Time it has historically taken for the whole project to be completed by you or someone else)\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED', //STARTED, ONGOING, NOT_STARTED, COMPLETED\r\n        nextAction: {\r\n            id: 1,\r\n            task: 'First physical action',\r\n            output: 'recordable product of task completion' //information, document etc\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 2,\r\n        name: 'Project 2',\r\n        description: 'About Project 2',\r\n        goal: 'What done looks like for Project 2',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 1,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 3,\r\n        name: 'Project 3',\r\n        description: 'About Project 3',\r\n        goal: 'What done looks like for Project 3',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 1,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 4,\r\n        name: 'Project 4',\r\n        description: 'About Project 4',\r\n        goal: 'What done looks like for Project 4',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 1,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 5,\r\n        name: 'Project 5',\r\n        description: 'About Project 5',\r\n        goal: 'What done looks like for Project 5',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 1,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    }\r\n]","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\n\r\n\r\nexport default function ListItem( { touchFunction, item }){    \r\n\r\n    switch(item.type){\r\n        case PROJECT:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.goal}</p>\r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.associatedProject.name}</p>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.input}</h3>\r\n                    <p>{item.entryDate}</p>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='bb' title='new item' onClick={touchFunction}>\r\n                    <h3>Enter New Item</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div className='ba h-75 pl2 pr2' style={{overflowY: 'scroll'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Scroll from './Scroll';\r\n\r\nexport default function List({ touchFunction, content }) {\r\n    const ListItems = content.map((entry,i) => {\r\n        return <ListItem item={content[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    return (\r\n        <Scroll>\r\n            {ListItems}\r\n        </Scroll>\r\n    )\r\n}","import React from 'react';\r\nimport { ProjectList } from '../ProjectList';\r\n\r\n\r\n\r\nexport default function ProjectDetails({ id }) {\r\n\r\n    let project = {};\r\n\r\n    for (let i=0; i<ProjectList.length; i++){\r\n\r\n        if (ProjectList[i].id === id){\r\n           project = ProjectList[i];\r\n           break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {project.id}</h5>\r\n                <h5>Name: {project.name}</h5>\r\n                <h5>Goal: {project.goal} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{project.description}</p>\r\n            </div>\r\n            <div >\r\n                <h5>Output: {project.output} </h5>\r\n                <h5>Due Date: {project.dueDate}</h5>\r\n                <h5>Time Required: {project.timeRequired}</h5>\r\n                <p>Time Remaining: {project.timeRemaining}</p>\r\n                <p>Status: {project.status}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Next Action: </h5>\r\n                <p>{project.nextAction.task}</p>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { ProjectList } from '../ProjectList';\r\nimport List from '../components/List';\r\nimport { connect } from 'react-redux';\r\nimport { selectItem } from '../actions';\r\nimport ProjectDetails from '../components/ProjectDetails';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Projects(props) {\r\n\r\n    const { onTouch } = props;\r\n    const { itemID } = props;\r\n\r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ);\r\n        function checkForTitle (t) {\r\n            if (t.id) {\r\n                 onTouch(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    switch(itemID === \"0\" || itemID === 0) {\r\n        case  false:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Project</h1>\r\n                    <ProjectDetails id={parseInt(itemID)} />\r\n                </div>        \r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Projects</h1>\r\n                    <List content={ProjectList} touchFunction={passKey}/>\r\n                </div>        \r\n            )\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","import { TASK } from \"./constants\";\r\n\r\nexport const TaskList = [\r\n    {\r\n        type: TASK,\r\n        id: 1,\r\n        name: 'Task 1',\r\n        description: 'About Task 1',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 1,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 2,\r\n        name: 'Task 2',\r\n        description: 'About Task 2',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 1,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 3,\r\n        name: 'Task 3',\r\n        description: 'About Task 3',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 1,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 4,\r\n        name: 'Task 4',\r\n        description: 'About Task 4',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 1,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 5,\r\n        name: 'Task 5',\r\n        description: 'About Task 5',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 1,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    }\r\n]","import React from 'react';\r\nimport { TaskList } from '../TaskList';\r\n\r\n\r\n\r\nexport default function TaskDetails({ id }) {\r\n\r\n    let task = {};\r\n\r\n    for (let i=0; i<TaskList.length; i++){\r\n\r\n        if (TaskList[i].id === id){\r\n           task = TaskList[i];\r\n           break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {task.id}</h5>\r\n                <h5>Name: {task.name}</h5>\r\n                <h5>Output: {task.output} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{task.description}</p>\r\n            </div>\r\n            <div >\r\n                <p>Associated Project: {task.associatedProject.name}</p>\r\n                <h5>Due Date: {task.dueDate}</h5>\r\n                <h5>Time Required: {task.timeRequired}</h5>\r\n                <p>Status: {task.status}</p>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Next Action: </h5>\r\n                <p>{project.nextAction}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport List from '../components/List';\r\nimport { TaskList } from '../TaskList';\r\nimport { connect } from 'react-redux';\r\nimport { selectItem } from '../actions';\r\nimport TaskDetails from '../components/TaskDetails';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Tasks(props) {\r\n\r\n    const { changeItemID } = props;\r\n    const { itemID } = props;\r\n\r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    switch(itemID === '0' || itemID === 0) {\r\n        case  false:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Tasks</h1>\r\n                    <TaskDetails id={parseInt(itemID)} />\r\n                </div>        \r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Tasks</h1>\r\n                    <List content={TaskList} touchFunction={passKey}/>\r\n                </div>        \r\n            )\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);","import React from 'react';\r\n\r\nexport default function Skills() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns ba b--black-10 show'>\r\n            <h1 className='tc'>SKILLS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Stats() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>STATS</h1>\r\n        </div>       \r\n    )\r\n}","import { INBOX_ITEM } from \"./constants\";\r\n\r\nexport const InboxItems = [\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 1,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 1',\r\n        description: 'Optional details on input'\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 2,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 2',\r\n        description: 'Optional details on input'        \r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 3,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 3',\r\n        description: 'Optional details on input'\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 4,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 4',\r\n        description: 'Optional details on input'\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 5,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 5',\r\n        description: 'Optional details on input'\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 6,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 6',\r\n        description: 'Optional details on input'\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 7,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 7',\r\n        description: 'Optional details on input'\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 8,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 8',\r\n        description: 'Optional details on input'\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 9,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 9',\r\n        description: 'Optional details on input'\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 10,\r\n        entryDate: 1212123443,\r\n        input: 'Random Input 10',\r\n        description: 'Optional details on input'\r\n    }\r\n]","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\n\r\nexport default function TaskDetails({ id }) {\r\n\r\n    let item = {};\r\n\r\n    for (let i=0; i<InboxItems.length; i++){\r\n\r\n        if (InboxItems[i].id === id){\r\n           item = InboxItems[i];\r\n           break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {item.id}</h5>\r\n                <h5>Name: {item.input}</h5>\r\n                <h5>Entry Date: {item.entryDate} </h5>\r\n                <p>Description: {item.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\nimport List from '../components/List';\r\nimport { connect } from 'react-redux';\r\nimport { selectItem } from '../actions';\r\nimport ItemDetails from '../components/ItemDetails';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Inbox(props) {\r\n\r\n    const { onTouch } = props;\r\n    const { itemID } = props;\r\n\r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID(t) {\r\n            if (t.id) {\r\n                 onTouch(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    switch(itemID === \"0\" || itemID === 0) {\r\n        case  false:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Inbox</h1>\r\n                    <ItemDetails id={parseInt(itemID)} />\r\n                </div>        \r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Inbox</h1>\r\n                    <List content={InboxItems} touchFunction={passKey}/>\r\n                </div>        \r\n            )\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inbox);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\nimport SkillsOverview from '../components/SkillsOverview';\r\nimport { selectView } from '../actions';\r\nimport Projects from './Projects';\r\nimport { PROJECTS, SKILLS, STATS, TASKS, INBOX } from '../constants';\r\nimport Tasks from './Tasks';\r\nimport Skills from './Skills';\r\nimport Stats from './Stats';\r\nimport Inbox from './Inbox';\r\nimport './Home.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n\r\n\r\n    const { onTouch } = props;\r\n    const { view } = props;\r\n\r\n    switch(view) {\r\n        case PROJECTS:\r\n            return (\r\n                <Projects />\r\n            )\r\n        case SKILLS:\r\n            return (\r\n                <Skills />\r\n            )\r\n        case STATS:\r\n            return (\r\n                <Stats />\r\n            )\r\n        case INBOX:\r\n            return (\r\n                <Inbox />\r\n            )\r\n        case TASKS:\r\n            return (\r\n                <Tasks />\r\n            )\r\n        default:\r\n            return (\r\n                <div >\r\n                    <div className='pb3'>\r\n                        <StatsOverview touchFunction={onTouch} />\r\n                    </div>\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <ProjectsOverview onTouch={onTouch} />\r\n                        <TaskOverview touchFunction={onTouch} />\r\n                    </div>\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <InboxOverview touchFunction={onTouch}/>\r\n                        <SkillsOverview touchFunction={onTouch}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white ba b--black-10' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>P</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"TASKS\" onClick={touchFunction}>\r\n            <h3 className='tc'>T</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"INBOX\" onClick={touchFunction}>\r\n            <h3 className='tc'>I</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function SkillsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"SKILLS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport SkillsButton from '../components/SkillsButton';\r\nimport { selectView, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeView: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { changeView, changeItemID  } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle(t) {\r\n            if (t.title) {\r\n                changeView(t.title);\r\n                changeItemID(0);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex'>\r\n            <HomeButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <SkillsButton touchFunction={passTitle} />\r\n            <InboxButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView } from './actions';\r\nimport Home from './containers/Home';\r\nimport NavBar from './containers/NavBar';\r\nimport './App2.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <div className='home-container'>\r\n                <Home touchFunction={onTouch} />\r\n            </div>\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './tachyonBoost.css';\nimport { selectViewReducer, selectItemReducer } from './reducers';\nimport App2 from './App2';\n\nconst rootReducer = combineReducers({selectViewReducer, selectItemReducer});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App2  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}