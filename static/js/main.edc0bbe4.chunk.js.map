{"version":3,"sources":["serviceWorker.js","constants.js","reducers.js","actions.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/StatsButton.js","containers/NavBar.js","components/ListItem.js","components/Scroll.js","components/List.js","InboxItems.js","ProjectList.js","TaskList.js","db.js","components/NewItemButton.js","components/NewTask.js","components/NewMission.js","components/NewItem.js","components/QuestionAndOptions.js","components/QuestionAndInput.js","containers/Processor.js","components/ItemDetails.js","components/TaskDetails.js","components/ProjectDetails.js","containers/Details.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","components/NewItemTile.js","containers/Home.js","containers/Stats.js","containers/Main.js","App2.js","index.js"],"names":["Boolean","window","location","hostname","match","TASK","INBOX_ITEM","LOW","initialHomeState","projects","tasks","inbox","project","task","itemID","view","initialItemViewState","selectView","item","type","payload","selectItem","HomeButton","touchFunction","className","title","onClick","ProjectsButton","TasksButton","InboxButton","StatsButton","connect","state","selectViewReducer","dispatch","changeView","changeItemID","id","props","passTitle","e","checkForTitle","t","parentNode","target","ListItem","name","goal","requiredContext","Date","entryDate","toISOString","substr","Scroll","style","overflowY","children","List","content","filter","filteredContent","entry","console","log","ListItems","map","i","key","InboxItems","description","status","ProjectList","output","outputRecordID","dueDate","timeRequired","timeRemaining","nextAction","taskList","TaskList","frequency","timeSpent","priority","outcomeRecordID","outcome","note","associatedProject","requirements","exp","db","concat","NewItemButton","NewTask","submitFunction","useState","setName","setOutcome","setRequiredContext","setNote","setDueDate","setPriority","setRequirements","Task","d","this","getTime","today","onSubmit","event","unshift","preventDefault","placeholder","value","onChange","htmlFor","min","disabled","selected","Item","NewMission","setDescription","NewItem","setType","submitNewItem","displayTypeForm","QuestionAndOptions","question","yes","no","QuestionandInput","answer","setAnswer","Project","setInterval","timeNow","isDelegatable","selectItemReducer","onTouch","nextItemID","isActionable","setIsActionable","action","setAction","isMultistep","setIsMultistep","isDoneInFive","setIsDoneInFive","setIsDelegatable","step","setStep","processNextItem","updateStatus","proceed","refresh","proj","makeNewProject","makeNewTask","ItemDetails","length","TaskDetails","ProjectDetails","Details","itemType","parseInt","StatsOverview","TaskOverview","ProjectsOverview","InboxOverview","NewItemTile","Stats","passKey","checkForID","indexOf","useEffect","rootReducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.edc0bbe4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\nexport const PROJECT = 'PROJECT';\r\nexport const TASK = 'TASK';\r\nexport const INBOX_ITEM = 'INBOX_ITEM';\r\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const NEW_ITEM = 'NEW_ITEM';\r\nexport const UNPLANNED = 'UNPLANNED';\r\nexport const UNPROCESSED = 'UNPROCESSED';\r\nexport const PROCESSED = 'PROCESSED';\r\nexport const PENDING = 'PENDING';\r\nexport const DELEGATION_PENDING = 'DELEGATION_PENDING';\r\nexport const LOW = 'LOW';\r\nexport const MEDIUM = 'MEDIUM';\r\nexport const HIGH = 'HIGH';\r\nexport const MISSION = 'MISSION';\r\n//STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED","import { CHANGE_VIEW, OVERVIEW, SELECT_ITEM } from \"./constants\"\r\n\r\nconst initialHomeState = {\r\n    projects: 0,\r\n    tasks: 0,\r\n    inbox: 0,\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0,\r\n    view: OVERVIEW \r\n}\r\n\r\nexport const selectViewReducer = (state=initialHomeState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            return Object.assign({}, state, {view: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialItemViewState = {\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0 \r\n}\r\n\r\nexport const selectItemReducer = (state=initialItemViewState, action={}) => {\r\n    switch(action.type){\r\n        case SELECT_ITEM:\r\n            return Object.assign({}, state, {itemID: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {CHANGE_VIEW, SELECT_PROJECT, SELECT_TASK, SELECT_ITEM} from './constants';\r\n\r\nexport const selectView = (item) => {\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\nexport const selectProject = (projectID) => {\r\n    return {\r\n    type: SELECT_PROJECT,\r\n    payload: projectID\r\n}};\r\n\r\nexport const selectTask = (taskID) => {\r\n    return {\r\n    type: SELECT_TASK,\r\n    payload: taskID\r\n}};\r\n\r\nexport const selectItem = (itemID) => {\r\n    return {\r\n    type: SELECT_ITEM,\r\n    payload: itemID\r\n}};\r\n","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white ba b--black-10' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>M</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"TASKS\" onClick={touchFunction}>\r\n            <h3 className='tc'>T</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"INBOX\" onClick={touchFunction}>\r\n            <h3 className='tc'>I</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function StatsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"STATS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport StatsButton from '../components/StatsButton';\r\nimport { selectView, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeView: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { changeView, changeItemID  } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle(t) {\r\n            if (t.title) {\r\n                changeView(t.title);\r\n                changeItemID(0);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex'>\r\n            <HomeButton touchFunction={passTitle} />\r\n            <InboxButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <StatsButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\n\r\n\r\nexport default function ListItem( { touchFunction, item }){    \r\n\r\n    switch(item.type){\r\n        case PROJECT:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.goal}</p>\r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.requiredContext}</p>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{(new Date(item.entryDate)).toISOString().substr(0, 10)}</p>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='bb' title='new item' onClick={touchFunction}>\r\n                    <h3>Enter New Item</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div className='ba h-100 pl2 pr2' style={{overflowY: 'scroll'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Scroll from './Scroll';\r\nimport { TASK, TASKS, PROJECTS, PROJECT, INBOX_ITEM } from '../constants';\r\n\r\nexport default function List({ touchFunction, content, filter }) {\r\n\r\n    let type = '';\r\n    switch(filter){\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = PROJECT;\r\n            break;\r\n        default:\r\n            type = INBOX_ITEM;\r\n    }\r\n\r\n    const filteredContent = content.filter((entry) => (entry.type === type))\r\n    console.log(filteredContent);\r\n    const ListItems = filteredContent.map((entry,i) => {\r\n        return <ListItem item={filteredContent[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    return (\r\n        <Scroll>\r\n            {ListItems}\r\n        </Scroll>\r\n    )\r\n}","import { INBOX_ITEM, UNPROCESSED } from \"./constants\";\r\n\r\nexport const InboxItems = [\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 1,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 1',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 2,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 2',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED       \r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 3,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 3',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 4,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 4',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 5,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 5',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 6,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 6',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 7,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 7',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 8,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 8',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 9,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 9',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 10,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 10',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n]","import { PROJECT, UNPLANNED } from \"./constants\";\r\n\r\nexport const ProjectList = [\r\n    {\r\n        type: PROJECT,\r\n        id: 11,\r\n        name: 'Project 1',\r\n        description: 'About Project 1',\r\n        goal: 'What done looks like for Project 1',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds (Average Time it has historically taken for the whole project to be completed by you or someone else)\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED, //STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action',\r\n            output: 'recordable product of task completion' //information, document etc\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 12,\r\n        name: 'Project 2',\r\n        description: 'About Project 2',\r\n        goal: 'What done looks like for Project 2',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED,\r\n        nextAction: {\r\n            id: 17,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 13,\r\n        name: 'Project 3',\r\n        description: 'About Project 3',\r\n        goal: 'What done looks like for Project 3',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 14,\r\n        name: 'Project 4',\r\n        description: 'About Project 4',\r\n        goal: 'What done looks like for Project 4',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 15,\r\n        name: 'Project 5',\r\n        description: 'About Project 5',\r\n        goal: 'What done looks like for Project 5',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    }\r\n]","import { TASK, LOW } from \"./constants\";\r\n\r\nexport const TaskList = [\r\n    {\r\n        type: TASK,\r\n        id: 16,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 5 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 17,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 4 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 18,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 3 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 19,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 2',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 20,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    }\r\n]\r\n\r\n/*\r\nthis.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.status = PENDING;\r\n        this.frequency = ONCE;\r\n        this.timeSpent = 0;\r\n        this.name = name;\r\n        this.outcome = '';\r\n        this.requiredContext = '';\r\n        this.description = description;\r\n        this.requirements = '';\r\n*/","import { InboxItems } from './InboxItems';\r\nimport { ProjectList } from './ProjectList';\r\nimport { TaskList } from './TaskList';\r\n\r\nexport const db = InboxItems.concat(ProjectList, TaskList);","import React from 'react'\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemButton({ touchFunction }) {\r\n    return (\r\n        <div className='show w3 h3' title={NEW_ITEM} onClick={touchFunction}>\r\n            <h3 className='tc'>N</h3>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, PENDING, LOW, TASK, MEDIUM, HIGH } from '../constants';\r\nimport { db } from '../db';\r\n\r\nexport default function NewTask({ submitFunction }) {\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ requiredContext, setRequiredContext ] = useState('');\r\n    const [ note, setNote ] = useState('');\r\n    const [ dueDate, setDueDate ] = useState(0);\r\n    const [ priority, setPriority ] = useState('');\r\n    const [ frequency, setFrequency ] = useState(0);\r\n    const [ requirements, setRequirements ] = useState('');\r\n    const [ associatedProject, setAssociatedProject ] = useState({});\r\n\r\n    class Task{\r\n        constructor() {\r\n            const d= new Date();\r\n    \r\n            this.type = INBOX_ITEM;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = priority;\r\n            this.frequency = frequency;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.outcome = outcome;\r\n            this.requiredContext = requiredContext;\r\n            this.note = note;\r\n            this.dueDate = dueDate;\r\n            this.timeRequired = 0;\r\n            this.requirements = requirements;\r\n            this.associatedProject = associatedProject;\r\n            this.exp = 10;\r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        let i = new Task();\r\n        db.unshift(i);\r\n        submitFunction(event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    let today = new Date().toISOString().substr(0, 10);\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 '>\r\n            <h1 className='tc'>NEW TASK</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={TASK}>\r\n                <input type='text' placeholder='Name' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <input type='text' placeholder='Outcome' value={outcome} onChange={(e) => setOutcome(e.target.value)} />\r\n                <textarea placeholder='Required Context' value={requiredContext} onChange={(e) => setRequiredContext(e.target.value)} />\r\n                <textarea placeholder='Note' value={note} onChange={(e) => setNote(e.target.value)} />\r\n                <label htmlFor=\"due date\" className=''>Due Date:</label>\r\n                <input id='due date' type='date' min={today} value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n                <select id=\"priority\" value={priority} onChange={(e)=> setPriority(e.target.value)}>\r\n                    <option value=\"\" disabled selected>Priority</option>\r\n                    <option value={LOW}>Low</option>\r\n                    <option value={MEDIUM}>Medium</option>\r\n                    <option value={HIGH}>High</option>\r\n                </select>\r\n                <textarea placeholder='Requirements' value={requirements} onChange={(e) => setRequirements(e.target.value)} />\r\n                {/* <input type='text' placeholder='Frequency' value={frequency} onChange={(e) => setFrequency(e.target.value)} />\r\n                <input type='text' placeholder='Associated project name' value={associatedProject} onChange={(e) => setAssociatedProject(e.target.value)} /> */}\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, INBOX } from '../constants';\r\nimport { db } from '../db';\r\n\r\nclass Item{\r\n    constructor(name,description='None') {\r\n        const d= new Date();\r\n\r\n        this.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.name = name;\r\n        this.description = description;\r\n\r\n    }\r\n}\r\n\r\nexport default function NewMission({ submitFunction }) {\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ description, setDescription ] = useState('');\r\n\r\n    function submitNewItem(event) {\r\n        let i = new Item(name, description);\r\n        db.unshift(i);\r\n        submitFunction(event)\r\n        event.preventDefault();\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h1 className='tc'>NEW MISSION</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={INBOX}>\r\n                <input type='text' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, TASK, INBOX } from '../constants';\r\nimport { db } from '../db'\r\nimport NewTask from './NewTask';\r\nimport NewMission from './NewMission';\r\n\r\nclass Item{\r\n    constructor(name,description='None') {\r\n        const d= new Date();\r\n\r\n        this.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.name = name;\r\n        this.description = description;\r\n\r\n    }\r\n}\r\n\r\nexport default function NewItem({ submitFunction }) {\r\n\r\n    const [ type, setType ] = useState('INBOX_ITEM');\r\n    const [ name, setName ] = useState('');\r\n    const [ description, setDescription ] = useState('');\r\n\r\n    function reset(){\r\n        setType(INBOX_ITEM);\r\n        setName('');\r\n        setDescription('');\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        let i = new Item(name, description);\r\n        db.unshift(i);\r\n        submitFunction(event);\r\n        reset();\r\n        event.preventDefault();\r\n    }\r\n    \r\n    function displayTypeForm(){\r\n        switch(true) {\r\n            case type === TASK:\r\n                return <NewTask />\r\n            case type === 'MISSION':\r\n                return <NewMission />\r\n            default:\r\n                return (\r\n                    <div className='h-100 w-100 center ba b--black-10'>\r\n                        <h1 className='tc'>NEW ITEM</h1>\r\n                        <form onSubmit={submitNewItem} className='flex flex-column' title={INBOX}>\r\n                            <input type='text' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                            <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                            <input type='submit' value='submit' />\r\n                        </form>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pa1'>\r\n            <label htmlFor=\"type\" className=''>Type:</label>\r\n            <select id=\"type\" value={type} onChange={(e)=> setType(e.target.value)}>\r\n                <option value=\"INBOX_ITEM\">INBOX</option>\r\n                <option value=\"TASK\">TASK</option>\r\n                <option value=\"MISSION\">MISSION</option>\r\n                <option value=\"REFERENCE\">REFERENCE</option>\r\n                <option value=\"EXPENSE\">EXPENSE</option>\r\n                <option value=\"INCOME\">INCOME</option>\r\n            </select>\r\n            {displayTypeForm()}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function QuestionAndOptions({ question, yes, no }) {\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h2>{question}</h2>\r\n            <button className=\"button\" onClick={yes}>YES</button>\r\n            <button className=\"button\" onClick={no} >NO</button>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function QuestionandInput({ question, submitFunction }) {\r\n\r\n    const [ answer, setAnswer ] = useState('');\r\n\r\n    function submit(event) {\r\n\r\n        if(answer !==''){\r\n            submitFunction(answer);\r\n            setAnswer('');\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h2>{question}</h2>\r\n            <form onSubmit={submit}>\r\n                <input type='text' value={answer} onChange={(e)=> setAnswer(e.target.value)} />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport QuestionAndOptions from '../components/QuestionAndOptions';\r\nimport QuestionandInput from '../components/QuestionAndInput';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { TaskList } from '../TaskList';\r\nimport { PROJECT, UNPLANNED, PROCESSED, TASK, PENDING, UNPROCESSED } from '../constants';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Project{\r\n    constructor(name, goal) {\r\n        const d = new Date();\r\n        this.type = PROJECT;        \r\n        this.id = d.getTime();\r\n        this.name = name;\r\n        this.description = '';\r\n        this.goal = goal;\r\n        this.output = null;\r\n        this.outputRecordID = null;\r\n        this.dueDate = (d.getTime() + 7776000000); // 3 months from the date the project is planned \r\n        this.timeRequired = 7776000000;\r\n        this.timeRemaining = setInterval(()=> {\r\n            let timeNow = (new Date()).getTime();\r\n            return (this.dueDate - timeNow)\r\n        }, 1);\r\n        this.status = UNPLANNED;\r\n        this.nextAction = {};\r\n        this.taskList = [];\r\n    }\r\n}\r\n\r\nclass Task{\r\n    constructor(name,output, isDelegatable) {\r\n        const d = new Date();\r\n        this.type = TASK;        \r\n        this.id = d.getTime();\r\n        this.name = name;\r\n        this.description = '';\r\n        this.output = output;\r\n        this.outputRecordID = 0;\r\n        this.timeRequired = null; \r\n        this.status = PENDING;\r\n        this.isDelegatable = isDelegatable;\r\n        this.associatedProject = {};\r\n        this.dueDate = null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Processor({ nextItemID, item, touchFunction, changeItemID }) {\r\n    //actionable?\r\n    //action\r\n    //multistep?\r\n    //done in 5?\r\n    //delegatable?\r\n    //project outcome\r\n\r\n\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ isActionable, setIsActionable ] = useState(null);\r\n    const [ action, setAction ] = useState('');\r\n    const [ isMultistep, setIsMultistep ] = useState(null);\r\n    const [ isDoneInFive, setIsDoneInFive ] = useState(null);\r\n    const [ isDelegatable, setIsDelegatable ] = useState(null);\r\n    const [ step, setStep ] = useState(0);\r\n\r\n    function processNextItem(e){\r\n        setStep(0);\r\n        touchFunction(e);\r\n    }\r\n\r\n    function makeNewProject(){\r\n        let proj = new Project( action, outcome );\r\n        ProjectList.unshift(proj);\r\n        updateStatus();\r\n        refresh();\r\n    }\r\n\r\n    function makeNewTask(){\r\n        let task = new Task( action, outcome, isDelegatable);\r\n        TaskList.unshift(task);\r\n        updateStatus();\r\n    }\r\n    function updateStatus() {\r\n        item.status = PROCESSED;\r\n    }\r\n\r\n    function proceed() {\r\n        setStep((step+1));\r\n    }\r\n\r\n    function refresh(){\r\n        changeItemID(item.id);\r\n    }\r\n    if (item.status === UNPROCESSED && step === 0){\r\n        proceed();\r\n    }\r\n\r\n    switch(true) {\r\n        case ( step === 1 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Is this Actionable?' yes={() => { setIsActionable(true); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( isActionable === true && step === 2 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What does 'DONE' look like?\" submitFunction={(answer) => { setOutcome(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 3 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the next action?\" submitFunction={(answer) => { setAction(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 4 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Does the next action require more than one step?' yes={() => { setIsMultistep(true); proceed();  makeNewProject() } } no={() => { setIsMultistep(false); proceed();} } />\r\n                </div>\r\n            )\r\n        case ( isMultistep === true && step === 5 ):\r\n            // New project was added and page refreshed\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>A new Project has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n        case ( isMultistep === false && step === 5 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Would it take more than 5 minutes to do?' yes={() => { setIsDoneInFive(false); proceed() }} no={() => { setIsDoneInFive(true); proceed() }} />\r\n                </div>\r\n            )\r\n        case (isDoneInFive === true && step === 6):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>LET'S DO IT!</h3>\r\n                    <h2>TIMER</h2>\r\n                    <p>Once timer is done, you get the option to mark as completed. You also get the option ot defer the action.</p>\r\n                    <button className=\"button\" onClick={() => { updateStatus(); setStep(0); refresh() }} >DONE</button>\r\n                </div>\r\n            )\r\n        case ( isDoneInFive === false && step === 6 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can this task be delegated?' yes={() => { setIsDelegatable(true); updateStatus(); refresh(); proceed(); }} no={() => { setIsDelegatable(false); updateStatus(); refresh(); proceed(); }} />\r\n                </div>\r\n            )\r\n        case ( step === 7 ):\r\n            makeNewTask();\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>A new Task has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Processor);","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\nimport Processor from '../containers/Processor'\r\n\r\nexport default function ItemDetails({ id, touchFunction }) {\r\n\r\n    let item = {};\r\n    let nextItemID = null;\r\n    for (let i=0; i<InboxItems.length; i++){\r\n\r\n        if (InboxItems[i].id === id){\r\n           item = InboxItems[i];\r\n           if (InboxItems[i+1]) {\r\n               nextItemID = InboxItems[i+1].id;\r\n           } else {\r\n            nextItemID = 0;\r\n           }\r\n           break;\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <h5>ID: {item.id}</h5>\r\n            <h5>Name: {item.name}</h5>\r\n            <h5>Entry Date: {item.entryDate} </h5>\r\n            <p>Description: {item.description}</p>\r\n            <h5>status: {item.status} </h5>\r\n            <Processor item={item} nextItemID={nextItemID} touchFunction={touchFunction} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { db } from '../db';\r\n\r\n\r\n\r\nexport default function TaskDetails({ id , touchFunction }) {\r\n\r\n    let task = {};\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           task = db[i];\r\n           break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {task.id}</h5>\r\n                <h5>Name: {task.name}</h5>\r\n                <h5>Output: {task.output} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{task.description}</p>\r\n            </div>\r\n            <div >\r\n                <h5>Associated Project: <span id={task.associatedProject.id} onClick={touchFunction}>{task.associatedProject.name}</span></h5>\r\n                <h5>Due Date: {task.dueDate}</h5>\r\n                <h5>Time Required: {task.timeRequired}</h5>\r\n                <p>Status: {task.status}</p>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Next Action: </h5>\r\n                <p>{project.nextAction}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { db } from '../db';\r\n\r\nexport default function ProjectDetails({ id, touchFunction }) {\r\n\r\n    let project = {};\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           project = db[i];\r\n           break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {project.id}</h5>\r\n                <h5>Name: {project.name}</h5>\r\n                <h5>Goal: {project.goal} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{project.description}</p>\r\n            </div>\r\n            <div >\r\n                <h5>Output: {project.output} </h5>\r\n                <h5>Due Date: {project.dueDate}</h5>\r\n                <h5>Time Required: {project.timeRequired}</h5>\r\n                <p>Time Remaining: {project.timeRemaining}</p>\r\n                <p>Status: {project.status}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Next Action: </h5>\r\n                <h5><span id={project.nextAction.id} onClick={touchFunction}>{project.nextAction.task}</span></h5>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { db } from '../db';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport ItemDetails from '../components/ItemDetails';\r\nimport TaskDetails from '../components/TaskDetails';\r\nimport ProjectDetails from '../components/ProjectDetails';\r\n\r\nexport default function Details( { itemID, touchFunction }){\r\n    let itemType = '';\r\n    const id = parseInt(itemID);\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n        itemType = db[i].type;\r\n        break;\r\n        }\r\n    }\r\n    switch(itemType) {\r\n        case PROJECT:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Mission</h1>\r\n                    <ProjectDetails id={parseInt(itemID)} touchFunction={touchFunction} />\r\n                    \r\n                </div>        \r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Task</h1>\r\n                    <TaskDetails id={parseInt(itemID)} touchFunction={touchFunction} />\r\n                    \r\n                </div>        \r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Inbox Item</h1>\r\n                    <ItemDetails id={parseInt(itemID)} touchFunction={touchFunction} />\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                </div>        \r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                    <h1 className='tc'>Error</h1>\r\n                    <p>Item Not Found</p>\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                </div>        \r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction StatsOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 w-100 center bg-white pa3 pa4-ns ba b--black-10\" title=\"STATS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Amen Christ</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Engineer</h2>\r\n                <h2 className=\"f5 fw4 gray mt0\">Exp: 50</h2>\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\nexport default StatsOverview;\r\n\r\n","import React from 'react';\r\nimport { TaskList } from '../TaskList';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"TASKS\" onClick={touchFunction}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Tasks</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ TaskList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\nimport { ProjectList } from '../ProjectList';\r\n\r\n\r\nfunction ProjectsOverview({ touchFunction}) {\r\n    \r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"PROJECTS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Missions</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ ProjectList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">{ InboxItems.length }</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import React from 'react';\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemTile({ touchFunction }) {\r\n    return (\r\n        <div className='bg-white h-100 center w-100' title={NEW_ITEM} onClick={touchFunction}>\r\n            <div className='tc'>\r\n                <h3>Add New Item</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\n//import SkillsOverview from '../components/SkillsOverview';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { INBOX, INBOX_ITEM, UNPROCESSED } from '../constants';\r\nimport { db } from '../db';\r\nimport './Home.css';\r\nimport NewItemTile from '../components/NewItemTile';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    \r\n    const { onTouch, changeItemID } = props;\r\n\r\n    function selectItem(){\r\n    \r\n        for (let i=0; i<db.length; i++){\r\n            if (db[i].type === INBOX_ITEM && db[i].status === UNPROCESSED) {\r\n                changeItemID(db[i].id);\r\n                onTouch(INBOX)\r\n                break;\r\n            } else {\r\n                changeItemID(0);\r\n                onTouch(INBOX)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='h-100 pa1' >\r\n            <div className='pa1 ph1 h-40'>\r\n                <StatsOverview touchFunction={passTitle} />\r\n            </div>\r\n            <div className=\"flex justify-center h-20 \">\r\n                <div className='w-50 pa1'>\r\n                    <ProjectsOverview touchFunction={passTitle} />\r\n                </div>\r\n                <div className='w-50 pa1'>\r\n                    <TaskOverview touchFunction={passTitle} />\r\n                </div>\r\n            </div>\r\n            <div className='flex w-100 h-10 pa1'>\r\n                <NewItemTile touchFunction={passTitle} />\r\n            </div>\r\n            <div className=\"flex justify-center h-30\">\r\n                <div className=' w-50 h-100 pa1'>\r\n                    {/* <div className='h-100 bg-white br1'></div> */}\r\n                    <div className='flex items-center justify-center h-100 w-100 center bg-white pa1'>\r\n                                <h2 className='tc'>Today's<br />Mission</h2>\r\n                            </div>\r\n                    {/* <SkillsOverview touchFunction={passTitle}/> */}\r\n                </div>\r\n                <div className=' w-50 h-100'>\r\n                    <div className=' w-100 h-50'>\r\n                        <div className=' h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white '>\r\n                                <h4 className='tc'>Daily Exercises</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white '>\r\n                                <h4 className='tc'>References</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='w-100 h-50 flex'>\r\n                        <div className='w-50 h-100 pa1' onClick={selectItem}>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white pa1'>\r\n                                <h4 className='tc'>Process<br />Inbox</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='w-50 h-100 pa1'>\r\n                            <InboxOverview touchFunction={passTitle}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function Stats() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns ba b--black-10'>\r\n            <h1 className='tc'>STATS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { PROJECTS, STATS, TASKS, INBOX, NEW_ITEM } from '../constants';\r\nimport List from '../components/List';\r\nimport { db } from '../db';\r\nimport './Home.css';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport NewItem from '../components/NewItem';\r\nimport Details from './Details';\r\nimport Home from './Home';\r\nimport Stats from './Stats';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Main(props) {\r\n    \r\n    const { view, itemID, onTouch, changeItemID } = props;\r\n    \r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    const views = [ NEW_ITEM, PROJECTS, TASKS, INBOX ];\r\n\r\n    switch( true) {\r\n        case (view === STATS):\r\n            return (\r\n                <Stats />\r\n            )\r\n        case views.indexOf(view) !== -1 :\r\n            if (itemID === \"0\" || itemID === 0) { // Imagine the id for list component = 0\r\n                if (view === NEW_ITEM) {\r\n                    return (\r\n                        <div className='h-100 pa1'>\r\n                            <div className='show h-10'>\r\n                                <h6>EXP: 205</h6>\r\n                            </div>\r\n                            <div className='h-90'>\r\n                                <NewItem submitFunction={passTitle} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className='h-100 lightup'>\r\n                            <div className='show h-10'>\r\n                                <h6>EXP: 205</h6>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <div className='h-100 w-100 center br1 ba b--black-10 pa1'>\r\n                                    <h1 className='tc'>{view}</h1>\r\n                                    <div className=' h-70 '>\r\n                                        <List content={db} filter={view} touchFunction={passKey}/>\r\n                                    </div>\r\n                                    <div className='flex justify-center pt2'>\r\n                                        <NewItemButton touchFunction={passTitle} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <div className='h-100 pa1'>\r\n                            <div className='show h-10'>\r\n                                <h6>EXP: 205</h6>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <Details itemID={itemID} touchFunction={passKey} />\r\n                            </div>\r\n                        </div>\r\n                )\r\n            }\r\n        default:\r\n            return (\r\n                <Home />\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView } from './actions';\r\nimport NavBar from './containers/NavBar';\r\nimport './App2.css';\r\nimport Main from './containers/Main';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <div className='home-container'>\r\n                <Main />\r\n            </div>\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './tachyonBoost.css';\nimport { selectViewReducer, selectItemReducer } from './reducers';\nimport App2 from './App2';\n\nconst rootReducer = combineReducers({selectViewReducer, selectItemReducer});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App2  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}