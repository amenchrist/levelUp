{"version":3,"sources":["constants.js","actions.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/StatsButton.js","containers/NavBar.js","components/ListItem.js","components/Scroll.js","components/List.js","InboxItems.js","TaskList.js","ProjectList.js","ReferenceList.js","components/NewItemButton.js","components/NewTask.js","components/NewMission.js","components/NewItem.js","components/QuestionAndOptions.js","components/QuestionAndInput.js","containers/Processor.js","components/PrevItemButton.js","components/NextItemButton.js","components/ItemDetails.js","components/DatePicker.js","components/Timer.js","components/TaskControls.js","components/TaskDetails.js","components/ProjectDetails.js","components/BackButton.js","components/ReferenceDetails.js","containers/Details.js","components/ActiveTaskTimer.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","db.js","components/NewItemTile.js","components/TodaysMission.js","containers/Home.js","containers/Stats.js","containers/Main.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["PROJECT","TASK","INBOX_ITEM","UNPROCESSED","LOW","selectView","item","type","payload","selectItem","itemID","UpdateExp","exp","RestorePreviousState","previousState","UpdateTaskStatus","status","SetActiveTask","task","HomeButton","touchFunction","className","title","onClick","ProjectsButton","TasksButton","InboxButton","StatsButton","connect","state","view","selectViewReducer","dispatch","changeView","changeItemID","id","props","passTitle","e","checkForTitle","t","parentNode","target","ListItem","name","Date","dueDate","toISOString","substr","taskList","length","requiredContext","entryDate","Scroll","style","overflowY","overflowX","children","List","content","filter","missionTasks","map","entry","i","key","dueToday","todaysTasks","dailyEx","frequency","dailyTasks","filteredContent","ListItems","InboxItems","description","TaskList","timeSpent","priority","outcomeRecordID","outcome","note","timeRequired","associatedProject","requirements","ProjectList","output","outputRecordID","timeRemaining","nextAction","ReferenceList","NewItemButton","selectItemReducer","onTouch","updateExp","today","useState","setName","setOutcome","setRequiredContext","setNote","setDueDate","setPriority","setFrequency","setRequirements","setAssociatedProject","Task","d","this","getTime","onSubmit","event","console","log","unshift","preventDefault","placeholder","value","onChange","htmlFor","min","disabled","defaultValue","purpose","setPurpose","Mission","principles","m","submitFunction","setType","Item","submitNewItem","displayTypeForm","QuestionAndOptions","question","yes","no","QuestionandInput","answer","setAnswer","nextItemID","itemIndex","isDelegatable","Project","goal","setInterval","timeNow","isActionable","setIsActionable","action","setAction","isMultistep","setIsMultistep","isDoneInFive","setIsDoneInFive","setIsDelegatable","step","setStep","nextID","setNextID","processNextItem","makeNewTask","splice","updateStatus","proceed","proj","makeNewProject","PrevItemButton","selectAnother","prevID","currentID","NextItemButton","ItemDetails","indx","readyToProcess","setReadyToProcess","DatePicker","date","setdate","changeDate","setchangeDate","useEffect","onBlur","activeTask","SetActiveTaskReducer","UpdateTaskStatusReducer","taskStatus","activeSince","updateTaskStatus","setActiveTask","parseInt","dateNow","s","secs","mins","hrs","seconds","setSeconds","minutes","setminutes","hours","sethours","isActive","setIsActive","isUpdated","setIsUpdated","interval","clearInterval","toLocaleString","undefined","minimumIntegerDigits","UpdateExpReducer","prevTimeSpent","startTimer","markAsDone","previousView","position","db","setrequiredContext","setoutcome","setdueDate","setnote","rows","cols","TaskControls","RestorePreviousStateReducer","restorePreviousState","project","projectTasks","tasks","j","push","getTasks","checkForID","previousItemID","reference","Details","itemType","prev","next","BackButton","ProjectDetails","TaskDetails","ReferenceDetails","stopPropagation","StatsOverview","ActiveTaskTimer","TaskOverview","ProjectsOverview","InboxOverview","concat","NewItemTile","TodaysMission","gotoItem","Stats","views","indexOf","NewItem","Boolean","window","location","hostname","match","initialState","initialActiveTask","rootReducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iTAiBaA,G,MAAU,WACVC,EAAO,OACPC,EAAa,aAQbC,EAAc,cAYdC,EAAM,MCrCNC,EAAa,SAACC,GACvB,MAAO,CACPC,KDHuB,cCIvBC,QAASF,IAeAG,EAAa,SAACC,GACvB,MAAO,CACPH,KDjBuB,cCkBvBC,QAASE,IAGAC,EAAY,SAACC,GACtB,MAAO,CACPL,KD1BsB,aC2BtBC,QAASI,IAGAC,EAAuB,SAACC,GACjC,MAAO,CACPP,KD5BkC,yBC6BlCC,QAASM,IAGAC,EAAmB,SAACC,GAC7B,MAAO,CACPT,KDjC8B,qBCkC9BC,QAASQ,IAGAC,EAAgB,SAACC,GAC1B,MAAO,CACPX,KDtC2B,kBCuC3BC,QAASU,IC7CE,SAASC,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,cACjC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,WAAWC,QAASH,GAC5G,wBAAIC,UAAU,MAAd,MCHG,SAASG,EAAT,GAA0C,IAAjBJ,EAAgB,EAAhBA,cACpC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,WAAWC,QAASH,GAC5G,wBAAIC,UAAU,MAAd,MCHG,SAASI,EAAT,GAAyC,IAAlBL,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCHG,SAASK,EAAT,GAAyC,IAAlBN,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCHG,SAASM,EAAT,GAAyC,IAAlBP,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,uEAAuEC,MAAM,QAAQC,QAASH,GACzG,wBAAIC,UAAU,MAAd,MCmDGO,mBA/CS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,SAIX,SAACE,GACxB,MAAO,CACHC,WAAY,SAACX,GACT,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAmCxBP,EA9Bf,SAAgBQ,GAAQ,IACZH,EAA8BG,EAA9BH,WAAYC,EAAkBE,EAAlBF,aACpB,SAASG,EAAUC,IAMf,SAASC,EAAcC,GACfA,EAAElB,OACFW,EAAWO,EAAElB,OACbY,EAAa,KAEbM,EAAIA,EAAEC,WACNF,EAAcC,IAPtBD,CADWD,EAAEI,QAajB,OACI,yBAAKrB,UAAU,sBACX,kBAACF,EAAD,CAAYC,cAAeiB,IAC3B,kBAACX,EAAD,CAAaN,cAAeiB,IAC5B,kBAACZ,EAAD,CAAaL,cAAeiB,IAC5B,kBAACb,EAAD,CAAgBJ,cAAeiB,IAC/B,kBAACV,EAAD,CAAaP,cAAeiB,Q,MC/CzB,SAASM,EAAT,GAA4C,IAAvBvB,EAAsB,EAAtBA,cAAed,EAAO,EAAPA,KAE/C,OAAOA,EAAKC,MACR,KAAKP,EACD,OACI,yBAAKqB,UAAU,uEAAuEc,GAAI7B,EAAK6B,GAAIZ,QAASH,GACxG,yBAAKC,UAAU,SACX,uBAAGA,UAAU,mBAAmBf,EAAKsC,MACrC,uBAAGvB,UAAU,aAAb,QAAgC,IAAIwB,KAAKvC,EAAKwC,SAAUC,cAAcC,OAAO,EAAG,IAAhF,YAA8F1C,EAAK2C,SAASC,SAEhH,6BACI,uBAAG7B,UAAU,cAAb,SAIhB,KAAKpB,EACD,OACI,yBAAKoB,UAAU,uEAAuEc,GAAI7B,EAAK6B,GAAIZ,QAASH,GACxG,yBAAKC,UAAU,QACf,uBAAGA,UAAU,mBAAmBf,EAAKsC,MACrC,uBAAGvB,UAAU,aAAaf,EAAK6C,kBAE/B,6BACI,uBAAG9B,UAAU,cAAb,SAIhB,KAAKnB,EACD,OACI,yBAAKmB,UAAU,uEAAuEc,GAAI7B,EAAK6B,GAAIZ,QAASH,GACxG,yBAAKC,UAAU,QACf,uBAAGA,UAAU,mBAAmBf,EAAKsC,MACrC,uBAAGvB,UAAU,aAAc,IAAIwB,KAAKvC,EAAK8C,WAAYL,cAAcC,OAAO,EAAG,MAE7E,yBAAK3B,UAAU,OACX,uBAAGA,UAAU,sBAAb,aAIhB,QACI,OACI,yBAAKA,UAAU,KAAKC,MAAM,WAAWC,QAASH,GAC1C,gDC5CL,SAASiC,EAAOjB,GAC3B,OACI,yBAAKf,UAAU,QAAQiC,MAAO,CAACC,UAAW,SAAUC,UAAW,WAC1DpB,EAAMqB,UCAJ,SAASC,EAAT,GAAmD,IAAnCtC,EAAkC,EAAlCA,cAAeuC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAI7CC,EAAeF,EAAQG,KAAI,SAACC,EAAMC,GACpC,OAAO,kBAACrB,EAAD,CAAUrC,KAAMqD,EAAQK,GAAI5C,cAAeA,EAAe6C,IAAKN,EAAQK,GAAG7B,QAI/E+B,EAAWP,EAAQC,QAAO,SAACG,GAAD,OAC1BA,EAAMjB,WAAY,IAAID,MAAOE,cAAcC,OAAO,EAAG,KViB3C,SUjBoDe,EAAM/C,UACpEmD,EAAcD,EAASJ,KAAI,SAACC,EAAMC,GACpC,OAAO,kBAACrB,EAAD,CAAUrC,KAAM4D,EAASF,GAAI5C,cAAeA,EAAe6C,IAAKN,EAAQK,GAAG7B,QAKhFiC,EAAUT,EAAQC,QAAO,SAACG,GAAD,MV0Bd,UU1B0BA,EAAMM,aAC3CC,EAAaF,EAAQN,KAAI,SAACC,EAAOC,GACnC,OAAO,kBAACrB,EAAD,CAAUrC,KAAM8D,EAAQJ,GAAI5C,cAAeA,EAAe6C,IAAKN,EAAQK,GAAG7B,QAKjF5B,EAAO,GACX,OAAOqD,GACH,IVhBa,QUiBTrD,EAAON,EACX,MACA,IVtBgB,WUuBZM,EAAOP,EACP,MACJ,IVhBkB,aUiBdO,EVhBa,YUiBb,MACJ,QACIA,EAAOL,EAGf,IAAMqE,EAAkBZ,EAAQC,QAAO,SAACG,GAAD,OAAYA,EAAMxD,OAASA,KAE5DiE,EAAYD,EAAgBT,KAAI,SAACC,EAAMC,GACzC,OAAO,kBAACrB,EAAD,CAAUrC,KAAMiE,EAAgBP,GAAI5C,cAAeA,EAAe6C,IAAKN,EAAQK,GAAG7B,QAO7F,OAAOyB,GACH,IVZa,QUaT,OACI,kBAACP,EAAD,KACKc,GAGb,IVba,QUcT,OACI,kBAACd,EAAD,KACKiB,GAGb,IVzBe,UU0BX,OACI,kBAACjB,EAAD,KACKQ,GAGb,QACI,OACI,kBAACR,EAAD,KACKmB,IC1Ed,IAAMC,EAAa,CACtB,CACIlE,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEZ,CACII,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEZ,CACII,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEX,CACGI,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEX,CACGI,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEX,CACGI,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEX,CACGI,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEX,CACGI,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEZ,CACII,KAAML,EACNiC,GAAI,EACJiB,UAAW,WACXR,KAAM,iBACN8B,YAAa,4BACb1D,OAAQb,GAEZ,CACII,KAAML,EACNiC,GAAI,GACJiB,UAAW,WACXR,KAAM,kBACN8B,YAAa,4BACb1D,OAAQb,IC/EHwE,EAAW,CACpB,CACIpE,KAAMN,EACNkC,GAAI,cACJiB,UAAW,GACXpC,OAAQ,UACRqD,UAAW,EACXO,UAAW,IACXC,SAAWzE,EACX0E,gBAAiB,EACjBlC,KAAM,eACNmC,QAAS,sBACT5B,gBAAiB,qBACjB6B,KAAM,yBACNlC,SAAS,IAAID,MAAOE,cAAcC,OAAO,EAAG,IAC5CiC,aAAc,IACdC,kBAAmB,CACftC,KAAM,UACNT,GAAI,eAERgD,aAAc,gBACdvE,IAAK,IAET,CACIL,KAAMN,EACNkC,GAAI,cACJiB,UAAW,GACXpC,OAAQ,UACRqD,UAAW,EACXO,UAAW,IACXC,SAAWzE,EACX0E,gBAAiB,EACjBlC,KAAM,eACNmC,QAAS,sBACT5B,gBAAiB,qBACjB6B,KAAM,yBACNlC,QAAS,cACTmC,aAAc,IACdC,kBAAmB,CACftC,KAAM,UACNT,GAAI,eAERgD,aAAc,gBACdvE,IAAK,IAET,CACIL,KAAMN,EACNkC,GAAI,cACJiB,UAAW,GACXpC,OAAQ,UACRqD,UZJa,QYKbO,UAAW,KACXC,SAAWzE,EACX0E,gBAAiB,EACjBlC,KAAM,eACNmC,QAAS,sBACT5B,gBAAiB,qBACjB6B,KAAM,yBACNlC,QAAS,cACTmC,aAAc,IACdC,kBAAmB,CACftC,KAAM,UACNT,GAAI,eAERgD,aAAc,gBACdvE,IAAK,IAET,CACIL,KAAMN,EACNkC,GAAI,cACJiB,UAAW,GACXpC,OAAQ,UACRqD,UZ1Ba,QY2BbO,UAAW,IACXC,SAAWzE,EACX0E,gBAAiB,EACjBlC,KAAM,cACNmC,QAAS,wCACT5B,gBAAiB,qBACjB6B,KAAM,yBACNlC,QAAS,cACTmC,aAAc,IACdC,kBAAmB,CACftC,KAAM,UACNT,GAAI,eAERgD,aAAc,gBACdvE,IAAK,IAET,CACIL,KAAMN,EACNkC,GAAI,cACJiB,UAAW,GACXpC,OAAQ,UACRqD,UAAW,EACXO,UAAW,IACXC,SAAWzE,EACX0E,gBAAiB,EACjBlC,KAAM,YACNmC,QAAS,wCACT5B,gBAAiB,qBACjB6B,KAAM,yBACNlC,QAAS,cACTmC,aAAc,IACdC,kBAAmB,CACftC,KAAM,UACNT,GAAI,eAERgD,aAAc,gBACdvE,IAAK,KC7GAwE,EAAc,CACvB,CACI7E,KAAMP,EACNmC,GAAI,cACJvB,IAAK,GACLgC,KAAM,wBACNoC,KAAM,kBACND,QAAS,4EACTM,OAAQ,wCACRC,eAAgB,KAChBxC,QAAS,WACTmC,aAAc,QACdM,cAAe,QACfvE,ObWiB,YaVjBwE,WAAY,CACRrD,GAAI,GACJjB,KAAM,wBACNmE,OAAQ,yCAEZpC,SAAU,CAAE,cAAe,gBAE/B,CACI1C,KAAMP,EACNmC,GAAI,cACJvB,IAAK,GACLgC,KAAM,YACNoC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBxC,QAAS,WACTmC,aAAc,QACdM,cAAe,QACfvE,ObTiB,YaUjBwE,WAAY,CACRrD,GAAI,GACJjB,KAAM,yBAEV+B,SAAU,CAAE,gBAEhB,CACI1C,KAAMP,EACNmC,GAAI,cACJvB,IAAK,GACLgC,KAAM,YACNoC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBxC,QAAS,WACTmC,aAAc,QACdM,cAAe,QACfvE,OAAQ,cACRwE,WAAY,CACRrD,GAAI,GACJjB,KAAM,yBAEV+B,SAAU,CAAE,gBAEhB,CACI1C,KAAMP,EACNmC,GAAI,cACJvB,IAAK,GACLgC,KAAM,YACNoC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBxC,QAAS,WACTmC,aAAc,QACdM,cAAe,QACfvE,OAAQ,cACRwE,WAAY,CACRrD,GAAI,GACJjB,KAAM,yBAEV+B,SAAU,CAAE,gBAEhB,CACI1C,KAAMP,EACNmC,GAAI,cACJvB,IAAK,GACLgC,KAAM,YACNoC,KAAM,kBACND,QAAS,qCACTM,OAAQ,wCACRC,eAAgB,KAChBxC,QAAS,WACTmC,aAAc,QACdM,cAAe,QACfvE,OAAQ,cACRwE,WAAY,CACRrD,GAAI,GACJjB,KAAM,yBAEV+B,SAAU,KCjGLwC,EAAgB,G,MCGd,SAASC,EAAT,GAA2C,IAAlBtE,EAAiB,EAAjBA,cACpC,OACI,yBAAKC,UAAU,gDAAgDC,Mfe/C,WefgEC,QAASH,GACrF,wBAAIC,UAAU,uBAAd,M,kBC6FGO,mBA7FS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BpB,OAAQmB,EAAM8D,kBAAkBjF,WAIb,SAACsB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAgFxBP,EA3Ef,YAA+C,IAA5BM,EAA2B,EAA3BA,aAAc2D,EAAa,EAAbA,UAEzBC,GAAQ,IAAIjD,MAAOE,cAAcC,OAAO,EAAG,IAFL,EAIhB+C,mBAAS,IAJO,mBAIlCnD,EAJkC,KAI5BoD,EAJ4B,OAKVD,mBAAS,IALC,mBAKlChB,EALkC,KAKzBkB,EALyB,OAMMF,mBAAS,IANf,mBAMlC5C,EANkC,KAMjB+C,EANiB,OAOhBH,mBAAS,IAPO,mBAOlCf,EAPkC,KAO5BmB,EAP4B,OAQVJ,mBAASD,GARC,mBAQlChD,EARkC,KAQzBsD,EARyB,OASRL,mBAAS,IATD,mBASlClB,EATkC,KASxBwB,EATwB,OAUNN,mBAAS,GAVH,mBAUlC1B,EAVkC,KAUvBiC,EAVuB,OAWAP,mBAAS,IAXT,mBAWlCZ,EAXkC,KAWpBoB,EAXoB,OAYUR,mBAAS,IAZnB,mBAYlCb,EAZkC,KAYfsB,EAZe,KAcpCC,EACF,aAAe,oBACX,IAAMC,EAAG,IAAI7D,KAEbyD,EAAa,GACbE,EAAqB,IAErBG,KAAKpG,KAAON,EACZ0G,KAAKxE,GAAKuE,EAAEE,UACZD,KAAKvD,UAAYsD,EAAEE,UACnBD,KAAK3F,OhBnBM,UgBoBX2F,KAAK9B,SAAWA,EAChB8B,KAAKtC,UAAYA,EACjBsC,KAAK/B,UAAY,EACjB+B,KAAK7B,gBAAkB,EACvB6B,KAAK/D,KAAOA,EACZ+D,KAAK5B,QAAUA,EACf4B,KAAKxD,gBAAkBA,EACvBwD,KAAK3B,KAAOA,EACZ2B,KAAK7D,QAAUA,EACf6D,KAAK1B,aAAe,EACpB0B,KAAKxB,aAAeA,EACpBwB,KAAKzB,kBAAoBA,EACzByB,KAAK/F,IAAM,IAanB,OACI,yBAAKS,UAAU,8CACX,wBAAIA,UAAU,MAAd,YACA,0BAAMwF,SAZd,SAAuBC,GACnB,IAAItE,EAAI,IAAIiE,EACZM,QAAQC,IAAIxE,GACZmC,EAASsC,QAAQzE,GACjBqD,EAAU,GACV3D,EAAaM,EAAEL,IACf2E,EAAMI,kBAM6B7F,UAAU,mBAAmBC,MAAOrB,GAC/D,2BAAOM,KAAK,OAAO4G,YAAY,OAAOC,MAAOxE,EAAMyE,SAAU,SAAC/E,GAAD,OAAM0D,EAAQ1D,EAAEI,OAAO0E,UACpF,2BAAO7G,KAAK,OAAO4G,YAAY,UAAUC,MAAOrC,EAASsC,SAAU,SAAC/E,GAAD,OAAO2D,EAAW3D,EAAEI,OAAO0E,UAC9F,8BAAUD,YAAY,mBAAmBC,MAAOjE,EAAiBkE,SAAU,SAAC/E,GAAD,OAAO4D,EAAmB5D,EAAEI,OAAO0E,UAC9G,8BAAUD,YAAY,OAAOC,MAAOpC,EAAMqC,SAAU,SAAC/E,GAAD,OAAO6D,EAAQ7D,EAAEI,OAAO0E,UAC5E,2BAAOE,QAAQ,WAAWjG,UAAU,IAApC,aACA,2BAAOc,GAAG,WAAW5B,KAAK,OAAOgH,IAAKzB,EAAOsB,MAAOtE,EAASuE,SAAU,SAAC/E,GAAD,OAAO8D,EAAW9D,EAAEI,OAAO0E,UAClG,4BAAQjF,GAAG,WAAWiF,MAAOvC,EAAUwC,SAAU,SAAC/E,GAAD,OAAM+D,EAAY/D,EAAEI,OAAO0E,SACxE,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,cAAY,GAAtC,YACA,4BAAQL,MAAOhH,GAAf,OACA,4BAAQgH,MhB/CN,UgB+CF,UACA,4BAAQA,MhB/CR,QgB+CA,SAEJ,8BAAUD,YAAY,eAAeC,MAAOjC,EAAckC,SAAU,SAAC/E,GAAD,OAAOiE,EAAgBjE,EAAEI,OAAO0E,UAGpG,2BAAO7G,KAAK,SAAS6G,MAAM,gBCW5BxF,mBAlGS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BpB,OAAQmB,EAAM8D,kBAAkBjF,WAIb,SAACsB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAqFxBP,EAhFf,YAAkD,IAA5BM,EAA2B,EAA3BA,aAAc2D,EAAa,EAAbA,UAE5BC,GAAQ,IAAIjD,MAAOE,cAAcC,OAAO,EAAG,IAFF,EAInB+C,mBAAS,IAJU,mBAIrCnD,EAJqC,KAI/BoD,EAJ+B,OAKbD,mBAAS,IALI,mBAKrC2B,EALqC,KAK5BC,EAL4B,OAMb5B,mBAAS,IANI,mBAMrChB,EANqC,KAM5BkB,EAN4B,OAOnBF,mBAAS,IAPU,mBAOrCf,EAPqC,KAO/BmB,EAP+B,OAQbJ,mBAASD,GARI,mBAQrChD,EARqC,KAQ5BsD,EAR4B,OASXL,mBAAS,IATE,mBASrClB,EATqC,KAS3BwB,EAT2B,OAUTN,mBAAS,GAVA,mBAUrC1B,EAVqC,KAU1BiC,EAV0B,OAWHP,mBAAS,IAXN,mBAWrCZ,EAXqC,KAWvBoB,EAXuB,KAevCqB,EACF,aAAe,oBACX,IAAMlB,EAAG,IAAI7D,KAEb8D,KAAKpG,KAAOP,EACZ2G,KAAKxE,GAAKuE,EAAEE,UACZD,KAAKvD,UAAYsD,EAAEE,UACnBD,KAAK3F,OjBjBM,UiBkBX2F,KAAK9B,SAAWA,EAChB8B,KAAKtC,UAAYA,EACjBsC,KAAK/B,UAAY,EACjB+B,KAAK7B,gBAAkB,EACvB6B,KAAK/D,KAAOA,EACZ+D,KAAKe,QAAUA,EACff,KAAK5B,QAAUA,EACf4B,KAAKkB,WAAa,GAClBlB,KAAK3B,KAAOA,EACZ2B,KAAK7D,QAAUA,EACf6D,KAAK1B,aAAe,EACpB0B,KAAKxB,aAAeA,EACpBwB,KAAK1D,SAAW,GAChB0D,KAAK/F,IAAM,IAmBnB,OACI,yBAAKS,UAAU,8CACX,wBAAIA,UAAU,MAAd,eACA,0BAAMwF,SAlBd,SAAuBC,GAEnB,IAAIgB,EAAI,IAAIF,EACZb,QAAQC,IAAIc,GAEZ1C,EAAY6B,QAAQa,GACpBjC,EAAU,GACV3D,EAAa4F,EAAE3F,IACf2E,EAAMI,iBACNZ,EAAa,IASsBjF,UAAU,mBAAmBC,MjBxCjD,WiByCP,2BAAOf,KAAK,OAAO4G,YAAY,OAAOC,MAAOxE,EAAMyE,SAAU,SAAC/E,GAAD,OAAM0D,EAAQ1D,EAAEI,OAAO0E,UACpF,2BAAO7G,KAAK,OAAO4G,YAAY,UAAUC,MAAOrC,EAASsC,SAAU,SAAC/E,GAAD,OAAO2D,EAAW3D,EAAEI,OAAO0E,UAC9F,8BAAUD,YAAY,sCAAsCC,MAAOM,EAASL,SAAU,SAAC/E,GAAD,OAAOqF,EAAWrF,EAAEI,OAAO0E,UACjH,8BAAUD,YAAY,OAAOC,MAAOpC,EAAMqC,SAAU,SAAC/E,GAAD,OAAO6D,EAAQ7D,EAAEI,OAAO0E,UAC5E,2BAAOE,QAAQ,WAAWjG,UAAU,IAApC,aACA,2BAAOc,GAAG,WAAW5B,KAAK,OAAOgH,IAAKzB,EAAOsB,MAAOtE,EAASuE,SAAU,SAAC/E,GAAD,OAAO8D,EAAW9D,EAAEI,OAAO0E,UAClG,4BAAQjF,GAAG,WAAWiF,MAAOvC,EAAUwC,SAAU,SAAC/E,GAAD,OAAM+D,EAAY/D,EAAEI,OAAO0E,SACxE,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,cAAY,GAAtC,YACA,4BAAQL,MAAOhH,GAAf,OACA,4BAAQgH,MjBpDN,UiBoDF,UACA,4BAAQA,MjBpDR,QiBoDA,SAEJ,8BAAUD,YAAY,eAAeC,MAAOjC,EAAckC,SAAU,SAAC/E,GAAD,OAAOiE,EAAgBjE,EAAEI,OAAO0E,UAGpG,2BAAO7G,KAAK,SAAS6G,MAAM,gBCxE5BxF,eAlBS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BpB,OAAQmB,EAAM8D,kBAAkBjF,WAIb,SAACsB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAKxBP,EAGf,YAAoE,EAAjDmG,eAAkD,IAAlCjG,EAAiC,EAAjCA,KAAM+D,EAA2B,EAA3BA,UAAW3D,EAAgB,EAAhBA,aAAgB,EAEtC6D,mBAASjE,GAF6B,mBAExDvB,EAFwD,KAElDyH,EAFkD,OAGtCjC,mBAAS,mBAH6B,mBAGxDnD,EAHwD,KAGlDoD,EAHkD,SAY1DiC,EACF,WAAYrF,GAAyB,4EACjC,IAAM8D,EAAG,IAAI7D,KAEb8D,KAAKpG,KAAOL,EACZyG,KAAKxE,GAAKuE,EAAEE,UACZD,KAAKvD,UAAYsD,EAAEE,UACnBD,KAAK/D,KAAOA,EACZ+D,KAAKjC,YAAc,GACnBiC,KAAK3F,OAASb,GAKtB,SAAS+H,EAAcpB,GACnB,GAAY,oBAATlE,GAAuC,KAATA,EAAa,CAC1CmE,QAAQC,IAAI,eACZ,IAAIhD,EAAI,IAAIiE,EAAKrF,GACjB6B,EAAWwC,QAAQjD,GACnB+C,QAAQC,IAAIhD,GACZ6B,EAAU,GACV3D,EAAa8B,EAAE7B,IA1BnB6F,EAAQ9H,GACR8F,EAAQ,mBA4BJc,EAAMI,iBAEVJ,EAAMI,iBAuBV,OACI,yBAAK7F,UAAU,aACX,4BAAQA,UAAU,cAAcE,QAAS,SAACe,GAAD,OAAM0F,ElB5EtC,WkB4ET,SACA,4BAAQ3G,UAAU,cAAcE,QAAS,SAACe,GAAD,OAAM0F,EAAQ/H,KAAvD,QACA,4BAAQoB,UAAU,cAAcE,QAAS,SAACe,GAAD,OAAM0F,ElBpDpC,akBoDX,WACA,4BAAQ3G,UAAU,cAAcE,QAAS,SAACe,GAAD,OAAM0F,EAAQ1F,EAAEI,OAAO0E,SAAhE,OACA,4BAAQ/F,UAAU,cAAcE,QAAS,SAACe,GAAD,OAAM0F,EAAQ1F,EAAEI,OAAO0E,SAAhE,WA1BR,WACI,QAAO,GACH,KAAK7G,IAASN,EACV,OAAO,kBAAC,EAAD,CAAS4F,UAAWA,IAC/B,IlBhCW,YkBgCNtF,EACD,OAAO,kBAAC,EAAD,CAAYsF,UAAWA,IAClC,QACI,OACI,yBAAKxE,UAAU,sCACX,wBAAIA,UAAU,aAAd,YACA,0BAAMwF,SAAUqB,EAAe7G,UAAU,mBAAmBC,MlBhE/D,SkBiEO,2BAAOf,KAAK,OAAO8G,SAAU,SAAC/E,GAAD,OAAM0D,EAAQ1D,EAAEI,OAAO0E,QAAQD,YAAY,qBAAqB9F,UAAU,YAEvG,2BAAOd,KAAK,SAAS6G,MAAM,cAc1Ce,OC/FE,SAASC,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,IAAKC,EAAM,EAANA,GACxD,OACI,yBAAKlH,UAAU,qDACX,wBAAIA,UAAU,gBAAgBgH,GAC9B,6BACI,4BAAQhH,UAAU,SAASE,QAAS+G,GAApC,OACA,4BAAQjH,UAAU,SAASE,QAASgH,GAApC,QCND,SAASC,EAAT,GAAyD,IAA7BH,EAA4B,EAA5BA,SAAUN,EAAkB,EAAlBA,eAAkB,EAErChC,mBAAS,IAF4B,mBAE3D0C,EAF2D,KAEnDC,EAFmD,KAcnE,OACI,yBAAKrH,UAAU,2EACX,wBAAIA,UAAU,gBAAgBgH,GAC9B,0BAAMxB,SAbd,SAAgBC,GAEC,KAAV2B,IACCV,EAAeU,GACfC,EAAU,KAEd5B,EAAMI,mBAQE,2BAAO3G,KAAK,OAAO6G,MAAOqB,EAAQpB,SAAU,SAAC/E,GAAD,OAAMoG,EAAUpG,EAAEI,OAAO0E,UACrE,2BAAO7G,KAAK,SAAS6G,MAAM,aCuO5BxF,mBA/OS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BpB,OAAQmB,EAAM8D,kBAAkBjF,WAIb,SAACsB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAkOxBP,EA7Nf,YAAkF,IAA7D+G,EAA4D,EAA5DA,WAAYrI,EAAgD,EAAhDA,KAAqB4B,GAA2B,EAA1Cd,cAA0C,EAA3Bc,cAAc0G,EAAa,EAAbA,UAE1DnC,EACF,WAAY7D,EAAKmC,EAAS8D,EAAe1F,GAAkB,oBACvD,IAAMuD,EAAI,IAAI7D,KACd8D,KAAKpG,KAAON,EACZ0G,KAAKxE,GAAKuE,EAAEE,UACZD,KAAKvD,UAAYsD,EAAEE,UACnBD,KAAK3F,OrBVM,UqBWX2F,KAAK9B,SAAW,OAChB8B,KAAKtC,UAAY,EACjBsC,KAAK/B,UAAY,EACjB+B,KAAK7B,gBAAkB,EACvB6B,KAAK/D,KAAOA,EACZ+D,KAAK5B,QAAUA,EACf4B,KAAKxD,gBAAkBA,EACvBwD,KAAK3B,KAAO,GACZ2B,KAAK7D,SAAW,IAAID,MAAQE,cAAcC,OAAO,EAAG,IACpD2D,KAAK1B,aAAe,EACpB0B,KAAKxB,aAAe,GACpBwB,KAAKzB,kBAAoB,GACzByB,KAAK/F,IAAM,GACX+F,KAAKkC,cAAgBA,EACrBlC,KAAKjC,YAAc,IAMrBoE,EACF,WAAYlG,EAAMmG,GAAO,IAAD,2BACpB,IAAMrC,EAAI,IAAI7D,KACd8D,KAAKpG,KAAOP,EACZ2G,KAAKxE,GAAKuE,EAAEE,UACZD,KAAK/D,KAAOA,EACZ+D,KAAKjC,YAAc,GACnBiC,KAAKoC,KAAOA,EACZpC,KAAK5B,QAAUA,EACf4B,KAAKrB,eAAiB,KACtBqB,KAAK7D,QAAW,IAAID,KAAM6D,EAAEE,UAAY,QAAc7D,cAAcC,OAAO,EAAG,IAC9E2D,KAAK1B,aAAe,OACpB0B,KAAKpB,cAAgByD,aAAY,WAC7B,IAAIC,GAAW,IAAIpG,MAAQ+D,UAC3B,OAAQ,EAAK9D,QAAUmG,IACxB,GACHtC,KAAK3F,OrBlDQ,YqBmDb2F,KAAKnB,WAAa,GAClBmB,KAAK1D,SAAW,IA/CqD,EA8E7C8C,mBAAS,IA9EoC,mBA8ErEhB,EA9EqE,KA8E5DkB,EA9E4D,OA+E7BF,mBAAS,IA/EoB,mBA+ErE5C,EA/EqE,KA+EpD+C,EA/EoD,OAgFnCH,mBAAS,MAhF0B,mBAgFrEmD,EAhFqE,KAgFvDC,EAhFuD,OAiF/CpD,mBAAS,IAjFsC,mBAiFrEqD,EAjFqE,KAiF7DC,EAjF6D,OAkFrCtD,mBAAS,MAlF4B,mBAkFrEuD,EAlFqE,KAkFxDC,EAlFwD,OAmFnCxD,mBAAS,MAnF0B,mBAmFrEyD,EAnFqE,KAmFvDC,EAnFuD,OAoFjC1D,mBAAS,MApFwB,mBAoFrE8C,EApFqE,KAoFtDa,EApFsD,OAqFnD3D,mBAAS,GArF0C,mBAqFrE4D,EArFqE,KAqF/DC,EArF+D,OAsF/C7D,mBAAS,GAtFsC,mBAsFrE8D,GAtFqE,KAsF7DC,GAtF6D,KAwF7E,SAASC,GAAgBzH,GACrBsH,EAAQ,GAYZ,SAASI,KACL,IAAI9I,EAAO,IAAIuF,EAAM2C,EAAQrE,EAAS8D,EAAe1F,GACrDwB,EAASsC,QAAQ/F,GAEjBuD,EAAWwF,OAAOrB,EAAU,GAC5BkB,GAAU5I,EAAKiB,IAInB,SAAS+H,KACL5J,EAAKU,OrBlHY,YqBqHrB,SAASmJ,KACLP,EAASD,EAAK,GAkBlB,OAXIrJ,EAAKU,SAAWb,GAAwB,IAATwJ,GAC/BQ,MAUG,GACH,KAAgB,IAATR,EACH,OACI,yBAAKtI,UAAU,mDACX,kBAAC+G,EAAD,CAAoBC,SAAS,sBAAsBC,IAAK,WAAQa,GAAgB,GAAOgB,MAAa5B,GAAI,WAAQY,GAAgB,GAV5I7I,EAAKC,KrBxIY,YqByIjB2J,KACAzF,EAAWwF,OAAOrB,EAAU,GAC5BnD,EAAcwB,QAAQ3G,GAOiJ6J,SAGvK,KAAwB,IAAjBjB,GAAmC,IAATS,EAEjC,OACI,yBAAKtI,UAAU,iFACX,wBAAIA,UAAU,gBAAd,gCACA,4BAAQA,UAAU,SAASc,GAAIwG,EAAYpH,QAASwI,IAApD,qBACA,4BAAQ1I,UAAU,SAASc,GAAIwG,EAAYpH,QAAS,kBAAMW,EAAa5B,EAAK6B,MAA5E,cAGR,KAAwB,IAAjB+G,GAAkC,IAATS,EAC5B,OACI,yBAAKtI,UAAU,mDACX,kBAACmH,EAAD,CAAkBH,SAAS,8BAA8BN,eAAgB,SAACU,GAAaxC,EAAWwC,GAAS0B,SAGvH,KAAgB,IAATR,EACH,OACI,yBAAKtI,UAAU,mDACX,kBAACmH,EAAD,CAAkBH,SAAS,0BAA0BN,eAAgB,SAACU,GAAaY,EAAUZ,GAAS0B,SAGlH,KAAgB,IAATR,EACH,OACI,yBAAKtI,UAAU,mDACX,kBAAC+G,EAAD,CAAoBC,SAAS,8CAA8CC,IAAK,WAAQiB,GAAe,GAAOY,KAvE9H,WACI,IAAIC,EAAO,IAAItB,EAASM,EAAQrE,GAChCK,EAAY6B,QAAQmD,GACpBF,KACAzF,EAAWwF,OAAOrB,EAAU,GAC5BkB,GAAUM,EAAKjI,IAkEuHkI,IAAqB9B,GAAI,WAAQgB,GAAe,GAAQY,SAG9L,KAAuB,IAAhBb,GAAiC,IAATK,EAE3B,OACI,yBAAKtI,UAAU,iFACX,wBAAIA,UAAU,gBAAd,gCACA,4BAAQA,UAAU,SAASc,GAAIwG,EAAYpH,QAASwI,IAApD,qBACA,4BAAQ1I,UAAU,SAASc,GAAIwG,EAAYpH,QAAS,kBAAMW,EAAa2H,MAAvE,iBAGZ,KAAuB,IAAhBP,GAAkC,IAATK,EAC5B,OACI,yBAAKtI,UAAU,mDACX,kBAAC+G,EAAD,CAAoBC,SAAS,2CAA2CC,IAAK,WAAQmB,GAAgB,GAAOU,MAAa5B,GAAI,WAAQkB,GAAgB,GAAQU,SAGzK,KAAuB,IAAjBX,GAAkC,IAATG,EAC3B,OACI,yBAAKtI,UAAU,mDACX,4CACA,qCACA,wIACA,4BAAQA,UAAU,SAASE,QAAS,WAAQ2I,KAAgBN,EAAQ,GArEhF1H,EAAa5B,EAAK6B,MAqEN,SAGZ,KAAwB,IAAjBqH,GAAmC,IAATG,EAC7B,OACI,yBAAKtI,UAAU,mDACX,kBAACmH,EAAD,CAAkBH,SAAS,kCAAkCN,eAAgB,SAACU,GAAavC,EAAmBuC,GAAS0B,SAInI,KAAgB,IAATR,EACH,OACI,yBAAKtI,UAAU,mDACX,kBAAC+G,EAAD,CAAoBC,SAAS,8BAA8BC,IAAK,WAAQoB,GAAiB,GAAOM,KAAeG,MAAc5B,GAAI,WAAQmB,GAAiB,GAAQM,KAAeG,SAG7L,KAAgB,IAATR,EACH,OACI,yBAAKtI,UAAU,gFACX,wBAAIA,UAAU,gBAAd,6BACA,4BAAQA,UAAU,SAASc,GAAIwG,EAAYpH,QAAUwI,IAArD,qBACA,4BAAQ1I,UAAU,SAASc,GAAIwG,EAAYpH,QAAS,kBAAMW,EAAa2H,MAAvE,cAGZ,QACI,OACI,yBAAKxI,UAAU,mDACX,4BAAQA,UAAU,SAASc,GAAIwG,EAAYpH,QAASwI,IAApD,0BCpPL,SAASO,EAAT,GAA8D,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,OAEpD,OAFwE,EAAZC,YAE3CD,EAET,yBAAKnJ,UAAU,gDAAgDE,QAAS,kBAAMgJ,EAAcC,KACxF,wBAAInJ,UAAU,uBAAd,SAKJ,yBAAKA,UAAU,2DACX,wBAAIA,UAAU,sBAAd,SCXD,SAASqJ,EAAT,GAA8D,IAApCH,EAAmC,EAAnCA,cAAeV,EAAoB,EAApBA,OACpD,OADwE,EAAZY,YAC3CZ,EAET,yBAAKxI,UAAU,gDAAgDE,QAAS,kBAAMgJ,EAAcV,KACxF,wBAAIxI,UAAU,uBAAd,SAKJ,yBAAKA,UAAU,2DACX,wBAAIA,UAAU,sBAAd,SCLD,SAASsJ,EAAT,GAOX,IAPuF,IAMnFC,EAN8BzI,EAAoD,EAApDA,GAAIf,EAAgD,EAAhDA,cAAemJ,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,OAAQX,EAAU,EAAVA,OAAU,EAExC9D,oBAAS,GAF+B,mBAE9E8E,EAF8E,KAE9DC,EAF8D,KAIlFxK,EAAO,GACPqI,EAAa,KAER3E,EAAE,EAAGA,EAAES,EAAWvB,OAAQc,IAE/B,GAAIS,EAAWT,GAAG7B,KAAOA,EAAG,CACzB7B,EAAOmE,EAAWT,GAClB4G,EAAO5G,EAEH2E,EADAlE,EAAWT,EAAE,GACAS,EAAWT,EAAE,GAAG7B,GAEnB,EAEd,MAMP,OAAO0I,GACH,KAAK,EACD,OACI,6BACI,wBAAIxJ,UAAU,eAAd,SAAmCf,EAAKsC,MACxC,wBAAIvB,UAAU,aAAd,eAAwC,IAAIwB,KAAKvC,EAAK8C,WAAYL,cAAcC,OAAO,EAAG,IAA1F,KAEA,yBAAK3B,UAAU,iFACX,4BAAQE,QAAS,kBAAKuJ,GAAkB,KAAxC,iBAEJ,kBAACpF,EAAD,CAAetE,cAAeA,IAC9B,yBAAKC,UAAU,iCACX,kBAACiJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQA,EAAQC,UAAWtI,IACzE,kBAACuI,EAAD,CAAgBH,cAAeA,EAAeV,OAAQA,EAAQY,UAAWtI,MAIzF,QACI,OACI,6BACI,wBAAId,UAAU,eAAd,SAAmCf,EAAKsC,MACxC,wBAAIvB,UAAU,aAAd,eAAwC,IAAIwB,KAAKvC,EAAK8C,WAAYL,cAAcC,OAAO,EAAG,IAA1F,KACA,6BACA,kBAAC,EAAD,CAAW1C,KAAMA,EAAMqI,WAAYA,EAAYvH,cAAeA,EAAewH,UAAWgC,MCnD7F,SAASG,EAAT,GAAuC,IAAjBzK,EAAgB,EAAhBA,KAAMwC,EAAU,EAAVA,QAAU,EACvBiD,mBAAS,IAAIlD,KAAKC,GAASC,cAAcC,OAAO,EAAG,KAD5B,mBACzCgI,EADyC,KACnCC,EADmC,OAEXlF,oBAAS,GAFE,mBAEzCmF,EAFyC,KAE7BC,EAF6B,KAWjD,OALAC,qBAAU,WACNH,EAAQ,IAAIpI,KAAKC,GAASC,cAAcC,OAAO,EAAG,KAClDmI,GAAc,KACf,CAACrI,GANY,IAQToI,GACH,KAAK,EACD,OACI,6BACI,2BAAO3K,KAAK,OAAOkH,aAAcuD,EAAM3D,SAAU,SAAC/E,GAAM2I,EAAQ3I,EAAEI,OAAO0E,QAAWiE,OAAQ,WAAM/K,EAAKwC,QAAQkI,EAAMG,GAAc,IAAS9J,UAAU,iCAGlK,QACI,OACA,wBAAIA,UAAU,YAAYE,QAAS,kBAAM4J,GAAc,KAAvD,QAAoE,IAAItI,KAAKvC,EAAKwC,SAASC,cAAcC,OAAO,EAAG,IAAnH,M,UCGGpB,eApBS,SAAAC,GACpB,MAAO,CACHyJ,WAAYzJ,EAAM0J,qBAAqBD,WACvCtK,OAAQa,EAAM2J,wBAAwBC,WACtCC,YAAa7J,EAAM0J,qBAAqBG,YACxCzC,QAASpH,EAAM0J,qBAAqBtC,YAIjB,SAACjH,GACxB,MAAO,CACH2J,iBAAkB,SAAC3K,GACf,OAAOgB,EAASjB,EAAiBC,KAErC4K,cAAe,SAAC1K,GACZ,OAAOc,EAASf,EAAcC,QAK3BU,EAEf,YAAsE,IAArDgD,EAAoD,EAApDA,UAAW1D,EAAyC,EAAzCA,KAAMoK,EAAmC,EAAnCA,WAAYI,EAAuB,EAAvBA,YAAuB,EAAVzC,QAGvD,GAAI/H,EAAKiB,KAAO0J,SAASP,EAAWnJ,IAAK,CACrC,IAAM2J,GAAW,IAAIjJ,MAAQ+D,UAC7BhC,GAAyBkH,EAAUJ,EAEvC3E,QAAQC,IAAI,gBAAgBpC,GAE5B,IAAImH,EAAInH,EAGJoH,GADJD,GAAKA,EADIA,EAAI,KACE,KACA,GAEXE,GADJF,GAAKA,EAAIC,GAAQ,IACF,GACXE,GAAOH,EAAIE,GAAQ,GAf0C,EAiBnClG,mBAASiG,GAjB0B,mBAiB1DG,EAjB0D,KAiBjDC,EAjBiD,OAkBnCrG,mBAASkG,GAlB0B,mBAkB1DI,EAlB0D,KAkBjDC,EAlBiD,OAmBvCvG,mBAASmG,GAnB8B,mBAmB1DK,EAnB0D,KAmBnDC,EAnBmD,OAoBjCzG,oBAAS,GApBwB,mBAoB1D0G,EApB0D,KAoBhDC,EApBgD,OAqB/B3G,oBAAS,GArBsB,mBAqB1D4G,EArB0D,KAqB/CC,EArB+C,KAmCjExB,qBAAU,WACNgB,EAAWJ,GACXM,EAAWL,GACXO,EAASN,GACLhL,EAAKiB,KAAO0J,SAASP,EAAWnJ,MAChCyK,GAAa,GACbF,GAAY,MAElB,CAAEV,EAAMC,EAAMC,EAAKZ,EAAW1G,UAAW0G,EAAWnJ,GAAIuJ,EAAaxK,EAAKiB,KAGvEjB,EAAKiB,KAAO0J,SAASP,EAAWnJ,MAAqB,IAAbsK,GACzCC,GAAY,GA0BhB,OAvBAtB,qBAAU,WACN,IAAIyB,EAAW,KAiBf,OAhBKJ,GAAavL,EAAKiB,KAAO0J,SAASP,EAAWnJ,IAClD0K,EAAW7D,aAAY,WACnBoD,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAC7BA,GAAW,KACVG,GAAW,SAAAD,GAAO,OAAIA,EAAS,KAC/BD,EAAW,GACRC,GAAW,KACVG,GAAS,SAAAD,GAAK,OAAIA,EAAO,KACzBD,EAAW,OAGpB,KACSG,GAAwB,IAAZN,GACxBW,cAAcD,GAGP,kBAAMC,cAAcD,MAE5B,CAAEJ,EAAUN,EAASE,EAASE,EAAOI,EAAWrB,EAAWnJ,GAAIjB,EAAKiB,KAGhEjB,EAAKiB,IACR,KAAKmJ,EAAWnJ,GACZ,OACI,yBAAKd,UAAU,IACX,wBAAIA,UAAU,eAAd,cACI,0BAAMA,UAAU,gBAAhB,IAAiCkL,EAAMQ,oBAAeC,EAAU,CAACC,qBAAsB,IAAvF,IACCZ,EAAQU,oBAAeC,EAAU,CAACC,qBAAsB,IADzD,IAECd,EAAQY,oBAAeC,EAAU,CAACC,qBAAsB,OAKzE,QACI,OACI,yBAAK5L,UAAU,IACf,yBAAKA,UAAU,IACX,wBAAIA,UAAU,eAAd,eAAyCkL,EAAMQ,oBAAeC,EAAU,CAACC,qBAAsB,IAA/F,IACCZ,EAAQU,oBAAeC,EAAU,CAACC,qBAAsB,IADzD,IAECd,EAAQY,oBAAeC,EAAU,CAACC,qBAAsB,IAFzD,WC9GpB,IA2BerL,eA3BS,SAAAC,GACpB,MAAO,CACHnB,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,IAC5BI,OAAQa,EAAM2J,wBAAwBC,WACtCH,WAAYzJ,EAAM0J,qBAAqBD,WACvCI,YAAa7J,EAAM0J,qBAAqBG,gBAIrB,SAAC1J,GACxB,MAAO,CACHE,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B0D,UAAW,SAACjF,GACR,OAAOoB,EAASrB,EAAUC,KAE9B+K,iBAAkB,SAAC3K,GACf,OAAOgB,EAASjB,EAAiBC,KAErC4K,cAAe,SAAC1K,GACZ,OAAOc,EAASf,EAAcC,QAK3BU,EAEf,YAA2H,IAAnGV,EAAkG,EAAlGA,KAAgC2E,GAAkE,EAA5F7E,OAA4F,EAApF2K,iBAAoF,EAAlE9F,WAAW3D,EAAuD,EAAvDA,aAAc0J,EAAyC,EAAzCA,cAAeF,EAA0B,EAA1BA,YAAaJ,EAAa,EAAbA,WAEnG6B,EAAgBjM,EAAK0D,UAE3B,SAASwI,IACLxB,EAAc1K,GACdA,EAAKF,O3BLS,S2BelB,SAASqM,IACL,IAAMvB,GAAW,IAAIjJ,MAAQ+D,UAC7B1F,EAAKF,O3BrBO,O2BsBZE,EAAK0D,UAAYuI,GAAiBrB,EAAUJ,GAE5C7F,EAAU3E,EAAKN,KACfsB,EAAahB,EAAKiB,IAGtB,OAAOjB,EAAKF,QACR,I3BzBc,S2B2BV,OADA+F,QAAQC,KAAsB,IAAlBsE,EAAWnJ,IAEnB,yBAAKd,UAAU,uBACX,4BAAQA,UAAU,SAASE,QArB3C,WACI,IAAMuK,GAAW,IAAIjJ,MAAQ+D,UAC7BgF,EAAc,IACd1K,EAAKF,O3BZS,S2BadE,EAAK0D,UAAYuI,GAAiBrB,EAAUJ,KAiBhC,SACA,4BAAQrK,UAAU,SAASE,QAAS8L,GAApC,cAGZ,I3BlCc,S2BmCV,OACI,yBAAKhM,UAAU,uBACX,4BAAQA,UAAU,SAASE,QAAS6L,GAApC,YACA,4BAAQ/L,UAAU,SAASE,QAAS8L,GAApC,cAGZ,I3B/Ce,U2BkDX,OAFAtG,QAAQC,WAAWsE,GACnBvE,QAAQC,IAAIsE,EAAWnJ,SACF6K,IAAlB1B,EAAWnJ,GAEN,yBAAKd,UAAU,uBACX,4BAAQA,UAAU,SAASE,QAAS6L,GAApC,SACA,4BAAQ/L,UAAU,SAASE,QAAS8L,GAApC,cAKJ,8BAGZ,QACI,OAAO,kCCpFnB,IA6BezL,eA7BS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BwL,aAAczL,EAAME,kBAAkBuL,aACtC5M,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,IAC5BI,OAAQa,EAAM2J,wBAAwBC,WACtCH,WAAYzJ,EAAM0J,qBAAqBD,WACvCI,YAAa7J,EAAM0J,qBAAqBG,gBAIrB,SAAC1J,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B0D,UAAW,SAACjF,GACR,OAAOoB,EAASrB,EAAUC,KAE9B+K,iBAAkB,SAAC3K,GACf,OAAOgB,EAASjB,EAAiBC,QAK9BY,EAGf,YAMI,IANuG,IAInG2L,EAJepL,EAAmF,EAAnFA,GAAwDuJ,GAA2B,EAA9ExJ,aAA8E,EAAhE2D,UAAgE,EAArD7E,OAAqD,EAA7C2K,iBAA6C,EAA3BD,aAAaJ,EAAc,EAAdA,WAElFkC,EAAK7I,EACPzD,EAAO,GAGF8C,EAAE,EAAGA,EAAEwJ,EAAGtK,OAAQc,IAEvB,GAAIwJ,EAAGxJ,GAAG7B,KAAOA,EAAG,CACjBjB,EAAOsM,EAAGxJ,GACVuJ,EAAWvJ,EACX,MAX+F,MAgB5E+B,mBAAS7E,EAAK0B,MAhB8D,mBAgB9FA,EAhB8F,KAgBxFoD,EAhBwF,OAiBtDD,mBAAS7E,EAAKiC,iBAjBwC,mBAiB9FA,EAjB8F,KAiB7EsK,EAjB6E,OAkBtE1H,mBAAS7E,EAAK6D,SAlBwD,mBAkB9FA,EAlB8F,KAkBrF2I,EAlBqF,OAmBtE3H,mBAAS7E,EAAK4B,SAnBwD,mBAmB9FA,EAnB8F,KAmBrF6K,EAnBqF,OAqB5E5H,mBAAS7E,EAAK8D,MArB8D,mBAqB9FA,EArB8F,KAqBxF4I,EArBwF,KAuBhG9B,GAAW,IAAIjJ,MAAQ+D,UAqB7B,OAXAwE,qBAAU,WACNpF,EAAQ9E,EAAK0B,MACb6K,EAAmBvM,EAAKiC,iBACxBuK,EAAWxM,EAAK6D,SAChB6I,EAAQ1M,EAAK8D,MACb2I,EAAWzM,EAAK4B,WACjB,CAAC5B,EAAK0B,KAAM1B,EAAKiC,gBAAiBjC,EAAK6D,QAAS7D,EAAK8D,KAAM9D,EAAK4B,QAAS5B,EAAK0D,UAAW8G,EAAaJ,EAAYpK,EAAKiB,GAAI2J,IAM1H,yBAAKzK,UAAU,IACX,6BACI,yBAAKA,UAAU,iBAGX,2BAAOd,KAAK,OAAO8G,SAAU,SAAC/E,GAAM0D,EAAQ1D,EAAEI,OAAO0E,QAAWiE,OAAQ,kBAAKnK,EAAK0B,KAAKA,GAAMwE,MAAOxE,EAAMvB,UAAU,kCACpH,2BAAOd,KAAK,OAAO8G,SAAU,SAAC/E,GAAMmL,EAAmBnL,EAAEI,OAAO0E,QAAWiE,OAAQ,kBAAKnK,EAAKiC,gBAAgBA,GAAiBiE,MAAOjE,EAAiB9B,UAAU,iCAEpK,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,aAAd,aAEA,8BAAUwM,KAAK,IAAIC,KAAK,KAAKzG,SAAU,SAAC/E,GAAMoL,EAAWpL,EAAEI,OAAO0E,QAAWiE,OAAQ,kBAAKnK,EAAK6D,QAAQA,GAASqC,MAAOrC,EAAS1D,UAAU,sCAE9I,yBAAKA,UAAU,sCAEX,wBAAIA,UAAU,aAAd,kBAA0CH,EAAK+D,cAC/C,kBAAC8F,EAAD,CAAYzK,KAAMY,EAAM4B,QAASA,KAIrC,yBAAKzB,UAAU,sCAEX,kBAAC,EAAD,CAAOuD,UAAW1D,EAAK0D,UAAW1D,KAAMA,IACxC,wBAAIG,UAAU,aAAd,8BAEJ,wBAAIA,UAAU,aAAd,WAAmCH,EAAKF,QACxC,wBAAIK,UAAU,+BAAd,QACA,yBAAKA,UAAU,OAEX,8BAAUwM,KAAK,IAAIC,KAAK,KAAKzG,SAAU,SAAC/E,GAAMsL,EAAQtL,EAAEI,OAAO0E,QAAWiE,OAAS,kBAAKnK,EAAK8D,KAAKA,GAAOoC,MAAOpC,EAAM3D,UAAU,iCAEpI,kBAAC0M,EAAD,CAAc7M,KAAMA,EAAMqM,SAAUA,SC7GpD,IA2Be3L,eA3BS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BwL,aAAczL,EAAME,kBAAkBuL,aACtC5M,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,IAC5BE,cAAee,EAAMmM,4BAA4BlN,kBAI9B,SAACkB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B0D,UAAW,SAACjF,GACR,OAAOoB,EAASrB,EAAUC,KAE9BqN,qBAAsB,SAACnN,GACnB,OAAOkB,EAASnB,EAAqBC,QAKlCc,EAEf,YAA0D,IAAhCsM,EAA+B,EAA/BA,QAAehM,GAAgB,EAAtBJ,KAAsB,EAAhBI,cAmCrC,IAAMiM,EAhBN,WACI,IAAIC,EAAQ,GACZ,GAAGF,EAAQjL,WAAa,GACpB,IAAI,IAAIe,EAAE,EAAGA,EAAEkK,EAAQjL,SAASC,OAAQc,IACpC,IAAI,IAAIqK,EAAE,EAAGA,EAAE1J,EAASzB,OAAQmL,IAC5B,GAAGH,EAAQjL,SAASe,KAAOW,EAAS0J,GAAGlM,GAAI,CACvCiM,EAAME,KAAK3J,EAAS0J,IACpB,MAMhB,OADAtH,QAAQC,IAAIoH,GACLA,EAGUG,GAErB,OACI,6BACI,yBAAKlN,UAAU,iBACX,wBAAIA,UAAU,mBAAmB6M,EAAQtL,MACzC,wBAAIvB,UAAU,aAAa6M,EAAQ3N,OAEvC,yBAAKc,UAAU,iBACX,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAa6M,EAAQnJ,QAAnC,MAEJ,yBAAK1D,UAAU,iBACX,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAa6M,EAAQxG,QAAnC,MAEJ,yBAAKrG,UAAU,sCACX,wBAAIA,UAAU,aAAd,QAAgC6M,EAAQpL,QAAxC,KACA,wBAAIzB,UAAU,aAAd,kBAA0C6M,EAAQjJ,eAEtD,yBAAK5D,UAAU,sCACX,wBAAIA,UAAU,aAAd,WAAmC6M,EAAQlN,QAC3C,wBAAIK,UAAU,aAAd,8BAEJ,wBAAIA,UAAU,+BAAd,SACA,yBAAKA,UAAU,OACX,kBAACqC,EAAD,CAAMC,QAASwK,EAAcvK,O7BvDtB,U6BuDuCxC,cA1D1D,SAAiBkB,IAMb,SAASkM,EAAYhM,GACbA,EAAEL,GACFD,EAAaM,EAAEL,KAEfK,EAAIA,EAAEC,WACN+L,EAAYhM,IANpBgM,CADWlM,EAAEI,gBCvCrB,IAyBed,eAzBS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BwL,aAAczL,EAAME,kBAAkBuL,aACtC5M,OAAQmB,EAAM8D,kBAAkBjF,OAChC+N,eAAgB5M,EAAM8D,kBAAkB8I,eACxC7N,IAAKiB,EAAMqL,iBAAiBtM,IAC5BE,cAAee,EAAMmM,4BAA4BlN,kBAI9B,SAACkB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B8L,qBAAsB,SAACnN,GACnB,OAAOkB,EAASnB,EAAqBC,QAKlCc,EAIf,YAAsH,EAAhGqM,qBAAgG,EAA1EnN,cAA2E,IAA5DoB,EAA2D,EAA3DA,aAAqDC,GAAM,EAA7CyD,QAA6C,EAApC0H,aAAoC,EAAtBmB,eAAsB,EAANtM,IAO5G,OACI,yBAAKd,UAAU,gDAAgDE,QANnE,WAEIW,EAAaC,KAKT,wBAAId,UAAU,uBAAd,SCrCZ,IAuBeO,eAvBS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BwL,aAAczL,EAAME,kBAAkBuL,aACtC5M,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,QAIT,SAACoB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B0D,UAAW,SAACjF,GACR,OAAOoB,EAASrB,EAAUC,QAKvBgB,EAGf,YAMI,IANyD,IAAjCO,EAAgC,EAAhCA,GAElBqL,GAFkD,EAA3BtL,aAA2B,EAAb2D,UAEhCJ,GACPiJ,EAAY,GAGP1K,EAAE,EAAGA,EAAEwJ,EAAGtK,OAAQc,IAEvB,GAAIwJ,EAAGxJ,GAAG7B,KAAOA,EAAG,CACjBuM,EAAYlB,EAAGxJ,GAEf,MAKP,OACI,6BACI,6BACI,yBAAK3C,UAAU,iBACX,wBAAIA,UAAU,mBAAmBqN,EAAU9L,MAC3C,wBAAIvB,UAAU,aAAd,WAAmCqN,EAAU1N,SAEjD,wBAAIK,UAAU,+BAAd,eACA,yBAAKA,UAAU,OACX,uBAAGA,UAAU,aAAaqN,EAAUhK,mBC7CzC,SAASiK,EAAT,GAOX,IAP2F,IACvFC,EAAUtO,EADiBqD,EAA2D,EAA3DA,QAASjD,EAAkD,EAAlDA,OAAQU,EAA0C,EAA1CA,cAAeyE,EAA2B,EAA3BA,UAAW0E,EAAgB,EAAhBA,cAEtEsE,EAAOnO,EACPoO,EAAOpO,EACP8M,EAAK7J,EACHxB,EAAK0J,SAASnL,GAEXsD,EAAE,EAAGA,EAAEwJ,EAAGtK,OAAQc,IAEvB,GAAIwJ,EAAGxJ,GAAG7B,KAAOA,EAAG,CACpByM,EAAWpB,EAAGxJ,GAAGzD,KACjBD,EAAOkN,EAAGxJ,GAENwJ,EAAGxJ,EAAE,IAAOwJ,EAAGxJ,EAAE,GAAGzD,OAASqO,IAC7BC,EAAOrB,EAAGxJ,EAAE,GAAG7B,IAEfqL,EAAGxJ,EAAE,IAAOwJ,EAAGxJ,EAAE,GAAGzD,OAASqO,IAC7BE,EAAOtB,EAAGxJ,EAAE,GAAG7B,IAEnB,MAKJ,OAAOyM,GACH,KAAK5O,EACD,OACI,yBAAKqB,UAAU,uCACX,kBAAC0N,EAAD,CAAY5M,GAAI,IAChB,kBAAC6M,EAAD,CAAgBd,QAAS5N,EAAMc,cAAeA,EAAeyE,UAAWA,IACxE,yBAAKxE,UAAU,iCACX,kBAACiJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQqE,EAAMpE,UAAW/J,IACvE,kBAACgK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQiF,EAAMrE,UAAW/J,MAKvF,KAAKT,EACD,OACI,yBAAKoB,UAAU,0CACX,kBAAC0N,EAAD,CAAY5M,GAAI,IAChB,wBAAId,UAAU,aAAd,QACA,kBAAC4N,EAAD,CAAa9M,GAAI0J,SAASnL,KAC1B,yBAAKW,UAAU,iCACX,kBAACiJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQqE,EAAMpE,UAAW/J,IACvE,kBAACgK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQiF,EAAMrE,UAAW/J,MAIvF,KAAKR,EACD,OACI,yBAAKmB,UAAU,yCACX,kBAAC0N,EAAD,CAAY5M,GAAI,IAChB,wBAAId,UAAU,aAAd,cACA,kBAACsJ,EAAD,CAAaxI,GAAI0J,SAASnL,GAASU,cAAeA,EAAemJ,cAAeA,EAAeC,OAAQqE,EAAMhF,OAAQiF,KAGjI,IhC9CiB,YgC+Cb,OACI,yBAAKzN,UAAU,yCACX,kBAAC0N,EAAD,CAAY5M,GAAI,IAChB,wBAAId,UAAU,aAAd,aACA,kBAAC6N,EAAD,CAAkB/M,GAAI0J,SAASnL,KAC/B,yBAAKW,UAAU,iCACX,kBAACiJ,EAAD,CAAgBC,cAAeA,EAAeC,OAAQqE,EAAMpE,UAAW/J,IACvE,kBAACgK,EAAD,CAAgBH,cAAeA,EAAeV,OAAQiF,EAAMrE,UAAW/J,MAIvF,QACI,OACI,yBAAKW,UAAU,6CACX,kBAAC0N,EAAD,MACA,wBAAI1N,UAAU,cAAd,SACA,6CACA,kBAACqE,EAAD,CAAetE,cAAeA,MClFlD,IAuBeQ,gBAvBS,SAAAC,GACpB,MAAO,CACHyJ,WAAYzJ,EAAM0J,qBAAqBD,WACvCtK,OAAQa,EAAM2J,wBAAwBC,WACtCC,YAAa7J,EAAM0J,qBAAqBG,YACxCzC,QAASpH,EAAM0J,qBAAqBtC,YAIjB,SAACjH,GACxB,MAAO,CACH2J,iBAAkB,SAAC3K,GACf,OAAOgB,EAASjB,EAAiBC,KAErC4K,cAAe,SAAC1K,GACZ,OAAOc,EAASf,EAAcC,KAElCgB,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAKxBP,EAEf,YAAmE,IAAzCM,EAAwC,EAAxCA,aAAcwJ,EAA0B,EAA1BA,YAAaJ,EAAa,EAAbA,WAC3CQ,GAAW,IAAIjJ,MAAQ+D,UAGzBmF,EAFcT,EAAW1G,WAAakH,EAAUJ,GAKhDM,GADJD,GAAKA,EADIA,EAAI,KACE,KACA,GAEXE,GADJF,GAAKA,EAAIC,GAAQ,IACF,GACXE,GAAOH,EAAIE,GAAQ,GAVuC,EAYhClG,mBAASiG,GAZuB,mBAYvDG,EAZuD,KAY9CC,EAZ8C,OAahCrG,mBAASkG,GAbuB,mBAavDI,EAbuD,KAa9CC,EAb8C,OAcpCvG,mBAASmG,GAd2B,mBAcvDK,EAduD,KAchDC,EAdgD,OAe9BzG,oBAAS,GAfqB,mBAevD0G,EAfuD,KAe7CC,EAf6C,UAiB7BM,IAA5BnB,SAASP,EAAWnJ,MAAmC,IAAbsK,GAC3CC,GAAY,GA4BhB,OAzBAtB,qBAAU,WACN,IAAIyB,EAAW,KAgBf,OAfKJ,EACLI,EAAW7D,aAAY,WACnBoD,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAC7BA,GAAW,KACVG,GAAW,SAAAD,GAAO,OAAIA,EAAS,KAC/BD,EAAW,GACRC,GAAW,KACVG,GAAS,SAAAD,GAAK,OAAIA,EAAO,KACzBD,EAAW,OAGpB,KACSG,GAAwB,IAAZN,GACxBW,cAAcD,GAEP,kBAAMC,cAAcD,MAC5B,CAAEJ,EAAUN,EAASE,EAASE,IAO1BjB,EAAWnJ,IACd,UAAK6K,EACD,OACI,8BAER,QACI,OACI,yBAAK3L,UAAU,GAAGE,QAZ9B,SAAkBuF,GACdA,EAAMqI,kBACNjN,EAAaoJ,EAAWnJ,MAWZ,yBAAKd,UAAU,SACX,wBAAIA,UAAU,QAAd,gBACA,wBAAIA,UAAU,YAAYiK,EAAW1I,MACrC,wBAAIvB,UAAU,iBAAiBkL,EAAMQ,oBAAeC,EAAU,CAACC,qBAAsB,IAArF,IACCZ,EAAQU,oBAAeC,EAAU,CAACC,qBAAsB,IADzD,IAECd,EAAQY,oBAAeC,EAAU,CAACC,qBAAsB,IAFzD,WCtDT,SAASmC,GAAT,GAAgD,IAAvBhO,EAAsB,EAAtBA,cAAeR,EAAO,EAAPA,IAEnD,OACI,6BAASS,UAAU,oCAAoCC,MAAM,QAAQC,QAASH,GAC1E,yBAAKC,UAAU,kBACX,wBAAIA,UAAU,UAAd,eACA,wBAAIA,UAAU,gBAAd,YACA,wBAAIA,UAAU,YAAd,QAA+BT,GAC/B,kBAACyO,GAAD,QCzBDC,OAZf,YAA0C,IAAlBlO,EAAiB,EAAjBA,cAEpB,OACI,6BAASC,UAAU,uCAAuCC,MAAM,QAAQC,QAASH,GAC7E,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,mBAAoBsD,EAASzB,WCO5CqM,OAZf,YAA6C,IAAjBnO,EAAgB,EAAhBA,cAExB,OACI,6BAASC,UAAU,uCAAuCC,MAAM,WAAWC,QAASH,GAChF,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAd,YACA,wBAAIA,UAAU,mBAAoB+D,EAAYlC,WCK/CsM,OAZf,YAA2C,IAAlBpO,EAAiB,EAAjBA,cAErB,OACI,6BAASC,UAAU,2CAA2CC,MAAM,QAAQC,QAASH,GACjF,yBAAKC,UAAU,MACX,wBAAIA,UAAU,UAAWoD,EAAWvB,QACpC,wBAAI7B,UAAU,mBAAd,YCLHmM,GAAK/I,EAAWgL,OAAOrK,EAAaT,GCDlC,SAAS+K,GAAT,GAAyC,IAAlBtO,EAAiB,EAAjBA,cAClC,OACI,yBAAKC,UAAU,+DAA+DC,MvCe9D,WuCf+EC,QAASH,GACpG,yBAAKC,UAAU,OACX,wBAAIA,UAAU,IAAd,kBCMDsO,OATf,YAA2C,IAAlBvO,EAAiB,EAAjBA,cAErB,OACI,yBAAKC,UAAU,mEAAmEC,MxCoCrE,QwCpCmFC,QAASH,GACrG,wBAAIC,UAAU,MAAd,UAA0B,6BAA1B,aC0GGO,oBAnGS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BpB,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,QAIT,SAACoB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,QAqFxBP,EAhFf,SAAcQ,GAAQ,IAEVwD,EAA+BxD,EAA/BwD,QAAS1D,EAAsBE,EAAtBF,aAActB,EAAQwB,EAARxB,IAiB/B,SAASyB,EAAUC,IAGf,SAASC,EAAeC,GAChBA,EAAElB,MACDsE,EAAQpD,EAAElB,QAEXkB,EAAIA,EAAEC,WACNF,EAAeC,IANvBD,CADWD,EAAEI,QAWjB,OACI,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,gBACX,kBAAC+N,GAAD,CAAehO,cAAeiB,EAAWzB,IAAKA,KAElD,yBAAKS,UAAU,6BACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAkBD,cAAeiB,KAErC,yBAAKhB,UAAU,YACX,kBAAC,GAAD,CAAcD,cAAeiB,MAGrC,yBAAKhB,UAAU,uBACX,kBAACqO,GAAD,CAAatO,cAAeiB,KAEhC,yBAAKhB,UAAU,4BACX,yBAAKA,UAAU,mBACZ,kBAAC,GAAD,CAAeD,cAAeiB,EAAWuN,SAAU1N,KAEtD,yBAAKb,UAAU,eACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gEAAgEC,MzCxCtF,QyCwCoGC,QAASc,GAClG,wBAAIhB,UAAU,MAAd,qBAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gEAA+DC,MAAM,aAAaC,QAASc,GACtG,wBAAIhB,UAAU,MAAd,iBAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBAAiBE,QA7DpD,WAEI,IAAK,IAAIyC,EAAE,EAAGA,EAAEwJ,GAAGtK,OAAQc,IAAI,CAC3B,GAAIwJ,GAAGxJ,GAAGzD,OAASL,GAAcsN,GAAGxJ,GAAGhD,SAAWb,EAAa,CAC3D+B,EAAasL,GAAGxJ,GAAG7B,IACnByD,EzC3BK,SyC4BL,MAEA1D,EAAa,GACb0D,EzC/BK,YyCoFO,yBAAKvE,UAAU,oEACX,wBAAIA,UAAU,MAAd,UAA0B,6BAA1B,WAGR,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAeD,cAAeiB,YCvG3C,SAASwN,KACpB,OACI,yBAAKxO,UAAU,2DACX,wBAAIA,UAAU,MAAd,UC2JGO,oBA/IS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAME,kBAAkBD,KAC9BwL,aAAczL,EAAME,kBAAkBuL,aACtC5M,OAAQmB,EAAM8D,kBAAkBjF,OAChCE,IAAKiB,EAAMqL,iBAAiBtM,QAIT,SAACoB,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,KAE/BY,aAAc,SAACC,GACX,OAAOH,EAASvB,EAAW0B,KAE/B0D,UAAW,SAACjF,GACR,OAAOoB,EAASrB,EAAUC,QA6HvBgB,EAtHf,SAAcQ,GAAQ,IAId7B,EAFIuB,EAAsEM,EAAtEN,KAAMpB,EAAgE0B,EAAhE1B,OAAQkF,EAAwDxD,EAAxDwD,QAAS1D,EAA+CE,EAA/CF,aAAcoL,EAAiClL,EAAjCkL,aAAczH,EAAmBzD,EAAnByD,UAAWjF,EAAQwB,EAARxB,IAItE,OAAO0M,GACH,I3ClCa,Q2CmCT/M,EAAON,EACX,MACA,I3CxCgB,W2CyCZM,E3CXW,U2CgBnB,IAAMiN,EAAK/I,EAAWgL,OAAOrK,EAAaT,EAAUc,GAkBpD,SAASpD,EAAUC,IAGf,SAASC,EAAeC,GAChBA,EAAElB,MACDsE,EAAQpD,EAAElB,QAEXkB,EAAIA,EAAEC,WACNF,EAAeC,IANvBD,CADWD,EAAEI,QAYjB,IAAMoN,EAAQ,C3CrEM,WARA,WAGH,QACA,QA2BA,QAKA,QA3BK,c2CsEtB,QAAQ,GACJ,I3C/Ea,U2C+EPhO,EACF,OACI,kBAAC+N,GAAD,MAER,I3CrFgB,a2CqFV/N,GAA0C,IAArB+J,SAASnL,GAChC,OACI,yBAAKW,UAAU,cACP,yBAAKA,UAAU,QACX,oCAAUT,IAEd,yBAAKS,UAAU,YACX,kBAACsN,EAAD,CAAShL,QAAS6J,EAAI9M,OAAQA,EAAQ6J,cAAerI,MAIzE,KAA8B,IAAzB4N,EAAMC,QAAQjO,GACf,MAAe,MAAXpB,GAA6B,IAAXA,E3CxFV,a2CyFJoB,EAEI,yBAAKT,UAAU,aACX,yBAAKA,UAAU,SACX,oCAAUT,IAEd,yBAAKS,UAAU,QACX,kBAAC2O,EAAD,CAASjI,eAAgB1F,EAAWP,KAAMvB,EAAMsF,UAAWA,MAMnE,yBAAKxE,UAAU,SACX,yBAAKA,UAAU,QACX,oCAAUT,IAEd,yBAAKS,UAAU,YACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,qBAAqBS,GACnC,yBAAKT,UAAU,UACX,kBAACqC,EAAD,CAAMC,QAAS6J,EAAI5J,OAAQ9B,EAAMV,cAtErE,SAAiBkB,IAMb,SAASkM,EAAYhM,GACbA,EAAEL,GACFD,EAAaM,EAAEL,KAEfK,EAAIA,EAAEC,WACN+L,EAAYhM,IANpBgM,CADWlM,EAAEI,YAoEe,yBAAKrB,UAAU,mCACX,kBAACqE,EAAD,CAAetE,cAAeiB,QAUlD,yBAAKhB,UAAU,cACP,yBAAKA,UAAU,QACX,oCAAUT,IAEd,yBAAKS,UAAU,YACX,kBAACsN,EAAD,CAAShL,QAAS6J,EAAI9M,OAAQA,EAAQ6J,cAAerI,MAK7E,QACI,OACI,kBAAC,GAAD,UCzHDN,oBA3BY,SAACI,GACxB,MAAO,CACH4D,QAAS,SAACtE,GACN,OAAOU,EAAS3B,EAAWiB,QAwBxBM,EAnBf,SAAcQ,GAEVgJ,qBAAU,eAFO,IAMTxF,EAAYxD,EAAZwD,QAGR,OACI,yBAAKvE,UAAU,OACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,OAEJ,kBAAC,EAAD,CAAQD,cAAewE,QCjBfqK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gBChBAC,GAAe,CACjB5P,OAAQ,EACR+N,eAAgB,EAChB7N,IAAK,EACLkB,K9CKoB,W8CJpBwL,a9CIoB,W8CHpBxM,cAAe,GACf2K,WAAY,IA+DV8E,GAAoB,CACtBjF,WAAY,GACZI,YAAa,KACbzC,SAAU,IAAIpG,MAAQ+D,WC9DpB4J,GAAcC,YAAgB,CAClC1O,kBDW+B,WAAoC,IAAnCF,EAAkC,uDAA5ByO,GAAclH,EAAc,uDAAP,GACzD,OAAOA,EAAO7I,MACV,I9C1BmB,c8C4Bf,OAAOmQ,OAAOC,OAAO,GAAI9O,EAAO,CAACC,KAAMsH,EAAO5I,QAAS8M,aAAczL,EAAMC,KAAMhB,cAAee,IACpG,QACI,OAAOA,ICjBE8D,kBD2BY,WAAoC,IAAnC9D,EAAkC,uDAA5ByO,GAAclH,EAAc,uDAAP,GACzD,OAAOA,EAAO7I,MACV,I9CtCmB,c8CuCf,OAAOmQ,OAAOC,OAAO,GAAI9O,EAAO,CAACnB,OAAQ0I,EAAO5I,QAASiO,eAAgB5M,EAAMnB,OAAQI,cAAee,IAC1G,QACI,OAAOA,IChCqBqL,iBDwCR,WAAoC,IAAnCrL,EAAkC,uDAA5ByO,GAAclH,EAAc,uDAAP,GACxD,OAAOA,EAAO7I,MACV,I9CtDkB,a8CuDd,OAAOmQ,OAAOC,OAAO,GAAI9O,EAAO,CAACjB,IAAMiB,EAAMjB,IAAMwI,EAAO5I,UAC9D,QACI,OAAOqB,IC7CuCmM,4BDFf,WAAoC,IAAnCnM,EAAkC,uDAA5ByO,GAAclH,EAAc,uDAAP,GACnE,OAAOA,EAAO7I,MACV,I9CR8B,yB8CS1B,GAAGsB,EAAMf,gBAAkB,GACvB,MAEA,OAAO4P,OAAOC,OAAO,GAAI9O,EAAMf,eAEvC,QACI,OAAOe,ICPoE2J,wBDiDhD,WAAoC,IAAnC3J,EAAkC,uDAA5ByO,GAAclH,EAAc,uDAAP,GAC/D,OAAOA,EAAO7I,MACV,I9C1D0B,qB8C2DtB,OAAOmQ,OAAOC,OAAO,GAAI9O,EAAO,CAAC4J,WAAYrC,EAAO5I,UACxD,QACI,OAAOqB,ICtD6F0J,qBDgE5E,WAAyC,IAAxC1J,EAAuC,uDAAjC0O,GAAmBnH,EAAc,uDAAP,GACjE,OAAOA,EAAO7I,MACV,I9CxEuB,kB8CyEnB,OAAOmQ,OAAOC,OAAO,GAAI9O,EAAO,CAACyJ,WAAYlC,EAAO5I,QAASkL,aAAc,IAAI7I,MAAQ+D,YAC3F,QACI,OAAO/E,MCnEb+O,GAASC,yBACTC,GAAQC,YAAYP,GAAaQ,YAAgBJ,KAEvDK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAASA,IACnB,kBAAC,GAAD,QAGFM,SAASC,eAAe,SF0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9K,QAAQ8K,MAAMA,EAAMC,c","file":"static/js/main.d9a445cf.chunk.js","sourcesContent":["// Actions\r\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const UPDATE_EXP = 'UPDATE_EXP';\r\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const RESTORE_PREVIOUS_STATE = 'RESTORE_PREVIOUS_STATE';\r\nexport const UPDATE_TASK_STATUS = 'UPDATE_TASK_STATUS';\r\nexport const SET_ACTIVE_TASK = 'SET_ACTIVE_TASK';\r\n//\r\n\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\nexport const PROJECT = 'PROJECT';\r\nexport const TASK = 'TASK';\r\nexport const INBOX_ITEM = 'INBOX_ITEM';\r\nexport const NEW_ITEM = 'NEW_ITEM';\r\nexport const REFERENCES = 'REFERENCES';\r\nexport const REFERENCE = 'REFERENCE';\r\n\r\n// Status constants\r\n//STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\nexport const UNPLANNED = 'UNPLANNED';\r\nexport const UNPROCESSED = 'UNPROCESSED';\r\nexport const PROCESSED = 'PROCESSED';\r\nexport const PENDING = 'PENDING';\r\nexport const DELEGATION_PENDING = 'DELEGATION_PENDING';\r\nexport const STARTED = 'STARTED';\r\nexport const DONE = 'DONE';\r\nexport const ONGOING = 'ONGOING';\r\nexport const COMPLETE = 'COMPLETE';\r\nexport const PAUSED = 'PAUSED';\r\nexport const ACTIVE = 'ACTIVE';\r\n//\r\n\r\nexport const LOW = 'LOW';\r\nexport const MEDIUM = 'MEDIUM';\r\nexport const HIGH = 'HIGH';\r\nexport const MISSION = 'MISSION';\r\nexport const TODAY = 'TODAY';\r\n\r\n\r\n//For frequency/recurring\r\nexport const NONE = 'NONE';\r\nexport const DAILY = 'DAILY';\r\nexport const WEEKLY = 'WEEKLY';\r\nexport const MONTHLY = 'MONTHLY';\r\nexport const FORTHNIGHTLY = 'FORTHNIGHTLY';\r\nexport const THREE_MONTHS = 'THREE_MONTHS';\r\nexport const SIX_MONTHS = 'SIX_MONTHS';\r\nexport const YEARLY = 'YEARLY';\r\n//","import {CHANGE_VIEW, SELECT_PROJECT, SELECT_TASK, SELECT_ITEM, UPDATE_EXP, RESTORE_PREVIOUS_STATE, UPDATE_TASK_STATUS, SET_ACTIVE_TASK} from './constants';\r\n\r\nexport const selectView = (item) => {\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\nexport const selectProject = (projectID) => {\r\n    return {\r\n    type: SELECT_PROJECT,\r\n    payload: projectID\r\n}};\r\n\r\nexport const selectTask = (taskID) => {\r\n    return {\r\n    type: SELECT_TASK,\r\n    payload: taskID\r\n}};\r\n\r\nexport const selectItem = (itemID) => {\r\n    return {\r\n    type: SELECT_ITEM,\r\n    payload: itemID\r\n}};\r\n\r\nexport const UpdateExp = (exp) => {\r\n    return {\r\n    type: UPDATE_EXP,\r\n    payload: exp\r\n}};\r\n\r\nexport const RestorePreviousState = (previousState) => {\r\n    return {\r\n    type: RESTORE_PREVIOUS_STATE,\r\n    payload: previousState\r\n}};\r\n\r\nexport const UpdateTaskStatus = (status) => {\r\n    return {\r\n    type: UPDATE_TASK_STATUS,\r\n    payload: status\r\n}};\r\n\r\nexport const SetActiveTask = (task) => {\r\n    return {\r\n    type: SET_ACTIVE_TASK,\r\n    payload: task\r\n}};","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white ba b--black-10 flex items-center justify-center' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>M</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"TASKS\" onClick={touchFunction}>\r\n            <h3 className='tc'>T</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"INBOX\" onClick={touchFunction}>\r\n            <h3 className='tc'>I</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function StatsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba flex items-center justify-center' title=\"STATS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport StatsButton from '../components/StatsButton';\r\nimport { selectView, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeView: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { changeView, changeItemID  } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle(t) {\r\n            if (t.title) {\r\n                changeView(t.title);\r\n                changeItemID(0);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex'>\r\n            <HomeButton touchFunction={passTitle} />\r\n            <InboxButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <StatsButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\n\r\n\r\nexport default function ListItem( { touchFunction, item }){\r\n\r\n    switch(item.type){\r\n        case PROJECT:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80 '>\r\n                        <p className='fw7 b white pb2'>{item.name}</p>\r\n                        <p className='fw3 white'>Due: {(new Date(item.dueDate)).toISOString().substr(0, 10)}. Tasks: {item.taskList.length}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='gold fw7 b'>EXP</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80'>\r\n                    <p className='fw7 b white pb2'>{item.name}</p>\r\n                    <p className='fw3 white'>{item.requiredContext}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='gold fw7 b'>EXP</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='ba pa2 listItem w-100 flex justify-between h-20 items-center b--grey' id={item.id} onClick={touchFunction}>\r\n                    <div className='w-80'>\r\n                    <p className='fw7 b white pb2'>{item.name}</p>\r\n                    <p className='fw3 white'>{(new Date(item.entryDate)).toISOString().substr(0, 10)}</p>\r\n                    </div>\r\n                    <div className='pa2' >\r\n                        <p className='fw7 b bg-white pa2'>PROCESS</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='bb' title='new item' onClick={touchFunction}>\r\n                    <h3>Enter New Item</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div className='h-100' style={{overflowY: 'scroll', overflowX: 'hidden'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Scroll from './Scroll';\r\nimport { TASK, TASKS, PROJECTS, PROJECT, INBOX_ITEM, TODAY, DAILY, DONE, MISSION, REFERENCE, REFERENCES } from '../constants';\r\n\r\nexport default function List({ touchFunction, content, filter }) {\r\n    //console.log(content);\r\n\r\n    // A Mission's Tasklist\r\n    const missionTasks = content.map((entry,i ) => {\r\n        return <ListItem item={content[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n\r\n    // Today's Mission\r\n    const dueToday = content.filter((entry) => ( \r\n        ( entry.dueDate === new Date().toISOString().substr(0, 10) ) && entry.status !== DONE ) );\r\n    const todaysTasks = dueToday.map((entry,i ) => {\r\n        return <ListItem item={dueToday[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    /////\r\n\r\n    // Daily exercises\r\n    const dailyEx = content.filter((entry) => (entry.frequency === DAILY ));\r\n    const dailyTasks = dailyEx.map((entry, i) => {\r\n        return <ListItem item={dailyEx[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    ///////\r\n\r\n    // Project, Task, Inbox and Reference Lists \r\n    let type = '';\r\n    switch(filter){\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = PROJECT;\r\n            break;\r\n        case REFERENCES:\r\n            type = REFERENCE;\r\n            break;\r\n        default:\r\n            type = INBOX_ITEM;\r\n    }\r\n\r\n    const filteredContent = content.filter((entry) => (entry.type === type))\r\n\r\n    const ListItems = filteredContent.map((entry,i) => {\r\n        return <ListItem item={filteredContent[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n\r\n    ////////////////////////////////\r\n\r\n\r\n\r\n    switch(filter){\r\n        case TODAY:\r\n            return (\r\n                <Scroll>\r\n                    {todaysTasks}\r\n                </Scroll>\r\n            )\r\n        case DAILY:\r\n            return (\r\n                <Scroll>\r\n                    {dailyTasks}\r\n                </Scroll>\r\n            )\r\n        case MISSION:\r\n            return (\r\n                <Scroll>\r\n                    {missionTasks}\r\n                </Scroll>\r\n            )\r\n        default:\r\n            return (\r\n                <Scroll>\r\n                    {ListItems}\r\n                </Scroll>\r\n            );\r\n    }\r\n}","import { INBOX_ITEM, UNPROCESSED } from \"./constants\";\r\n\r\nexport const InboxItems = [\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 1,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 1',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 2,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 2',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED       \r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 3,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 3',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 4,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 4',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 5,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 5',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 6,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 6',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 7,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 7',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 8,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 8',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 9,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 9',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 10,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 10',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n]","import { TASK, LOW, DAILY } from \"./constants\";\r\n\r\nexport const TaskList = [\r\n    {\r\n        type: TASK,\r\n        id: 1589657001522,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 600000,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 5 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: new Date().toISOString().substr(0, 10), //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            name: 'Project',\r\n            id: 1589657001530\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001523,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 300000,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 4 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001523, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            name: 'Project',\r\n            id: 1589657001530\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001524,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: DAILY,\r\n        timeSpent: 150000,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 3 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            name: 'Project',\r\n            id: 1589657001531\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001525,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: DAILY,\r\n        timeSpent: 400000,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 2',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            name: 'Project',\r\n            id: 1589657001532\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 1589657001526,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 500000,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread',\r\n        outcome: 'recordable product of task completion',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: 1589657001526, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProject: {\r\n            name: 'Project',\r\n            id: 1589657001533\r\n        },\r\n        requirements: '£1 minimum',\r\n        exp: 10\r\n    }\r\n]\r\n\r\n/*\r\nthis.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.status = PENDING;\r\n        this.frequency = ONCE;\r\n        this.timeSpent = 0;\r\n        this.name = name;\r\n        this.outcome = '';\r\n        this.requiredContext = '';\r\n        this.description = description;\r\n        this.requirements = '';\r\n*/","import { PROJECT, UNPLANNED } from \"./constants\";\r\n\r\nexport const ProjectList = [\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001530,\r\n        exp: 50,\r\n        name: \"Upload Church service\",\r\n        note: 'About Project 1',\r\n        outcome: \"Last week's church service available to watch on Barking Church's website\",\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds (Average Time it has historically taken for the whole project to be completed by you or someone else)\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED, //STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action',\r\n            output: 'recordable product of task completion' //information, document etc\r\n        },\r\n        taskList: [ 1589657001522, 1589657001523 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001531,\r\n        exp: 50,\r\n        name: 'Project 2',\r\n        note: 'About Project 2',\r\n        outcome: 'What done looks like for Project 2',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED,\r\n        nextAction: {\r\n            id: 17,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001524 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001532,\r\n        exp: 50,\r\n        name: 'Project 3',\r\n        note: 'About Project 3',\r\n        outcome: 'What done looks like for Project 3',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001525 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001533,\r\n        exp: 50,\r\n        name: 'Project 4',\r\n        note: 'About Project 4',\r\n        outcome: 'What done looks like for Project 4',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [ 1589657001526 ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 1589657001534,\r\n        exp: 50,\r\n        name: 'Project 5',\r\n        note: 'About Project 5',\r\n        outcome: 'What done looks like for Project 5',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: []\r\n    }\r\n]","export const ReferenceList = []","import React from 'react'\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemButton({ touchFunction }) {\r\n    return (\r\n        <div className='whiteB w3 h3 flex items-center justify-center' title={NEW_ITEM} onClick={touchFunction}>\r\n            <h1 className=' white b f8 fw9 ma0'>+</h1>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { PENDING, LOW, TASK, MEDIUM, HIGH } from '../constants';\r\nimport { TaskList } from '../TaskList';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NewTask({ changeItemID, updateExp }) {\r\n\r\n    let today = new Date().toISOString().substr(0, 10);\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ requiredContext, setRequiredContext ] = useState('');\r\n    const [ note, setNote ] = useState('');\r\n    const [ dueDate, setDueDate ] = useState(today);\r\n    const [ priority, setPriority ] = useState('');\r\n    const [ frequency, setFrequency ] = useState(0);\r\n    const [ requirements, setRequirements ] = useState('');\r\n    const [ associatedProject, setAssociatedProject ] = useState({});\r\n\r\n    class Task{\r\n        constructor() {\r\n            const d= new Date();\r\n\r\n            setFrequency(0);\r\n            setAssociatedProject({});\r\n\r\n            this.type = TASK;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = priority;\r\n            this.frequency = frequency;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.outcome = outcome;\r\n            this.requiredContext = requiredContext;\r\n            this.note = note;\r\n            this.dueDate = dueDate;\r\n            this.timeRequired = 0;\r\n            this.requirements = requirements;\r\n            this.associatedProject = associatedProject;\r\n            this.exp = 10;\r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        let t = new Task();\r\n        console.log(t);\r\n        TaskList.unshift(t);\r\n        updateExp(5);\r\n        changeItemID(t.id);\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 '>\r\n            <h1 className='tc'>NEW TASK</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={TASK}>\r\n                <input type='text' placeholder='Name' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <input type='text' placeholder='Outcome' value={outcome} onChange={(e) => setOutcome(e.target.value)} />\r\n                <textarea placeholder='Required Context' value={requiredContext} onChange={(e) => setRequiredContext(e.target.value)} />\r\n                <textarea placeholder='Note' value={note} onChange={(e) => setNote(e.target.value)} />\r\n                <label htmlFor=\"due date\" className=''>Due Date:</label>\r\n                <input id='due date' type='date' min={today} value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n                <select id=\"priority\" value={priority} onChange={(e)=> setPriority(e.target.value)}>\r\n                    <option value=\"\" disabled defaultValue>Priority</option>\r\n                    <option value={LOW}>Low</option>\r\n                    <option value={MEDIUM}>Medium</option>\r\n                    <option value={HIGH}>High</option>\r\n                </select>\r\n                <textarea placeholder='Requirements' value={requirements} onChange={(e) => setRequirements(e.target.value)} />\r\n                {/* <input type='text' placeholder='Frequency' value={frequency} onChange={(e) => setFrequency(e.target.value)} />\r\n                <input type='text' placeholder='Associated project name' value={associatedProject} onChange={(e) => setAssociatedProject(e.target.value)} /> */}\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTask);","import React, { useState } from 'react';\r\nimport { PENDING, LOW, MEDIUM, HIGH, MISSION, PROJECT } from '../constants';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NewMission({ changeItemID, updateExp }) {\r\n\r\n    let today = new Date().toISOString().substr(0, 10);\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ purpose, setPurpose ] = useState('');\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ note, setNote ] = useState('');\r\n    const [ dueDate, setDueDate ] = useState(today);\r\n    const [ priority, setPriority ] = useState('');\r\n    const [ frequency, setFrequency ] = useState(0);\r\n    const [ requirements, setRequirements ] = useState('');\r\n    //const [ taskList, setTaskList ] = useState([]);\r\n\r\n\r\n    class Mission{\r\n        constructor() {\r\n            const d= new Date();\r\n\r\n            this.type = PROJECT;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = priority;\r\n            this.frequency = frequency;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.purpose = purpose;\r\n            this.outcome = outcome;\r\n            this.principles = '';\r\n            this.note = note;\r\n            this.dueDate = dueDate;\r\n            this.timeRequired = 0;\r\n            this.requirements = requirements;\r\n            this.taskList = [];\r\n            this.exp = 50;\r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        \r\n        let m = new Mission();\r\n        console.log(m);\r\n        // console.log(m.id);\r\n        ProjectList.unshift(m);\r\n        updateExp(5);\r\n        changeItemID(m.id);\r\n        event.preventDefault();\r\n        setFrequency(0);\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 '>\r\n            <h1 className='tc'>New Mission</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={MISSION}>\r\n                <input type='text' placeholder='Name' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <input type='text' placeholder='Outcome' value={outcome} onChange={(e) => setOutcome(e.target.value)} />\r\n                <textarea placeholder='What is the purpose of the mission?' value={purpose} onChange={(e) => setPurpose(e.target.value)} />\r\n                <textarea placeholder='Note' value={note} onChange={(e) => setNote(e.target.value)} />\r\n                <label htmlFor=\"due date\" className=''>Due Date:</label>\r\n                <input id='due date' type='date' min={today} value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n                <select id=\"priority\" value={priority} onChange={(e)=> setPriority(e.target.value)}>\r\n                    <option value=\"\" disabled defaultValue>Priority</option>\r\n                    <option value={LOW}>Low</option>\r\n                    <option value={MEDIUM}>Medium</option>\r\n                    <option value={HIGH}>High</option>\r\n                </select>\r\n                <textarea placeholder='Requirements' value={requirements} onChange={(e) => setRequirements(e.target.value)} />\r\n                {/* <input type='text' placeholder='Frequency' value={frequency} onChange={(e) => setFrequency(e.target.value)} />\r\n                <input type='text' placeholder='Associated project name' value={associatedProject} onChange={(e) => setAssociatedProject(e.target.value)} /> */}\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMission);","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, TASK, INBOX, UNPROCESSED, MISSION } from '../constants';\r\nimport { InboxItems } from '../InboxItems'\r\nimport NewTask from './NewTask';\r\nimport NewMission from './NewMission';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewItem);\r\n\r\n\r\nfunction NewItem({ submitFunction, view, updateExp, changeItemID }) {\r\n\r\n    const [ type, setType ] = useState(view);\r\n    const [ name, setName ] = useState('Enter item name');\r\n    // \r\n\r\n    function reset(){\r\n        setType(INBOX_ITEM);\r\n        setName('Enter item name');\r\n        // setDescription('');\r\n    }\r\n\r\n    class Item{\r\n        constructor(name,description='None') {\r\n            const d= new Date();\r\n    \r\n            this.type = INBOX_ITEM;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.name = name;\r\n            this.description = '';\r\n            this.status = UNPROCESSED;\r\n    \r\n        }\r\n    }\r\n\r\n    function submitNewItem(event) {\r\n        if(name !== 'Enter item name' && name !== '' ){\r\n            console.log('name is set')\r\n            let i = new Item(name);\r\n            InboxItems.unshift(i);\r\n            console.log(i)\r\n            updateExp(5);\r\n            changeItemID(i.id);\r\n            // submitFunction(event);\r\n            reset();\r\n            event.preventDefault();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    \r\n    function displayTypeForm(){\r\n        switch(true) {\r\n            case type === TASK:\r\n                return <NewTask updateExp={updateExp} />\r\n            case type === MISSION:\r\n                return <NewMission updateExp={updateExp} />\r\n            default:\r\n                return (\r\n                    <div className='h-100 w-100 center ba b--black-10 '>\r\n                        <h1 className='tc gold b'>NEW ITEM</h1>\r\n                        <form onSubmit={submitNewItem} className='flex flex-column' title={INBOX}>\r\n                            <input type='text' onChange={(e)=> setName(e.target.value)} placeholder='Enter item name...' className='pa2 mb2' />\r\n                            {/* <textarea value={description} onChange={(e) => setDescription(e.target.value)} /> */}\r\n                            <input type='submit' value='submit' />\r\n                        </form>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pa1 w-100'>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(INBOX)}>INBOX</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(TASK)}>TASK</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(MISSION)}>MISSION</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(e.target.value)}>REF</button>\r\n            <button className=\"button w-20\" onClick={(e)=> setType(e.target.value)}>FINANCE</button>\r\n            {displayTypeForm()}\r\n            {/* <label htmlFor=\"type\" className=''>Type:</label>\r\n            <select id=\"type\" value={type} onChange={(e)=> setType(e.target.value)}>\r\n                <option value=\"INBOX_ITEM\">INBOX</option>\r\n                <option value=\"TASK\">TASK</option>\r\n                <option value=\"MISSION\">MISSION</option>\r\n                <option value=\"REFERENCE\">REFERENCE</option>\r\n                <option value=\"EXPENSE\">EXPENSE</option>\r\n                <option value=\"INCOME\">INCOME</option>\r\n            </select> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function QuestionAndOptions({ question, yes, no }) {\r\n    return (\r\n        <div className='h-100 w-100 br1 pa3 flex items-center flex-column'>\r\n            <h2 className='white tc pb2'>{question}</h2>\r\n            <div>\r\n                <button className=\"button\" onClick={yes}>YES</button>\r\n                <button className=\"button\" onClick={no} >NO</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function QuestionandInput({ question, submitFunction }) {\r\n\r\n    const [ answer, setAnswer ] = useState('');\r\n\r\n    function submit(event) {\r\n\r\n        if(answer !==''){\r\n            submitFunction(answer);\r\n            setAnswer('');\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column'>\r\n            <h2 className='white tc pb2'>{question}</h2>\r\n            <form onSubmit={submit}>\r\n                <input type='text' value={answer} onChange={(e)=> setAnswer(e.target.value)} />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport QuestionAndOptions from '../components/QuestionAndOptions';\r\nimport QuestionandInput from '../components/QuestionAndInput';\r\nimport { InboxItems } from '../InboxItems';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { TaskList } from '../TaskList';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport { PROJECT, UNPLANNED, PROCESSED, TASK, PENDING, UNPROCESSED, REFERENCE } from '../constants';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Processor({ nextItemID, item, touchFunction, changeItemID, itemIndex }) {\r\n\r\n    class Task{\r\n        constructor(name,outcome, isDelegatable, requiredContext) {\r\n            const d = new Date();\r\n            this.type = TASK;\r\n            this.id = d.getTime();\r\n            this.entryDate = d.getTime();\r\n            this.status = PENDING;\r\n            this.priority = 'NONE';\r\n            this.frequency = 0;\r\n            this.timeSpent = 0;\r\n            this.outcomeRecordID = 0;\r\n            this.name = name;\r\n            this.outcome = outcome;\r\n            this.requiredContext = requiredContext;\r\n            this.note = '';\r\n            this.dueDate = (new Date()).toISOString().substr(0, 10);\r\n            this.timeRequired = 0;\r\n            this.requirements = '';\r\n            this.associatedProject = {};\r\n            this.exp = 10;\r\n            this.isDelegatable = isDelegatable;\r\n            this.description = '';\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    class Project{\r\n        constructor(name, goal) {\r\n            const d = new Date();\r\n            this.type = PROJECT;        \r\n            this.id = d.getTime();\r\n            this.name = name;\r\n            this.description = '';\r\n            this.goal = goal;\r\n            this.outcome = outcome;\r\n            this.outputRecordID = null;\r\n            this.dueDate = (new Date((d.getTime() + 7776000000))).toISOString().substr(0, 10); // 3 months from the date the project is planned \r\n            this.timeRequired = 7776000000;\r\n            this.timeRemaining = setInterval(()=> {\r\n                let timeNow = (new Date()).getTime();\r\n                return (this.dueDate - timeNow)\r\n            }, 1);\r\n            this.status = UNPLANNED;\r\n            this.nextAction = {};\r\n            this.taskList = [];\r\n        }\r\n    }\r\n\r\n    /**type: TASK,\r\n        id: 1589657001522,\r\n        entryDate: 20,\r\n        status: 'PENDING' ,//PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n        frequency: 0,\r\n        timeSpent: 0,\r\n        priority : LOW,\r\n        outcomeRecordID: 0, //Assigned on task completion\r\n        name: 'Buy bread 5 ',\r\n        outcome: 'Bread in the fridge',\r\n        requiredContext: 'At the Supermarket',\r\n        note: 'Brown bread preferably',\r\n        dueDate: new Date().toISOString().substr(0, 10), //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        associatedProjectID: 1589657001530,\r\n        requirements: '£1 minimum',\r\n        exp: 10 \r\n        */\r\n\r\n\r\n    //actionable?\r\n    //action\r\n    //multistep?\r\n    //done in 5?\r\n    //delegatable?\r\n    //project outcome\r\n\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ requiredContext, setRequiredContext ] = useState('');\r\n    const [ isActionable, setIsActionable ] = useState(null);\r\n    const [ action, setAction ] = useState('');\r\n    const [ isMultistep, setIsMultistep ] = useState(null);\r\n    const [ isDoneInFive, setIsDoneInFive ] = useState(null);\r\n    const [ isDelegatable, setIsDelegatable ] = useState(null);\r\n    const [ step, setStep ] = useState(0);\r\n    const [ nextID, setNextID ] = useState(0);\r\n\r\n    function processNextItem(e){\r\n        setStep(0);\r\n        //touchFunction(e);\r\n    }\r\n\r\n    function makeNewProject(){\r\n        let proj = new Project( action, outcome );\r\n        ProjectList.unshift(proj);\r\n        updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        setNextID(proj.id);\r\n    }\r\n\r\n    function makeNewTask(){\r\n        let task = new Task( action, outcome, isDelegatable, requiredContext);\r\n        TaskList.unshift(task);\r\n        //updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        setNextID(task.id);\r\n        \r\n    }\r\n\r\n    function updateStatus() {\r\n        item.status = PROCESSED;\r\n    }\r\n\r\n    function proceed() {\r\n        setStep((step+1));\r\n    }\r\n\r\n    function refresh(){\r\n        changeItemID(item.id);\r\n    }\r\n    \r\n    if (item.status === UNPROCESSED && step === 0){\r\n        proceed();\r\n    }\r\n\r\n    function addToReferences(){\r\n        item.type = REFERENCE;\r\n        updateStatus();\r\n        InboxItems.splice(itemIndex,1);\r\n        ReferenceList.unshift(item);\r\n    }\r\n\r\n    switch(true) {\r\n        case ( step === 1 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Is this Actionable?' yes={() => { setIsActionable(true); proceed() }} no={() => { setIsActionable(false); addToReferences(); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( isActionable === false && step === 2 ):\r\n        // Added to references\r\n        return (\r\n            <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                <h3 className='white tc pb2'>Item was added to References</h3>\r\n                <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                <button className=\"button\" id={nextItemID} onClick={() => changeItemID(item.id)} >VIEW ITEM</button>\r\n            </div>\r\n        )\r\n        case ( isActionable === true && step === 2 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the desired outcome?\" submitFunction={(answer) => { setOutcome(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 3 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the next action?\" submitFunction={(answer) => { setAction(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 4 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Does the action require more than one step?' yes={() => { setIsMultistep(true); proceed();  makeNewProject() } } no={() => { setIsMultistep(false); proceed();} } />\r\n                </div>\r\n            )\r\n        case ( isMultistep === true && step === 5 ):\r\n            // New project was added and page refreshed\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                    <h3 className='white tc pb2'>A new Project has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                    <button className=\"button\" id={nextItemID} onClick={() => changeItemID(nextID)} >VIEW PROJECT</button>\r\n                </div>\r\n            )\r\n        case ( isMultistep === false && step === 5 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can it be done now in 5 minutes or less?' yes={() => { setIsDoneInFive(true); proceed() }} no={() => { setIsDoneInFive(false); proceed() }} />\r\n                </div>\r\n            )\r\n        case (isDoneInFive === true && step === 6):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>LET'S DO IT!</h3>\r\n                    <h2>TIMER</h2>\r\n                    <p>Once timer is done, you get the option to mark as completed. You also get the option ot defer the action.</p>\r\n                    <button className=\"button\" onClick={() => { updateStatus(); setStep(0); refresh() }} >DONE</button>\r\n                </div>\r\n            )\r\n        case ( isDoneInFive === false && step === 6 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"Where should this task be done?\" submitFunction={(answer) => { setRequiredContext(answer); proceed(); }} />\r\n                </div>\r\n            )\r\n            \r\n        case ( step === 7 ): \r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can this task be delegated?' yes={() => { setIsDelegatable(true); makeNewTask(); proceed(); }} no={() => { setIsDelegatable(false); makeNewTask(); proceed(); }} />\r\n                </div>\r\n            )\r\n        case ( step === 8 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show flex items-center flex-column' >\r\n                    <h3 className='white tc pb2'>A new Task has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={ processNextItem } >PROCESS NEXT ITEM</button>\r\n                    <button className=\"button\" id={nextItemID} onClick={() => changeItemID(nextID)} >VIEW TASK</button>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Processor);","import React from 'react';\r\n\r\nexport default function PrevItemButton({ selectAnother, prevID, currentID }){\r\n\r\n    if(currentID !== prevID){\r\n        return (\r\n            <div className='whiteB w3 h3 flex items-center justify-center' onClick={() => selectAnother(prevID)}>\r\n                <h2 className=' white b f8 fw9 ma0'>Prev</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='ba bw1 b--silver w3 h3 flex items-center justify-center' >\r\n                <h2 className=' gray b f8 fw9 ma0'>Prev</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NextItemButton({ selectAnother, nextID, currentID }){\r\n    if(currentID !== nextID){\r\n        return (\r\n            <div className='whiteB w3 h3 flex items-center justify-center' onClick={() => selectAnother(nextID)}>\r\n                <h2 className=' white b f8 fw9 ma0'>Next</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='ba bw1 b--silver w3 h3 flex items-center justify-center' >\r\n                <h2 className=' gray b f8 fw9 ma0'>Next</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\nimport Processor from '../containers/Processor'\r\nimport PrevItemButton from '../components/PrevItemButton';\r\nimport NextItemButton from '../components/NextItemButton';\r\nimport NewItemButton from '../components/NewItemButton';\r\n\r\nexport default function ItemDetails({ id, touchFunction, selectAnother, prevID, nextID }) {\r\n\r\n    const [ readyToProcess, setReadyToProcess ] = useState(false);\r\n\r\n    let item = {};\r\n    let nextItemID = null;\r\n    let indx;\r\n    for (let i=0; i<InboxItems.length; i++){\r\n\r\n        if (InboxItems[i].id === id){\r\n           item = InboxItems[i];\r\n           indx = i;\r\n           if (InboxItems[i+1]) {\r\n               nextItemID = InboxItems[i+1].id;\r\n           } else {\r\n            nextItemID = 0;\r\n           }\r\n           break;\r\n        }    \r\n    }\r\n\r\n\r\n\r\n    switch(readyToProcess){\r\n        case false:\r\n            return (\r\n                <div >\r\n                    <h5 className='white b pb2'>Name: {item.name}</h5>\r\n                    <h5 className='white pb2'>Entry Date: {(new Date(item.entryDate)).toISOString().substr(0, 10)} </h5>\r\n                    {/* <h5 className='white pb2'>Status: {item.status} </h5> */}\r\n                    <div className='h-100 w-100 center br1 pa3 ba b--black-10 flex items-center flex-column show ' >\r\n                        <button onClick={()=> setReadyToProcess(true)} >PROCESS THIS</button>\r\n                    </div>\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prevID} currentID={id} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={nextID} currentID={id} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div >\r\n                    <h5 className='white b pb2'>Name: {item.name}</h5>\r\n                    <h5 className='white pb2'>Entry Date: {(new Date(item.entryDate)).toISOString().substr(0, 10)} </h5>\r\n                    <br />\r\n                    <Processor item={item} nextItemID={nextItemID} touchFunction={touchFunction} itemIndex={indx} />\r\n                </div>\r\n            );\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function DatePicker({ item, dueDate }){\r\n    const [ date, setdate ] = useState(new Date(dueDate).toISOString().substr(0, 10));\r\n    const [ changeDate, setchangeDate ] = useState(false);\r\n    const changeD = false;\r\n\r\n\r\n    useEffect(() => {\r\n        setdate(new Date(dueDate).toISOString().substr(0, 10));\r\n        setchangeDate(false);\r\n    }, [dueDate, changeD])\r\n\r\n    switch(changeDate){\r\n        case true:\r\n            return (\r\n                <div>\r\n                    <input type='date' defaultValue={date} onChange={(e)=> {setdate(e.target.value);} } onBlur={() =>{item.dueDate=date; setchangeDate(false)}} className='fw3 white bn bg-transparent' />\r\n                </div>\r\n                )\r\n        default:\r\n            return (\r\n            <h5 className='fw3 white' onClick={() => setchangeDate(true)}>Due: {new Date(item.dueDate).toISOString().substr(0, 10)} </h5>\r\n            )\r\n    }\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Timer.css';\r\nimport { connect } from 'react-redux';\r\nimport { UpdateTaskStatus, SetActiveTask } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeTask: state.SetActiveTaskReducer.activeTask,\r\n        status: state.UpdateTaskStatusReducer.taskStatus,\r\n        activeSince: state.SetActiveTaskReducer.activeSince,\r\n        timeNow: state.SetActiveTaskReducer.timeNow\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateTaskStatus: (status) => {\r\n            return dispatch(UpdateTaskStatus(status))\r\n        },\r\n        setActiveTask: (task) => {\r\n            return dispatch(SetActiveTask(task))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n\r\nfunction Timer({ timeSpent, task, activeTask, activeSince, timeNow }){\r\n\r\n\r\n    if (task.id === parseInt(activeTask.id) ){\r\n        const dateNow = (new Date()).getTime();\r\n        timeSpent = timeSpent + (dateNow - activeSince);\r\n    }\r\n    console.log('time spent = '+timeSpent)\r\n\r\n    let s = timeSpent;\r\n    let ms = s % 1000;\r\n    s = (s - ms) / 1000;\r\n    let secs = s % 60;\r\n    s = (s - secs) / 60;\r\n    let mins = s % 60;\r\n    let hrs = (s - mins) / 60;\r\n\r\n    const [seconds, setSeconds] = useState(secs);\r\n    const [minutes, setminutes] = useState(mins);\r\n    const [hours, sethours] = useState(hrs);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    \r\n\r\n    // let totalTimeSpent = (seconds*1000)+(minutes*60*1000)+(hours*3600*1000); //Time spent in milliseconds\r\n\r\n\r\n\r\n    // function reset() {\r\n    //     setSeconds(0);\r\n    //     setminutes(0);\r\n    //     sethours(0);\r\n    //     setIsActive(false);\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        setSeconds(secs);\r\n        setminutes(mins);\r\n        sethours(hrs);\r\n        if (task.id !== parseInt(activeTask.id) ){\r\n            setIsUpdated(false);\r\n            setIsActive(false)\r\n        }\r\n    },[ secs, mins, hrs, activeTask.timeSpent, activeTask.id, activeSince, task.id ])\r\n\r\n\r\n    if( (task.id === parseInt(activeTask.id)) && isActive === false){\r\n        setIsActive(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if ( isActive && (task.id === parseInt(activeTask.id)) ) {\r\n        interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n            if(seconds >= 59){\r\n                setminutes(minutes => minutes +1);\r\n                setSeconds(0);\r\n                if(minutes >= 59){\r\n                    sethours(hours => hours +1);\r\n                    setminutes(0);\r\n                }\r\n            }\r\n        }, 1000);\r\n        } else if (!isActive && seconds !== 0) {\r\n        clearInterval(interval);\r\n        }\r\n        \r\n        return () => clearInterval(interval);\r\n        \r\n    }, [ isActive, seconds, minutes, hours, isUpdated, activeTask.id, task.id ]);\r\n\r\n\r\n    switch(task.id){\r\n        case activeTask.id:\r\n            return (\r\n                <div className=\"\">\r\n                    <h5 className='fw3 white b'>Time Spent: \r\n                        <span className='fw3 yellow b'> {hours.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                        {minutes.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                        {seconds.toLocaleString(undefined,{minimumIntegerDigits: 2})} \r\n                        </span>\r\n                    </h5>\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <div className=\"\">\r\n                <div className=\"\">\r\n                    <h5 className='fw3 white b'>Time Spent: {hours.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                    {minutes.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                    {seconds.toLocaleString(undefined,{minimumIntegerDigits: 2})} </h5>\r\n                </div>\r\n                {/* <div className=\"\">\r\n                    <button className='' onClick={toggle}>{isActive ? 'Pause' : 'Start'}</button>\r\n                    <button className='' onClick={reset}>Reset</button>\r\n                </div> */}\r\n                </div>\r\n            );\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\n//import { TaskList } from '../TaskList';\r\nimport { connect } from 'react-redux';\r\nimport { selectItem, UpdateExp, UpdateTaskStatus, SetActiveTask } from '../actions';\r\nimport { DONE, ACTIVE, PAUSED, PENDING } from '../constants';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        status: state.UpdateTaskStatusReducer.taskStatus,\r\n        activeTask: state.SetActiveTaskReducer.activeTask,\r\n        activeSince: state.SetActiveTaskReducer.activeSince\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        },\r\n        updateTaskStatus: (status) => {\r\n            return dispatch(UpdateTaskStatus(status))\r\n        },\r\n        setActiveTask: (task) => {\r\n            return dispatch(SetActiveTask(task))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskControls);\r\n\r\nfunction TaskControls({ task, status, updateTaskStatus, updateExp, changeItemID, setActiveTask, activeSince, activeTask }){\r\n\r\n    const prevTimeSpent = task.timeSpent;\r\n\r\n    function startTimer(){\r\n        setActiveTask(task);\r\n        task.status = ACTIVE;\r\n    }\r\n\r\n    function pauseTask(){\r\n        const dateNow = (new Date()).getTime();\r\n        setActiveTask({});\r\n        task.status = PAUSED;\r\n        task.timeSpent = prevTimeSpent + (dateNow - activeSince);\r\n    }\r\n\r\n    function markAsDone(){\r\n        const dateNow = (new Date()).getTime();\r\n        task.status = DONE;\r\n        task.timeSpent = prevTimeSpent + (dateNow - activeSince);\r\n        //TaskList.splice(position,1);\r\n        updateExp(task.exp);\r\n        changeItemID(task.id);\r\n    }\r\n\r\n    switch(task.status){\r\n        case ACTIVE:\r\n            console.log(activeTask.id === true)\r\n            return (\r\n                <div className='flex justify-center'>\r\n                    <button className=\"button\" onClick={pauseTask}>PAUSE</button>\r\n                    <button className=\"button\" onClick={markAsDone}>MARK DONE</button>\r\n                </div>\r\n            )\r\n        case PAUSED:\r\n            return (\r\n                <div className='flex justify-center'>\r\n                    <button className=\"button\" onClick={startTimer}>CONTINUE</button>\r\n                    <button className=\"button\" onClick={markAsDone}>MARK DONE</button>\r\n                </div>\r\n            )\r\n        case PENDING:\r\n            console.log(typeof activeTask)\r\n            console.log(activeTask.id)\r\n            if(activeTask.id === undefined) {\r\n                return (\r\n                    <div className='flex justify-center'>\r\n                        <button className=\"button\" onClick={startTimer}>START</button>\r\n                        <button className=\"button\" onClick={markAsDone}>MARK DONE</button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div>\r\n                    </div>)\r\n            }   \r\n        default:\r\n            return <div></div>\r\n    }\r\n    // Different controls are displayed based on if a task is ongoing\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TaskList } from '../TaskList';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp, UpdateTaskStatus } from '../actions';\r\nimport DatePicker from './DatePicker';\r\nimport Timer from './Timer';\r\nimport TaskControls from './TaskControls';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        status: state.UpdateTaskStatusReducer.taskStatus,\r\n        activeTask: state.SetActiveTaskReducer.activeTask,\r\n        activeSince: state.SetActiveTaskReducer.activeSince\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        },\r\n        updateTaskStatus: (status) => {\r\n            return dispatch(UpdateTaskStatus(status))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDetails);\r\n\r\n\r\nfunction TaskDetails({ id , changeItemID, updateExp, status, updateTaskStatus, activeSince, activeTask }) {\r\n\r\n    const db = TaskList;\r\n    let task = {};\r\n    let position;\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           task = db[i];\r\n           position = i;\r\n           break;\r\n        }\r\n    }\r\n\r\n\r\n    const [ name, setName ] = useState(task.name);\r\n    const [ requiredContext, setrequiredContext ] = useState(task.requiredContext);\r\n    const [ outcome, setoutcome ] = useState(task.outcome);\r\n    const [ dueDate, setdueDate ] = useState(task.dueDate);\r\n  //  const [ timeRequired, settimeRequired ] = useState(task.timeRequired);\r\n    const [ note, setnote ] = useState(task.note);\r\n\r\n    const dateNow = (new Date()).getTime();\r\n\r\n    // if (task.id === activeTask.id) {\r\n    //     console.log(task.timeSpent)\r\n    //     console.log(dateNow)\r\n    //     task.timeSpent = task.timeSpent + (dateNow - activeSince)\r\n    //     console.log('aft '+ task.timeSpent)\r\n    //     console.log(dateNow)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        setName(task.name);\r\n        setrequiredContext(task.requiredContext);\r\n        setoutcome(task.outcome);\r\n        setnote(task.note);\r\n        setdueDate(task.dueDate);\r\n    }, [task.name, task.requiredContext, task.outcome, task.note, task.dueDate, task.timeSpent, activeSince, activeTask, task.id, dateNow ])\r\n\r\n    //console.log(task.id)\r\n    \r\n\r\n    return (\r\n        <div className='' >\r\n            <div>\r\n                <div className='w-100 pa2 pb3' >\r\n                    {/* <h3 className='fw7 b white pb2'>{task.name}</h3>\r\n                    <h4 className='fw1 white'>{task.requiredContext}</h4> */}\r\n                    <input type='text' onChange={(e)=> {setName(e.target.value);} } onBlur={() =>task.name=name} value={name} className='bn fw7 b white bg-transparent' />\r\n                    <input type='text' onChange={(e)=> {setrequiredContext(e.target.value);} } onBlur={() =>task.requiredContext=requiredContext} value={requiredContext} className='fw1 white bn bg-transparent' />\r\n                </div>\r\n                <div className='w-100 pl2 pb3'>\r\n                    <h5 className='fw3 white'>Outcome: </h5>\r\n                    {/* <h5 className='fw3 white'>{task.outcome} </h5> */}\r\n                    <textarea rows=\"2\" cols=\"45\" onChange={(e)=> {setoutcome(e.target.value);} } onBlur={() =>task.outcome=outcome} value={outcome} className='w-80 fw3 white bn bg-transparent' />\r\n                </div>\r\n                <div className='w-100 pl2 pb3 flex justify-between'>\r\n                    {/* <h5 className='fw3 white'>Due: {task.dueDate} </h5> */}\r\n                    <h5 className='fw3 white'>Time Required: {task.timeRequired}</h5>\r\n                    <DatePicker item={task} dueDate={dueDate} />\r\n                    {/* <input type='date' defaultValue={dueDate} onChange={(e)=> {setdueDate(e.target.value);} } onBlur={() =>task.dueDate=dueDate} className='fw3 white bn bg-transparent' /> */}\r\n                    {/* <input type='text' onChange={(e)=> {setrequiredContext(e.target.value);} } onBlur={() =>task.outcome=outcome} value={outcome} className='fw3 white bn bg-transparent' /> */}\r\n                </div>\r\n                <div className='w-100 pl2 pb3 flex justify-between'>\r\n                    {/* <h5 className='fw3 white'>Time Spent: {task.timeSpent}</h5> */}\r\n                    <Timer timeSpent={task.timeSpent} task={task} />\r\n                    <h5 className='fw3 white'>Time Remaining: 12:34:50 </h5>\r\n                </div>\r\n                <h5 className='fw3 white'>Status: {task.status}</h5>\r\n                <h5 className='bb b--white pa2 fw3 white b' >NOTE</h5>\r\n                <div className='pa2'>\r\n                    {/* <p className='fw3 white'>{task.note}</p> */}\r\n                    <textarea rows=\"4\" cols=\"45\" onChange={(e)=> {setnote(e.target.value);} } onBlur={ () =>task.note=note } value={note} className='fw3 white bn bg-transparent' />\r\n                </div>\r\n                <TaskControls task={task} position={position} />\r\n                {/* <button className=\"button\" onClick={startTimer}>START</button>\r\n                <button className=\"button\" onClick={markAsDone}>DONE</button> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport List from './List';\r\nimport { MISSION } from '../constants';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp, RestorePreviousState } from '../actions';\r\nimport { TaskList } from '../TaskList';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        previousState: state.RestorePreviousStateReducer.previousState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        },\r\n        restorePreviousState: (previousState) => {\r\n            return dispatch(RestorePreviousState(previousState))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails);\r\n\r\nfunction ProjectDetails({ project, view, changeItemID }) {\r\n    \r\n\r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n    \r\n    function getTasks(){\r\n        let tasks = [];\r\n        if(project.taskList !== []){\r\n            for(let i=0; i<project.taskList.length; i++){\r\n                for(let j=0; j<TaskList.length; j++){\r\n                    if(project.taskList[i] === TaskList[j].id ){\r\n                        tasks.push(TaskList[j]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(tasks);\r\n        return tasks;\r\n    }\r\n\r\n    const projectTasks = getTasks();\r\n\r\n    return (\r\n        <div>\r\n            <div className='w-100 pa2 pb3' >\r\n                <h3 className='fw7 b white pb2'>{project.name}</h3>\r\n                <h4 className='fw1 white'>{project.type}</h4>\r\n            </div>\r\n            <div className='w-100 pl2 pb3'>\r\n                <h5 className='fw3 white'>Outcome: </h5>\r\n                <h5 className='fw3 white'>{project.outcome} </h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3'>\r\n                <h5 className='fw3 white'>Purpose: </h5>\r\n                <h5 className='fw3 white'>{project.purpose} </h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3 flex justify-between'>\r\n                <h5 className='fw3 white'>Due: {project.dueDate} </h5>\r\n                <h5 className='fw3 white'>Time Required: {project.timeRequired}</h5>\r\n            </div>\r\n            <div className='w-100 pl2 pb3 flex justify-between'>\r\n                <h5 className='fw3 white'>Status: {project.status}</h5>\r\n                <h5 className='fw3 white'>Time Remaining: 12:34:50 </h5>\r\n            </div>\r\n            <h5 className='bb b--white pa2 fw3 white b' >TASKS</h5>\r\n            <div className='pa2'>\r\n                <List content={projectTasks} filter={MISSION} touchFunction={passKey} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, RestorePreviousState } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        previousItemID: state.selectItemReducer.previousItemID,\r\n        exp: state.UpdateExpReducer.exp,\r\n        previousState: state.RestorePreviousStateReducer.previousState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        restorePreviousState: (previousState) => {\r\n            return dispatch(RestorePreviousState(previousState))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BackButton);\r\n\r\n\r\n\r\nfunction BackButton({ restorePreviousState, previousState, changeItemID, onTouch, previousView, previousItemID, id }) {\r\n\r\n    function goBack(){\r\n        //onTouch(previousView)\r\n        changeItemID(id);\r\n        \r\n    }\r\n    return (\r\n        <div className='whiteB w3 h3 flex items-center justify-center' onClick={goBack}>\r\n            <h1 className=' white b f8 fw9 ma0'>&lt;</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReferenceDetails);\r\n\r\n\r\nfunction ReferenceDetails({ id , changeItemID, updateExp }) {\r\n\r\n    const db = ReferenceList;\r\n    let reference = {};\r\n    //let position;\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           reference = db[i];\r\n           //position = i;\r\n           break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                <div className='w-100 pa2 pb3' >\r\n                    <h3 className='fw7 b white pb2'>{reference.name}</h3>\r\n                    <h5 className='fw3 white'>Status: {reference.status}</h5>\r\n                </div>\r\n                <h5 className='bb b--white pa2 fw3 white b' >Description</h5>\r\n                <div className='pa2'>\r\n                    <p className='fw3 white'>{reference.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM, REFERENCE } from '../constants';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport ItemDetails from '../components/ItemDetails';\r\nimport TaskDetails from '../components/TaskDetails';\r\nimport ProjectDetails from '../components/ProjectDetails';\r\nimport BackButton from '../components/BackButton';\r\nimport PrevItemButton from '../components/PrevItemButton';\r\nimport NextItemButton from '../components/NextItemButton';\r\nimport ReferenceDetails from '../components/ReferenceDetails';\r\n\r\nexport default function Details( { content, itemID, touchFunction, updateExp, selectAnother }){\r\n    let itemType, item;\r\n    let prev = itemID;\r\n    let next = itemID;\r\n    let db = content;\r\n    const id = parseInt(itemID);\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n        itemType = db[i].type;\r\n        item = db[i];\r\n\r\n        if((db[i-1]) && db[i-1].type === itemType){\r\n            prev = db[i-1].id;\r\n        }\r\n        if((db[i+1]) && db[i+1].type === itemType){\r\n            next = db[i+1].id;\r\n        }\r\n        break;\r\n        }\r\n    }\r\n\r\n\r\n    switch(itemType) {\r\n        case PROJECT:\r\n            return (\r\n                <div className='w-100 center br1 pa3 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <ProjectDetails project={item} touchFunction={touchFunction} updateExp={updateExp}/>\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='h-100 w-100 center br1 ba b--black-10 '>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>Task</h1>\r\n                    <TaskDetails id={parseInt(itemID)} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='h-100 w-100 center br1 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>Inbox Item</h1>\r\n                    <ItemDetails id={parseInt(itemID)} touchFunction={touchFunction} selectAnother={selectAnother} prevID={prev} nextID={next} />\r\n                </div>        \r\n            )\r\n        case REFERENCE:\r\n            return (\r\n                <div className='h-100 w-100 center br1 ba b--black-10'>\r\n                    <BackButton id={0} />\r\n                    <h1 className='tc b gold'>REFERENCE</h1>\r\n                    <ReferenceDetails id={parseInt(itemID)} />\r\n                    <div className='flex justify-between self-end'>\r\n                        <PrevItemButton selectAnother={selectAnother} prevID={prev} currentID={itemID} />\r\n                        <NextItemButton selectAnother={selectAnother} nextID={next} currentID={itemID} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 ba b--black-10 pb2'>\r\n                    <BackButton />\r\n                    <h1 className='tc b white'>Error</h1>\r\n                    <p>Item Not Found</p>\r\n                    <NewItemButton touchFunction={touchFunction} />\r\n                </div>        \r\n            )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UpdateTaskStatus, SetActiveTask, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeTask: state.SetActiveTaskReducer.activeTask,\r\n        status: state.UpdateTaskStatusReducer.taskStatus,\r\n        activeSince: state.SetActiveTaskReducer.activeSince,\r\n        timeNow: state.SetActiveTaskReducer.timeNow\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateTaskStatus: (status) => {\r\n            return dispatch(UpdateTaskStatus(status))\r\n        },\r\n        setActiveTask: (task) => {\r\n            return dispatch(SetActiveTask(task))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveTaskTimer);\r\n\r\nfunction ActiveTaskTimer({changeItemID, activeSince, activeTask}) {\r\n    const dateNow = (new Date()).getTime();\r\n    const timeSpent = activeTask.timeSpent + (dateNow - activeSince);\r\n\r\n    let s = timeSpent;\r\n    let ms = s % 1000;\r\n    s = (s - ms) / 1000;\r\n    let secs = s % 60;\r\n    s = (s - secs) / 60;\r\n    let mins = s % 60;\r\n    let hrs = (s - mins) / 60;\r\n\r\n    const [seconds, setSeconds] = useState(secs);\r\n    const [minutes, setminutes] = useState(mins);\r\n    const [hours, sethours] = useState(hrs);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    if( (parseInt(activeTask.id) !== undefined) && isActive === false){\r\n        setIsActive(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if ( isActive ) {\r\n        interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n            if(seconds >= 59){\r\n                setminutes(minutes => minutes +1);\r\n                setSeconds(0);\r\n                if(minutes >= 59){\r\n                    sethours(hours => hours +1);\r\n                    setminutes(0);\r\n                }\r\n            }\r\n        }, 1000);\r\n        } else if (!isActive && seconds !== 0) {\r\n        clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [ isActive, seconds, minutes, hours ]);\r\n\r\n    function goToTask(event){\r\n        event.stopPropagation();\r\n        changeItemID(activeTask.id)\r\n    }\r\n\r\n    switch(activeTask.id){\r\n        case undefined:\r\n            return (\r\n                <div></div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"\" onClick={goToTask} >\r\n                    <div className=\" pt3 \">\r\n                        <h2 className=\"pa1 \">CURRENT TASK</h2>\r\n                        <h2 className=\"pa1 red \">{activeTask.name}</h2>\r\n                        <h2 className='pa1 fw3 b red'>{hours.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                        {minutes.toLocaleString(undefined,{minimumIntegerDigits: 2})}:\r\n                        {seconds.toLocaleString(undefined,{minimumIntegerDigits: 2})} </h2>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}","import React from 'react';\r\n//import React, { useState, useEffect } from 'react';\r\nimport ActiveTaskTimer from './ActiveTaskTimer';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { UpdateTaskStatus, SetActiveTask, selectItem } from '../actions';\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         activeTask: state.SetActiveTaskReducer.activeTask,\r\n//         status: state.UpdateTaskStatusReducer.taskStatus,\r\n//         activeSince: state.SetActiveTaskReducer.activeSince,\r\n//         timeNow: state.SetActiveTaskReducer.timeNow\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         updateTaskStatus: (status) => {\r\n//             return dispatch(UpdateTaskStatus(status))\r\n//         },\r\n//         setActiveTask: (task) => {\r\n//             return dispatch(SetActiveTask(task))\r\n//         },\r\n//         changeItemID: (id) => {\r\n//             return dispatch(selectItem(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(StatsOverview);\r\n\r\nexport default function StatsOverview({ touchFunction, exp }) {\r\n\r\n    return (\r\n        <article className=\"h-100 w-100 center bg-white pa2  \" title=\"STATS\" onClick={touchFunction}>\r\n            <div className=\"tc w-100 h-100\">\r\n                <h1 className=\"f2 mb0\">Amen Christ</h1>\r\n                <h3 className=\"f6 pa1 gray \">Engineer</h3>\r\n                <h4 className=\"f6 gray \">Exp: {exp}</h4>\r\n                <ActiveTaskTimer />\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { TaskList } from '../TaskList';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"TASKS\" onClick={touchFunction}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Tasks</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ TaskList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\nimport { ProjectList } from '../ProjectList';\r\n\r\n\r\nfunction ProjectsOverview({ touchFunction}) {\r\n    \r\n    return (\r\n        <article className=\"h-100 center bg-white ba b--black-10\" title=\"PROJECTS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Missions</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">{ ProjectList.length }</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"h-100 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">{ InboxItems.length }</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import { InboxItems } from './InboxItems';\r\nimport { ProjectList } from './ProjectList';\r\nimport { TaskList } from './TaskList';\r\n\r\nexport const db = InboxItems.concat(ProjectList, TaskList);","import React from 'react';\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemTile({ touchFunction }) {\r\n    return (\r\n        <div className='bg-white h-100 center w-100 flex items-center justify-center' title={NEW_ITEM} onClick={touchFunction}>\r\n            <div className='tc '>\r\n                <h3 className='' >Add New Item</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { TODAY } from '../constants';\r\n//import { TaskList } from '../TaskList';\r\n\r\nfunction TodaysMission({ touchFunction }) {\r\n\r\n    return (\r\n        <div className='flex items-center justify-center h-100 w-100 center bg-white pa1' title={TODAY} onClick={touchFunction}>\r\n            <h2 className='tc'>Today's<br />Mission</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodaysMission;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\n//import SkillsOverview from '../components/SkillsOverview';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { INBOX, INBOX_ITEM, UNPROCESSED, DAILY } from '../constants';\r\nimport { db } from '../db';\r\nimport './Home.css';\r\nimport NewItemTile from '../components/NewItemTile';\r\nimport TodaysMission from '../components/TodaysMission';\r\n// import DailyEx from '../components/DailyEx';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    \r\n    const { onTouch, changeItemID, exp } = props;\r\n\r\n    function selectItem(){\r\n    \r\n        for (let i=0; i<db.length; i++){\r\n            if (db[i].type === INBOX_ITEM && db[i].status === UNPROCESSED) {\r\n                changeItemID(db[i].id);\r\n                onTouch(INBOX)\r\n                break;\r\n            } else {\r\n                changeItemID(0);\r\n                onTouch(INBOX)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='h-100 pa1' >\r\n            <div className='pa1 ph1 h-40'>\r\n                <StatsOverview touchFunction={passTitle} exp={exp} />\r\n            </div>\r\n            <div className=\"flex justify-center h-20 \">\r\n                <div className='w-50 pa1'>\r\n                    <ProjectsOverview touchFunction={passTitle} />\r\n                </div>\r\n                <div className='w-50 pa1'>\r\n                    <TaskOverview touchFunction={passTitle} />\r\n                </div>\r\n            </div>\r\n            <div className='flex w-100 h-10 pa1'>\r\n                <NewItemTile touchFunction={passTitle} />\r\n            </div>\r\n            <div className=\"flex justify-center h-30\">\r\n                <div className=' w-50 h-100 pa1'>\r\n                   <TodaysMission touchFunction={passTitle} gotoItem={changeItemID} />\r\n                </div>\r\n                <div className=' w-50 h-100'>\r\n                    <div className=' w-100 h-50'>\r\n                        <div className=' h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white ' title={DAILY} onClick={passTitle} >\r\n                                <h4 className='tc'>Daily Exercises</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='h-50 pa1'>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white 'title='REFERENCES' onClick={passTitle}>\r\n                                <h4 className='tc'>References</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='w-100 h-50 flex'>\r\n                        <div className='w-50 h-100 pa1' onClick={selectItem}>\r\n                            <div className='flex items-center justify-center h-100 w-100 center bg-white pa1'>\r\n                                <h4 className='tc'>Process<br />Inbox</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className='w-50 h-100 pa1'>\r\n                            <InboxOverview touchFunction={passTitle}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function Stats() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns ba b--black-10'>\r\n            <h1 className='tc'>STATS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView, selectItem, UpdateExp } from '../actions';\r\nimport { PROJECTS, STATS, TASKS, INBOX, NEW_ITEM, TASK, MISSION, TODAY, DAILY, REFERENCES, OVERVIEW } from '../constants';\r\nimport List from '../components/List';\r\nimport { InboxItems } from '../InboxItems';\r\nimport { TaskList } from '../TaskList';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { ReferenceList } from '../ReferenceList';\r\nimport './Home.css';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport NewItem from '../components/NewItem';\r\nimport Details from './Details';\r\nimport Home from './Home';\r\nimport Stats from './Stats';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        previousView: state.selectViewReducer.previousView,\r\n        itemID: state.selectItemReducer.itemID,\r\n        exp: state.UpdateExpReducer.exp\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        },\r\n        updateExp: (exp) => {\r\n            return dispatch(UpdateExp(exp))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    \r\n    const { view, itemID, onTouch, changeItemID, previousView, updateExp, exp } = props;\r\n    \r\n    let type;\r\n\r\n    switch(previousView) {\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = MISSION;\r\n        break;\r\n        default:\r\n    }\r\n    \r\n    const db = InboxItems.concat(ProjectList, TaskList, ReferenceList);\r\n    \r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    const views = [ NEW_ITEM, PROJECTS, TASKS, INBOX, TODAY, DAILY, REFERENCES ];\r\n\r\n    switch( true) {\r\n        case (view === STATS):\r\n            return (\r\n                <Stats />\r\n            )\r\n        case (view === OVERVIEW && parseInt(itemID) !== 0 ):\r\n            return (\r\n                <div className='h-100 pa2 '>\r\n                        <div className='h-10'>\r\n                            <h5>EXP: {exp}</h5>\r\n                        </div>\r\n                        <div className='h-90 pa1'>\r\n                            <Details content={db} itemID={itemID} selectAnother={changeItemID} />\r\n                        </div>\r\n                    </div>\r\n            )\r\n        case views.indexOf(view) !== -1 :\r\n            if (itemID === \"0\" || itemID === 0) { // Imagine the id for list component = 0\r\n                if (view === NEW_ITEM) {\r\n                    return (\r\n                        <div className='h-100 pa2'>\r\n                            <div className=' h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90'>\r\n                                <NewItem submitFunction={passTitle} view={type} updateExp={updateExp} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className='h-100'>\r\n                            <div className='h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <div className='h-100 w-100 center pa1'>\r\n                                    <h1 className='tc b gold ma0 pb2'>{view}</h1>\r\n                                    <div className=' h-80 '>\r\n                                        <List content={db} filter={view} touchFunction={passKey}/>\r\n                                    </div>\r\n                                    <div className='h-10 flex w-100 content-end pa2'>\r\n                                        <NewItemButton touchFunction={passTitle} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <div className='h-100 pa2 '>\r\n                            <div className='h-10'>\r\n                                <h5>EXP: {exp}</h5>\r\n                            </div>\r\n                            <div className='h-90 pa1'>\r\n                                <Details content={db} itemID={itemID} selectAnother={changeItemID} />\r\n                            </div>\r\n                        </div>\r\n                )\r\n            }\r\n        default:\r\n            return (\r\n                <Home />\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView } from './actions';\r\nimport NavBar from './containers/NavBar';\r\nimport './App.css';\r\nimport Main from './containers/Main';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\n\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <div className='home-container'>\r\n                <Main />\r\n            </div>\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_VIEW, OVERVIEW, SELECT_ITEM, UPDATE_EXP, RESTORE_PREVIOUS_STATE, UPDATE_TASK_STATUS, SET_ACTIVE_TASK } from \"./constants\"\r\n\r\nconst initialState = {\r\n    itemID: 0,\r\n    previousItemID: 0,\r\n    exp: 0,\r\n    view: OVERVIEW,\r\n    previousView: OVERVIEW,\r\n    previousState: {},\r\n    taskStatus: ''\r\n}\r\n\r\nexport const RestorePreviousStateReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case RESTORE_PREVIOUS_STATE:\r\n            if(state.previousState === {}) {\r\n                break;\r\n            } else {\r\n                return Object.assign({}, state.previousState );\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const selectViewReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            // state.previousView.unshift(state.view);\r\n            return Object.assign({}, state, {view: action.payload, previousView: state.view, previousState: state});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const initialItemViewState = {\r\n//     project: 0,\r\n//     task: 0,\r\n//     itemID: 0 \r\n// }\r\n\r\nexport const selectItemReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case SELECT_ITEM:\r\n            return Object.assign({}, state, {itemID: action.payload, previousItemID: state.itemID, previousState: state});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const initialExpState = {\r\n//     exp: 0\r\n// }\r\n\r\nexport const UpdateExpReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case UPDATE_EXP:\r\n            return Object.assign({}, state, {exp: (state.exp + action.payload)});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const UpdateTaskStatusReducer = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case UPDATE_TASK_STATUS:\r\n            return Object.assign({}, state, {taskStatus: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialActiveTask = {\r\n    activeTask: {},\r\n    activeSince: null,\r\n    timeNow: (new Date()).getTime()\r\n}\r\n\r\nexport const SetActiveTaskReducer = (state=initialActiveTask, action={}) => {\r\n    switch(action.type){\r\n        case SET_ACTIVE_TASK:\r\n            return Object.assign({}, state, {activeTask: action.payload, activeSince: (new Date()).getTime() });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './tachyonBoost.css';\nimport { selectViewReducer, selectItemReducer, UpdateExpReducer, RestorePreviousStateReducer, UpdateTaskStatusReducer, SetActiveTaskReducer } from './reducers';\n\n\nconst rootReducer = combineReducers({\n  selectViewReducer, selectItemReducer, UpdateExpReducer, RestorePreviousStateReducer, UpdateTaskStatusReducer, SetActiveTaskReducer\n});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}