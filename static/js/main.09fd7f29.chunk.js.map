{"version":3,"sources":["serviceWorker.js","constants.js","reducers.js","actions.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","components/SkillsOverview.js","components/ListItem.js","components/Scroll.js","components/List.js","InboxItems.js","ProjectList.js","TaskList.js","db.js","components/TaskDetails.js","components/ProjectDetails.js","components/QuestionAndOptions.js","components/QuestionAndInput.js","containers/Processor.js","components/ItemDetails.js","components/NewItemButton.js","components/NewItem.js","containers/Home.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/SkillsButton.js","containers/NavBar.js","App2.js","index.js"],"names":["Boolean","window","location","hostname","match","TASK","INBOX_ITEM","initialHomeState","projects","tasks","inbox","project","task","itemID","view","initialItemViewState","selectView","item","type","payload","selectItem","StatsOverview","touchFunction","className","title","onClick","TaskOverview","ProjectsOverview","InboxOverview","SkillsOverview","ListItem","id","name","goal","associatedProject","entryDate","Scroll","props","style","overflowY","children","List","content","filter","filteredContent","entry","console","log","ListItems","map","i","key","InboxItems","description","status","ProjectList","output","outputRecordID","dueDate","timeRequired","timeRemaining","nextAction","taskList","TaskList","db","concat","TaskDetails","length","ProjectDetails","QuestionAndOptions","question","yes","no","QuestionandInput","submitFunction","useState","answer","setAnswer","onSubmit","event","preventDefault","value","onChange","e","target","Project","d","Date","this","getTime","setInterval","timeNow","Task","isDelegatable","connect","state","selectViewReducer","selectItemReducer","dispatch","onTouch","changeItemID","nextItemID","outcome","setOutcome","setIsActionable","action","setAction","isMultistep","setIsMultistep","isDoneInFive","setIsDoneInFive","setIsDelegatable","step","setStep","processNextItem","updateStatus","proceed","refresh","proj","unshift","makeNewProject","makeNewTask","ItemDetails","NewItemButton","Item","NewItem","setName","setDescription","passKey","checkForID","t","parentNode","passTitle","checkForTitle","itemType","parseInt","HomeButton","ProjectsButton","TasksButton","InboxButton","SkillsButton","changeView","useEffect","rootReducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.09fd7f29.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\nexport const PROJECT = 'PROJECT';\r\nexport const TASK = 'TASK';\r\nexport const INBOX_ITEM = 'INBOX_ITEM';\r\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const NEW_ITEM = 'NEW_ITEM';\r\nexport const UNPLANNED = 'UNPLANNED';\r\nexport const UNPROCESSED = 'UNPROCESSED';\r\nexport const PROCESSED = 'PROCESSED';\r\nexport const PENDING = 'PENDING';\r\nexport const DELEGATION_PENDING = 'DELEGATION_PENDING';\r\n//STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED","import { CHANGE_VIEW, OVERVIEW, SELECT_ITEM } from \"./constants\"\r\n\r\nconst initialHomeState = {\r\n    projects: 0,\r\n    tasks: 0,\r\n    inbox: 0,\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0,\r\n    view: OVERVIEW \r\n}\r\n\r\nexport const selectViewReducer = (state=initialHomeState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            return Object.assign({}, state, {view: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialItemViewState = {\r\n    project: 0,\r\n    task: 0,\r\n    itemID: 0 \r\n}\r\n\r\nexport const selectItemReducer = (state=initialItemViewState, action={}) => {\r\n    switch(action.type){\r\n        case SELECT_ITEM:\r\n            return Object.assign({}, state, {itemID: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {CHANGE_VIEW, SELECT_PROJECT, SELECT_TASK, SELECT_ITEM} from './constants';\r\n\r\nexport const selectView = (item) => {\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\nexport const selectProject = (projectID) => {\r\n    return {\r\n    type: SELECT_PROJECT,\r\n    payload: projectID\r\n}};\r\n\r\nexport const selectTask = (taskID) => {\r\n    return {\r\n    type: SELECT_TASK,\r\n    payload: taskID\r\n}};\r\n\r\nexport const selectItem = (itemID) => {\r\n    return {\r\n    type: SELECT_ITEM,\r\n    payload: itemID\r\n}};\r\n","import React from 'react';\r\n\r\nfunction StatsOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"w-90 h-50 center bg-white br1 pa3 pa4-ns ba b--black-10\" title=\"STATS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Amen Christ</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Engineer</h2>\r\n                <h2 className=\"f5 fw4 gray mt0\">Exp: 50</h2>\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\nexport default StatsOverview;\r\n\r\n","import React from 'react';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"TASKS\" onClick={touchFunction}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">3/5</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Tasks</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\n\r\n\r\nfunction ProjectsOverview({ touchFunction}) {\r\n    \r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"PROJECTS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Projects</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">1/6</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">23</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import React from 'react';\r\n\r\nfunction SkillsOverview({ touchFunction }) {\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"SKILLS\" onClick={touchFunction}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Lvl 1</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Skills</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SkillsOverview;","import React from 'react';\r\nimport { PROJECT, TASK, INBOX_ITEM } from '../constants';\r\n\r\n\r\nexport default function ListItem( { touchFunction, item }){    \r\n\r\n    switch(item.type){\r\n        case PROJECT:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.goal}</p>\r\n                </div>\r\n            )\r\n        case TASK:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.associatedProject.name}</p>\r\n                </div>\r\n            )\r\n        case INBOX_ITEM:\r\n            return (\r\n                <div className='bb' id={item.id} onClick={touchFunction}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.entryDate}</p>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='bb' title='new item' onClick={touchFunction}>\r\n                    <h3>Enter New Item</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div className='ba h-75 pl2 pr2' style={{overflowY: 'scroll'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Scroll from './Scroll';\r\nimport { TASK, TASKS, PROJECTS, PROJECT, INBOX_ITEM } from '../constants';\r\n\r\nexport default function List({ touchFunction, content, filter }) {\r\n\r\n    let type = '';\r\n    switch(filter){\r\n        case TASKS:\r\n            type = TASK;\r\n        break;\r\n        case PROJECTS:\r\n            type = PROJECT;\r\n            break;\r\n        default:\r\n            type = INBOX_ITEM;\r\n    }\r\n\r\n    const filteredContent = content.filter((entry) => (entry.type === type))\r\n    console.log(filteredContent);\r\n    const ListItems = filteredContent.map((entry,i) => {\r\n        return <ListItem item={filteredContent[i]} touchFunction={touchFunction} key={content[i].id}/>\r\n    })\r\n    return (\r\n        <Scroll>\r\n            {ListItems}\r\n        </Scroll>\r\n    )\r\n}","import { INBOX_ITEM, UNPROCESSED } from \"./constants\";\r\n\r\nexport const InboxItems = [\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 1,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 1',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 2,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 2',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED       \r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 3,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 3',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 4,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 4',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 5,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 5',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 6,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 6',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 7,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 7',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n    ,{\r\n        type: INBOX_ITEM,\r\n        id: 8,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 8',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 9,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 9',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    },\r\n    {\r\n        type: INBOX_ITEM,\r\n        id: 10,\r\n        entryDate: 1212123443,\r\n        name: 'Random Input 10',\r\n        description: 'Optional details on input',\r\n        status: UNPROCESSED\r\n    }\r\n]","import { PROJECT, UNPLANNED } from \"./constants\";\r\n\r\nexport const ProjectList = [\r\n    {\r\n        type: PROJECT,\r\n        id: 11,\r\n        name: 'Project 1',\r\n        description: 'About Project 1',\r\n        goal: 'What done looks like for Project 1',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds (Average Time it has historically taken for the whole project to be completed by you or someone else)\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED, //STARTED, ONGOING, NOT_STARTED, COMPLETED, UNPLANNED, UNFINISHED\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action',\r\n            output: 'recordable product of task completion' //information, document etc\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 12,\r\n        name: 'Project 2',\r\n        description: 'About Project 2',\r\n        goal: 'What done looks like for Project 2',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: UNPLANNED,\r\n        nextAction: {\r\n            id: 17,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 13,\r\n        name: 'Project 3',\r\n        description: 'About Project 3',\r\n        goal: 'What done looks like for Project 3',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 14,\r\n        name: 'Project 4',\r\n        description: 'About Project 4',\r\n        goal: 'What done looks like for Project 4',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: PROJECT,\r\n        id: 15,\r\n        name: 'Project 5',\r\n        description: 'About Project 5',\r\n        goal: 'What done looks like for Project 5',\r\n        output: 'Recordable proof of completed project',\r\n        outputRecordID: null, //Assigned on completion\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 2629746, //In seconds\r\n        timeRemaining: 2629746,\r\n        status: 'NOT_STARTED',\r\n        nextAction: {\r\n            id: 16,\r\n            task: 'First physical action'\r\n        },\r\n        taskList: [\r\n            {\r\n                id: 1,\r\n                task: 'A physical action'\r\n            },\r\n            {\r\n                id: 2,\r\n                task: 'Another physical action'\r\n            }\r\n        ]\r\n    }\r\n]","import { TASK } from \"./constants\";\r\n\r\nexport const TaskList = [\r\n    {\r\n        type: TASK,\r\n        id: 16,\r\n        name: 'Task 1',\r\n        description: 'About Task 1',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED, DEFERRED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 17,\r\n        name: 'Task 2',\r\n        description: 'About Task 2',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 18,\r\n        name: 'Task 3',\r\n        description: 'About Task 3',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 19,\r\n        name: 'Task 4',\r\n        description: 'About Task 4',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    },\r\n    {\r\n        type: TASK,\r\n        id: 20,\r\n        name: 'Task 5',\r\n        description: 'About Task 5',\r\n        output: 'recordable product of task completion',\r\n        outputRecordID: 0, //Assigned on task completion\r\n        associatedProject: {\r\n            id: 11,\r\n            name: 'Project 1',\r\n            goal: 'What done looks like for Project 1'\r\n        },\r\n        dueDate: 1591012800, //gmt timestamp\r\n        timeRequired: 900, //In seconds\r\n        status: 'PENDING' //PENDING, STARTED, UNFINISHED, DEFERED, NOT_STARTED, COMPLETED\r\n    }\r\n]","import { InboxItems } from './InboxItems';\r\nimport { ProjectList } from './ProjectList';\r\nimport { TaskList } from './TaskList';\r\n\r\nexport const db = InboxItems.concat(ProjectList, TaskList);","import React from 'react';\r\nimport { db } from '../db';\r\n\r\n\r\n\r\nexport default function TaskDetails({ id , touchFunction }) {\r\n\r\n    let task = {};\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           task = db[i];\r\n           break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {task.id}</h5>\r\n                <h5>Name: {task.name}</h5>\r\n                <h5>Output: {task.output} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{task.description}</p>\r\n            </div>\r\n            <div >\r\n                <h5>Associated Project: <span id={task.associatedProject.id} onClick={touchFunction}>{task.associatedProject.name}</span></h5>\r\n                <h5>Due Date: {task.dueDate}</h5>\r\n                <h5>Time Required: {task.timeRequired}</h5>\r\n                <p>Status: {task.status}</p>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Next Action: </h5>\r\n                <p>{project.nextAction}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { db } from '../db';\r\n\r\nexport default function ProjectDetails({ id, touchFunction }) {\r\n\r\n    let project = {};\r\n\r\n    for (let i=0; i<db.length; i++){\r\n\r\n        if (db[i].id === id){\r\n           project = db[i];\r\n           break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div >\r\n                <h5>ID: {project.id}</h5>\r\n                <h5>Name: {project.name}</h5>\r\n                <h5>Goal: {project.goal} </h5>\r\n            </div>\r\n            <div className='show'>\r\n                <h5>Description</h5>\r\n                <p>{project.description}</p>\r\n            </div>\r\n            <div >\r\n                <h5>Output: {project.output} </h5>\r\n                <h5>Due Date: {project.dueDate}</h5>\r\n                <h5>Time Required: {project.timeRequired}</h5>\r\n                <p>Time Remaining: {project.timeRemaining}</p>\r\n                <p>Status: {project.status}</p>\r\n            </div>\r\n            <div>\r\n                <h5>Next Action: </h5>\r\n                <h5><span id={project.nextAction.id} onClick={touchFunction}>{project.nextAction.task}</span></h5>\r\n            </div>\r\n            {/* <div>\r\n                <h5>Task List</h5>\r\n                <p>{project.taskList}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function QuestionAndOptions({ question, yes, no }) {\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h2>{question}</h2>\r\n            <button className=\"button\" onClick={yes}>YES</button>\r\n            <button className=\"button\" onClick={no} >NO</button>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function QuestionandInput({ question, submitFunction }) {\r\n\r\n    const [ answer, setAnswer ] = useState('');\r\n\r\n    function submit(event) {\r\n\r\n        if(answer !==''){\r\n            submitFunction(answer);\r\n            setAnswer('');\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h2>{question}</h2>\r\n            <form onSubmit={submit}>\r\n                <input type='text' value={answer} onChange={(e)=> setAnswer(e.target.value)} />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport QuestionAndOptions from '../components/QuestionAndOptions';\r\nimport QuestionandInput from '../components/QuestionAndInput';\r\nimport { ProjectList } from '../ProjectList';\r\nimport { TaskList } from '../TaskList';\r\nimport { PROJECT, UNPLANNED, PROCESSED, TASK, PENDING, UNPROCESSED } from '../constants';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Project{\r\n    constructor(name, goal) {\r\n        const d = new Date();\r\n        this.type = PROJECT;        \r\n        this.id = d.getTime();\r\n        this.name = name;\r\n        this.description = '';\r\n        this.goal = goal;\r\n        this.output = null;\r\n        this.outputRecordID = null;\r\n        this.dueDate = (d.getTime() + 7776000000); // 3 months from the date the project is planned \r\n        this.timeRequired = 7776000000;\r\n        this.timeRemaining = setInterval(()=> {\r\n            let timeNow = (new Date()).getTime();\r\n            return (this.dueDate - timeNow)\r\n        }, 1);\r\n        this.status = UNPLANNED;\r\n        this.nextAction = {};\r\n        this.taskList = [];\r\n    }\r\n}\r\n\r\nclass Task{\r\n    constructor(name,output, isDelegatable) {\r\n        const d = new Date();\r\n        this.type = TASK;        \r\n        this.id = d.getTime();\r\n        this.name = name;\r\n        this.description = '';\r\n        this.output = output;\r\n        this.outputRecordID = 0;\r\n        this.timeRequired = null; \r\n        this.status = PENDING;\r\n        this.isDelegatable = isDelegatable;\r\n        this.associatedProject = {};\r\n        this.dueDate = null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Processor({ nextItemID, item, touchFunction, changeItemID }) {\r\n    //actionable?\r\n    //action\r\n    //multistep?\r\n    //done in 5?\r\n    //delegatable?\r\n    //project outcome\r\n\r\n\r\n    const [ outcome, setOutcome ] = useState('');\r\n    const [ isActionable, setIsActionable ] = useState(null);\r\n    const [ action, setAction ] = useState('');\r\n    const [ isMultistep, setIsMultistep ] = useState(null);\r\n    const [ isDoneInFive, setIsDoneInFive ] = useState(null);\r\n    const [ isDelegatable, setIsDelegatable ] = useState(null);\r\n    const [ step, setStep ] = useState(0);\r\n\r\n    function processNextItem(e){\r\n        setStep(0);\r\n        touchFunction(e);\r\n    }\r\n\r\n    function makeNewProject(){\r\n        let proj = new Project( action, outcome );\r\n        ProjectList.unshift(proj);\r\n        updateStatus();\r\n        refresh();\r\n    }\r\n\r\n    function makeNewTask(){\r\n        let task = new Task( action, outcome, isDelegatable);\r\n        TaskList.unshift(task);\r\n        updateStatus();\r\n    }\r\n    function updateStatus() {\r\n        item.status = PROCESSED;\r\n    }\r\n\r\n    function proceed() {\r\n        setStep((step+1));\r\n    }\r\n\r\n    function refresh(){\r\n        changeItemID(item.id);\r\n    }\r\n    if (item.status === UNPROCESSED && step === 0){\r\n        console.log(step)\r\n        proceed();\r\n    }\r\n\r\n    switch(true) {\r\n        case ( step === 1 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Is this Actionable?' yes={() => { setIsActionable(true); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 2 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What does 'DONE' look like?\" submitFunction={(answer) => { setOutcome(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 3 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionandInput question=\"What's the next action?\" submitFunction={(answer) => { setAction(answer); proceed() }} />\r\n                </div>\r\n            )\r\n        case ( step === 4 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Does the next action require more than one step?' yes={() => { setIsMultistep(true); proceed();  makeNewProject() } } no={() => { setIsMultistep(false); proceed();} } />\r\n                </div>\r\n            )\r\n        case ( isMultistep === true && step === 5 ):\r\n            // New project was added and page refreshed\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>A new Project has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n        case ( isMultistep === false && step === 5 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Would it take more than 5 minutes to do?' yes={() => { setIsDoneInFive(false); proceed() }} no={() => { setIsDoneInFive(true); proceed() }} />\r\n                </div>\r\n            )\r\n        case (isDoneInFive === true && step === 6):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>LET'S DO IT!</h3>\r\n                    <h2>TIMER</h2>\r\n                    <p>Once timer is done, you get the option to mark as completed. You also get the option ot defer the action.</p>\r\n                    <button className=\"button\" onClick={() => { updateStatus(); setStep(0); refresh() }} >DONE</button>\r\n                </div>\r\n            )\r\n        case ( isDoneInFive === false && step === 6 ):\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <QuestionAndOptions question='Can this task be delegated?' yes={() => { setIsDelegatable(true); updateStatus(); refresh(); proceed(); }} no={() => { setIsDelegatable(false); updateStatus(); refresh(); proceed(); }} />\r\n                </div>\r\n            )\r\n        case ( step === 7 ):\r\n            makeNewTask();\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <h3>A new Task has been added</h3>\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className='h-100 w-100 center br1 pa3 ba b--black-10 show ' >\r\n                    <button className=\"button\" id={nextItemID} onClick={processNextItem} >PROCESS NEXT ITEM</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Processor);","import React from 'react';\r\nimport { InboxItems } from '../InboxItems';\r\nimport Processor from '../containers/Processor'\r\n\r\nexport default function ItemDetails({ id, touchFunction }) {\r\n\r\n    let item = {};\r\n    let nextItemID = null;\r\n    for (let i=0; i<InboxItems.length; i++){\r\n\r\n        if (InboxItems[i].id === id){\r\n           item = InboxItems[i];\r\n           nextItemID = InboxItems[i+1].id;\r\n           break;\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <h5>ID: {item.id}</h5>\r\n            <h5>Name: {item.name}</h5>\r\n            <h5>Entry Date: {item.entryDate} </h5>\r\n            <p>Description: {item.description}</p>\r\n            <h5>status: {item.status} </h5>\r\n            <Processor item={item} nextItemID={nextItemID} touchFunction={touchFunction} />\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { NEW_ITEM } from '../constants'\r\n\r\nexport default function NewItemButton({ touchFunction }) {\r\n    return (\r\n        <div className='show w3 h3' title={NEW_ITEM} onClick={touchFunction}>\r\n            <h3 className='tc'>N</h3>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { INBOX_ITEM, INBOX } from '../constants';\r\nimport { db } from '../db';\r\n\r\nclass Item{\r\n    constructor(name,description='None') {\r\n        const d= new Date();\r\n\r\n        this.type = INBOX_ITEM;\r\n        this.id = d.getTime();\r\n        this.entryDate = d.getTime();\r\n        this.name = name;\r\n        this.description = description;\r\n\r\n    }\r\n}\r\n\r\nexport default function NewItem({ submitFunction }) {\r\n\r\n    const [ name, setName ] = useState('');\r\n    const [ description, setDescription ] = useState('');\r\n\r\n    function submitNewItem(event) {\r\n        let i = new Item(name, description);\r\n        db.unshift(i);\r\n        submitFunction(event)\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n            <h1 className='tc'>NEW ITEM</h1>\r\n            <form onSubmit={submitNewItem} className='flex flex-column' title={INBOX}>\r\n                <input type='text' value={name} onChange={(e)=> setName(e.target.value)} />\r\n                <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\nimport SkillsOverview from '../components/SkillsOverview';\r\nimport { selectView, selectItem } from '../actions';\r\nimport { PROJECTS, STATS, TASKS, INBOX, PROJECT, TASK, INBOX_ITEM, SKILLS, NEW_ITEM } from '../constants';\r\n// import Projects from './Projects';\r\n// import Tasks from './Tasks';\r\n// import Skills from './Skills';\r\n// import Stats from './Stats';\r\n// import Inbox from './Inbox';\r\nimport List from '../components/List';\r\nimport { db } from '../db';\r\nimport './Home.css';\r\nimport TaskDetails from '../components/TaskDetails';\r\nimport ProjectDetails from '../components/ProjectDetails';\r\nimport ItemDetails from '../components/ItemDetails';\r\nimport NewItemButton from '../components/NewItemButton';\r\nimport NewItem from '../components/NewItem';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view,\r\n        itemID: state.selectItemReducer.itemID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    \r\n    const { view, itemID, onTouch, changeItemID } = props;\r\n    \r\n    function passKey(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForID(targ);\r\n        function checkForID (t) {\r\n            if (t.id) {\r\n                changeItemID(t.id);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForID (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    switch( (view === SKILLS || view === NEW_ITEM)|| ((view === PROJECTS || view === TASKS) || (view === STATS || view === INBOX)) ) {\r\n        // case PROJECTS:\r\n        //     return (\r\n        //         <Projects />\r\n        //     )\r\n        // case SKILLS:\r\n        //     return (\r\n        //         <Skills />\r\n        //     )\r\n        // case STATS:\r\n        //     return (\r\n        //         <Stats />\r\n        //     )\r\n        // case INBOX:\r\n        //     return (\r\n        //         <Inbox />\r\n        //     )\r\n        // case TASKS:\r\n        //     return (\r\n        //         <Tasks />\r\n        //     )\r\n        case true:\r\n            if (itemID === \"0\" || itemID === 0) {\r\n                if (view === NEW_ITEM) {\r\n                    return (\r\n                        <NewItem submitFunction={passTitle} />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                            <h1 className='tc'>{view}</h1>\r\n                            <List content={db} filter={view} touchFunction={passKey}/>\r\n                            <NewItemButton touchFunction={passTitle} />\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                let itemType = '';\r\n                const id = parseInt(itemID);\r\n                for (let i=0; i<db.length; i++){\r\n\r\n                    if (db[i].id === id){\r\n                    itemType = db[i].type;\r\n                    break;\r\n                    }\r\n                }\r\n                switch(itemType) {\r\n                    case PROJECT:\r\n                        return (\r\n                            <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                                <h1 className='tc'>Project</h1>\r\n                                <ProjectDetails id={parseInt(itemID)} touchFunction={passKey} />\r\n                                \r\n                            </div>        \r\n                        )\r\n                    case TASK:\r\n                        return (\r\n                            <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                                <h1 className='tc'>Task</h1>\r\n                                <TaskDetails id={parseInt(itemID)} touchFunction={passKey} />\r\n                                \r\n                            </div>        \r\n                        )\r\n                    case INBOX_ITEM:\r\n                        return (\r\n                            <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                                <h1 className='tc'>Inbox Item</h1>\r\n                                <ItemDetails id={parseInt(itemID)} touchFunction={passKey} />\r\n                                <NewItemButton touchFunction={passTitle} />\r\n                            </div>        \r\n                        )\r\n                    default:\r\n                        return (\r\n                            <div className='h-100 w-100 center br1 pa3 ba b--black-10'>\r\n                                <h1 className='tc'>Error</h1>\r\n                                <p>Item Not Found</p>\r\n                                <NewItemButton touchFunction={passTitle} />\r\n                            </div>        \r\n                        )\r\n                }\r\n            }\r\n        default:\r\n            return (\r\n                <div >\r\n                    <div className='pb3'>\r\n                        <StatsOverview touchFunction={passTitle} />\r\n                    </div>\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <ProjectsOverview touchFunction={passTitle} />\r\n                        <TaskOverview touchFunction={passTitle} />\r\n                    </div>\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <InboxOverview touchFunction={passTitle}/>\r\n                        <SkillsOverview touchFunction={passTitle}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white ba b--black-10' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>P</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"TASKS\" onClick={touchFunction}>\r\n            <h3 className='tc'>T</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"INBOX\" onClick={touchFunction}>\r\n            <h3 className='tc'>I</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function SkillsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white b--black-10 ba' title=\"SKILLS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport SkillsButton from '../components/SkillsButton';\r\nimport { selectView, selectItem } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeView: (title) => {\r\n            return dispatch(selectView(title))\r\n        },\r\n        changeItemID: (id) => {\r\n            return dispatch(selectItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { changeView, changeItemID  } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle(t) {\r\n            if (t.title) {\r\n                changeView(t.title);\r\n                changeItemID(0);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle(t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex'>\r\n            <InboxButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <HomeButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <SkillsButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectView } from './actions';\r\nimport Home from './containers/Home';\r\nimport NavBar from './containers/NavBar';\r\nimport './App2.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.selectViewReducer.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(selectView(title))\r\n        }\r\n    }\r\n}\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <div className='home-container'>\r\n                <Home touchFunction={onTouch} />\r\n            </div>\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './tachyonBoost.css';\nimport { selectViewReducer, selectItemReducer } from './reducers';\nimport App2 from './App2';\n\nconst rootReducer = combineReducers({selectViewReducer, selectItemReducer});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App2  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}