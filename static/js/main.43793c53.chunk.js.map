{"version":3,"sources":["serviceWorker.js","reducers.js","contants.js","actions.js","components/StatsOverview.js","components/TasksOverview.js","components/ProjectsOverview.js","components/InboxOverview.js","components/SkillsOverview.js","containers/Projects.js","containers/Tasks.js","containers/Skills.js","containers/Stats.js","containers/Inbox.js","containers/Home.js","components/HomeButton.js","components/ProjectsButton.js","components/TasksButton.js","components/InboxButton.js","components/SkillsButton.js","containers/NavBar.js","App2.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","projects","tasks","inbox","view","setView","item","console","log","type","payload","StatsOverview","touchFunction","className","title","onClick","e","checkForTitle","t","parentNode","target","TaskOverview","ProjectsOverview","InboxOverview","SkillsOverview","Projects","Tasks","Skills","Stats","Inbox","connect","state","dispatch","onTouch","props","useEffect","HomeButton","ProjectsButton","TasksButton","InboxButton","SkillsButton","passTitle","store","createStore","action","Object","assign","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43793c53.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_VIEW, OVERVIEW } from \"./contants\"\r\n\r\nconst initialState = {\r\n    projects: 0,\r\n    tasks: 0,\r\n    inbox: 0,\r\n    view: OVERVIEW \r\n}\r\n\r\nexport const selectView = (state=initialState, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_VIEW:\r\n            return Object.assign({}, state, {view: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","export const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const OVERVIEW = 'OVERVIEW';\r\nexport const PROJECTS = 'PROJECTS';\r\nexport const STATS = 'STATS';\r\nexport const SKILLS = 'SKILLS';\r\nexport const TASKS = 'TASKS';\r\nexport const INBOX = 'INBOX';\r\n","import {CHANGE_VIEW} from './contants';\r\n\r\nexport const setView = (item) => {\r\n    console.log(item);\r\n    return {\r\n    type: CHANGE_VIEW,\r\n    payload: item\r\n}};\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction StatsOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-90 h-50 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10\" title=\"STATS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Amen Christ</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Engineer</h2>\r\n                <h2 className=\"f5 fw4 gray mt0\">Exp: 50</h2>\r\n            </div>\r\n        </article>  \r\n    );\r\n}\r\n\r\nexport default StatsOverview;\r\n\r\n","import React from 'react';\r\n\r\nfunction TaskOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"TASKS\" onClick={passTitle}> \r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">3/5</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Tasks</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskOverview;","import React from 'react';\r\n\r\n\r\nfunction ProjectsOverview({ touchFunction }) {\r\n    // return target.parentNode\r\n    // if parentnode.title doesnt exist, return \r\n\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"PROJECTS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Projects</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">1/6</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ProjectsOverview;","import React from 'react';\r\n\r\nfunction InboxOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"INBOX\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">23</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Inbox</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InboxOverview;","import React from 'react';\r\n\r\nfunction SkillsOverview({ touchFunction }) {\r\n\r\n    function passTitle(e) {\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                 touchFunction(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className=\"w-40 center bg-white br1 ba b--black-10\" title=\"SKILLS\" onClick={passTitle}>\r\n            <div className=\"tc\">\r\n                <h1 className=\"f3 mb2\">Lvl 1</h1>\r\n                <h2 className=\"f5 fw4 gray mt0\">Skills</h2>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SkillsOverview;","import React from 'react';\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>PROJECTS</h1>\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nexport default function Tasks() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>TASKS</h1>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Skills() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>SKILLS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Stats() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>STATS</h1>\r\n        </div>       \r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Inbox() {\r\n    return (\r\n        <div className='h-75 w-90 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10'>\r\n            <h1 className='tc'>Inbox</h1>\r\n        </div>       \r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatsOverview from '../components/StatsOverview';\r\nimport TaskOverview from '../components/TasksOverview';\r\nimport ProjectsOverview from '../components/ProjectsOverview';\r\nimport InboxOverview from '../components/InboxOverview';\r\nimport SkillsOverview from '../components/SkillsOverview';\r\nimport { setView } from '../actions';\r\nimport Projects from './Projects';\r\nimport { PROJECTS, SKILLS, STATS, TASKS, INBOX } from '../contants';\r\nimport Tasks from './Tasks';\r\nimport Skills from './Skills';\r\nimport Stats from './Stats';\r\nimport Inbox from './Inbox';\r\nimport './Home.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(setView(title))\r\n        }\r\n    }\r\n}\r\nfunction Home(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n    const { view } = props;\r\n\r\n    switch(view) {\r\n        case PROJECTS:\r\n            return (\r\n                <Projects />\r\n            )\r\n        case SKILLS:\r\n            return (\r\n                <Skills />\r\n            )\r\n        case STATS:\r\n            return (\r\n                <Stats />\r\n            )\r\n        case INBOX:\r\n            return (\r\n                <Inbox />\r\n            )\r\n        case TASKS:\r\n            return (\r\n                <Tasks />\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"home-container\" >\r\n                    <StatsOverview touchFunction={onTouch} />\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <ProjectsOverview touchFunction={onTouch} />\r\n                        <TaskOverview touchFunction={onTouch} />\r\n                    </div>\r\n                    <div className=\"flex justify-center pb3 h-15\">\r\n                        <InboxOverview touchFunction={onTouch}/>\r\n                        <SkillsOverview touchFunction={onTouch}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\r\n\r\nexport default function HomeButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10' title=\"OVERVIEW\" onClick={touchFunction}>\r\n            <h3 className='tc'>H</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function ProjectsButton({touchFunction}) {\r\n    return (\r\n        <div className='w-20 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10' title=\"PROJECTS\" onClick={touchFunction}>\r\n            <h3 className='tc'>P</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function TasksButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10' title=\"TASKS\" onClick={touchFunction}>\r\n            <h1 className='tc'>T</h1>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function InboxButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10' title=\"INBOX\" onClick={touchFunction}>\r\n            <h1 className='tc'>I</h1>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function SkillsButton({ touchFunction }) {\r\n    return (\r\n        <div className='w-20 center bg-white br1 pa3 pa4-ns mv3 ba b--black-10' title=\"SKILLS\" onClick={touchFunction}>\r\n            <h3 className='tc'>S</h3>\r\n        </div>       \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ProjectsButton from '../components/ProjectsButton';\r\nimport TasksButton from '../components/TasksButton';\r\nimport InboxButton from '../components/InboxButton';\r\nimport SkillsButton from '../components/SkillsButton';\r\nimport { setView } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(setView(title))\r\n        }\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n    const { onTouch } = props;\r\n    function passTitle(e) {\r\n        //Takes the events target and checks for title attribute \r\n        //If no title attribute, check parent node for title attribute\r\n        //If not found, repeat step 2\r\n        let targ = e.target;\r\n        checkForTitle(targ)\r\n        function checkForTitle (t) {\r\n            if (t.title) {\r\n                onTouch(t.title);\r\n            } else {\r\n                t = t.parentNode;\r\n                checkForTitle (t);   \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='navbar center flex justify-between'>\r\n            <HomeButton touchFunction={passTitle} />\r\n            <ProjectsButton touchFunction={passTitle} />\r\n            <TasksButton touchFunction={passTitle} />\r\n            <SkillsButton touchFunction={passTitle} />\r\n            <InboxButton touchFunction={passTitle} />\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setView } from './actions';\r\nimport Home from './containers/Home';\r\nimport NavBar from './containers/NavBar';\r\nimport './App2.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        view: state.view\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTouch: (title) => {\r\n            return dispatch(setView(title))\r\n        }\r\n    }\r\n}\r\nfunction App2(props) {\r\n\r\n    useEffect(() => {\r\n       \r\n    })\r\n\r\n    const { onTouch } = props;\r\n\r\n    \r\n    return (\r\n        <div className=\"app \">\r\n            <Home touchFunction={onTouch} />\r\n            <NavBar touchFunction={onTouch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App2);\r\n\r\n\r\n//https://cdn.internetmultimediaonline.org/241F21/loveworldlive/ixilrao9.m3u8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { selectView } from './reducers';\nimport App2 from './App2';\n\nconst store = createStore(selectView);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App2  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}